{"mappings":"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","sources":["<anon>","src/static/highlight.min.js"],"sourcesContent":["/*!\n  Highlight.js v11.7.0 (git: 82688fad18)\n  (c) 2006-2022 undefined and other contributors\n  License: BSD-3-Clause\n */ var hljs = function() {\n    \"use strict\";\n    var e = {\n        exports: {}\n    };\n    function n(e) {\n        return e instanceof Map ? e.clear = e.delete = e.set = ()=>{\n            throw Error(\"map is read-only\");\n        } : e instanceof Set && (e.add = e.clear = e.delete = ()=>{\n            throw Error(\"set is read-only\");\n        }), Object.freeze(e), Object.getOwnPropertyNames(e).forEach((t)=>{\n            var a = e[t];\n            \"object\" != typeof a || Object.isFrozen(a) || n(a);\n        }), e;\n    }\n    e.exports = n, e.exports.default = n;\n    class t {\n        constructor(e){\n            void 0 === e.data && (e.data = {}), this.data = e.data, this.isMatchIgnored = !1;\n        }\n        ignoreMatch() {\n            this.isMatchIgnored = !0;\n        }\n    }\n    function a(e) {\n        return e.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n    }\n    function i(e, ...n) {\n        const t = Object.create(null);\n        for(const n in e)t[n] = e[n];\n        return n.forEach((e)=>{\n            for(const n in e)t[n] = e[n];\n        }), t;\n    }\n    const r = (e)=>!!e.scope || e.sublanguage && e.language;\n    class s {\n        constructor(e, n){\n            this.buffer = \"\", this.classPrefix = n.classPrefix, e.walk(this);\n        }\n        addText(e) {\n            this.buffer += a(e);\n        }\n        openNode(e) {\n            if (!r(e)) return;\n            let n = \"\";\n            n = e.sublanguage ? \"language-\" + e.language : ((e, { prefix: n })=>{\n                if (e.includes(\".\")) {\n                    const t = e.split(\".\");\n                    return [\n                        `${n}${t.shift()}`,\n                        ...t.map((e, n)=>`${e}${\"_\".repeat(n + 1)}`)\n                    ].join(\" \");\n                }\n                return `${n}${e}`;\n            })(e.scope, {\n                prefix: this.classPrefix\n            }), this.span(n);\n        }\n        closeNode(e) {\n            r(e) && (this.buffer += \"</span>\");\n        }\n        value() {\n            return this.buffer;\n        }\n        span(e) {\n            this.buffer += `<span class=\"${e}\">`;\n        }\n    }\n    const o = (e = {})=>{\n        const n = {\n            children: []\n        };\n        return Object.assign(n, e), n;\n    };\n    class l {\n        constructor(){\n            this.rootNode = o(), this.stack = [\n                this.rootNode\n            ];\n        }\n        get top() {\n            return this.stack[this.stack.length - 1];\n        }\n        get root() {\n            return this.rootNode;\n        }\n        add(e) {\n            this.top.children.push(e);\n        }\n        openNode(e) {\n            const n = o({\n                scope: e\n            });\n            this.add(n), this.stack.push(n);\n        }\n        closeNode() {\n            if (this.stack.length > 1) return this.stack.pop();\n        }\n        closeAllNodes() {\n            for(; this.closeNode(););\n        }\n        toJSON() {\n            return JSON.stringify(this.rootNode, null, 4);\n        }\n        walk(e) {\n            return this.constructor._walk(e, this.rootNode);\n        }\n        static _walk(e, n) {\n            return \"string\" == typeof n ? e.addText(n) : n.children && (e.openNode(n), n.children.forEach((n)=>this._walk(e, n)), e.closeNode(n)), e;\n        }\n        static _collapse(e) {\n            \"string\" != typeof e && e.children && (e.children.every((e)=>\"string\" == typeof e) ? e.children = [\n                e.children.join(\"\")\n            ] : e.children.forEach((e)=>{\n                l._collapse(e);\n            }));\n        }\n    }\n    class c extends l {\n        constructor(e){\n            super(), this.options = e;\n        }\n        addKeyword(e, n) {\n            \"\" !== e && (this.openNode(n), this.addText(e), this.closeNode());\n        }\n        addText(e) {\n            \"\" !== e && this.add(e);\n        }\n        addSublanguage(e, n) {\n            const t = e.root;\n            t.sublanguage = !0, t.language = n, this.add(t);\n        }\n        toHTML() {\n            return new s(this, this.options).value();\n        }\n        finalize() {\n            return !0;\n        }\n    }\n    function d(e) {\n        return e ? \"string\" == typeof e ? e : e.source : null;\n    }\n    function g(e) {\n        return m(\"(?=\", e, \")\");\n    }\n    function u(e) {\n        return m(\"(?:\", e, \")*\");\n    }\n    function b(e) {\n        return m(\"(?:\", e, \")?\");\n    }\n    function m(...e) {\n        return e.map((e)=>d(e)).join(\"\");\n    }\n    function p(...e) {\n        const n = ((e)=>{\n            const n = e[e.length - 1];\n            return \"object\" == typeof n && n.constructor === Object ? (e.splice(e.length - 1, 1), n) : {};\n        })(e);\n        return \"(\" + (n.capture ? \"\" : \"?:\") + e.map((e)=>d(e)).join(\"|\") + \")\";\n    }\n    function _(e) {\n        return RegExp(e.toString() + \"|\").exec(\"\").length - 1;\n    }\n    const h = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n    function f(e, { joinWith: n }) {\n        let t = 0;\n        return e.map((e)=>{\n            t += 1;\n            const n = t;\n            let a = d(e), i = \"\";\n            for(; a.length > 0;){\n                const e = h.exec(a);\n                if (!e) {\n                    i += a;\n                    break;\n                }\n                i += a.substring(0, e.index), a = a.substring(e.index + e[0].length), \"\\\\\" === e[0][0] && e[1] ? i += \"\\\\\" + (Number(e[1]) + n) : (i += e[0], \"(\" === e[0] && t++);\n            }\n            return i;\n        }).map((e)=>`(${e})`).join(n);\n    }\n    const E = \"[a-zA-Z]\\\\w*\", y = \"[a-zA-Z_]\\\\w*\", w = \"\\\\b\\\\d+(\\\\.\\\\d+)?\", N = \"(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)\", v = \"\\\\b(0b[01]+)\", O = {\n        begin: \"\\\\\\\\[\\\\s\\\\S]\",\n        relevance: 0\n    }, k = {\n        scope: \"string\",\n        begin: \"'\",\n        end: \"'\",\n        illegal: \"\\\\n\",\n        contains: [\n            O\n        ]\n    }, x = {\n        scope: \"string\",\n        begin: '\"',\n        end: '\"',\n        illegal: \"\\\\n\",\n        contains: [\n            O\n        ]\n    }, M = (e, n, t = {})=>{\n        const a = i({\n            scope: \"comment\",\n            begin: e,\n            end: n,\n            contains: []\n        }, t);\n        a.contains.push({\n            scope: \"doctag\",\n            begin: \"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)\",\n            end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n            excludeBegin: !0,\n            relevance: 0\n        });\n        const r = p(\"I\", \"a\", \"is\", \"so\", \"us\", \"to\", \"at\", \"if\", \"in\", \"it\", \"on\", /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, /[A-Za-z]+[-][a-z]+/, /[A-Za-z][a-z]{2,}/);\n        return a.contains.push({\n            begin: m(/[ ]+/, \"(\", r, /[.]?[:]?([.][ ]|[ ])/, \"){3}\")\n        }), a;\n    }, S = M(\"//\", \"$\"), A = M(\"/\\\\*\", \"\\\\*/\"), C = M(\"#\", \"$\");\n    var T = Object.freeze({\n        __proto__: null,\n        MATCH_NOTHING_RE: /\\b\\B/,\n        IDENT_RE: E,\n        UNDERSCORE_IDENT_RE: y,\n        NUMBER_RE: w,\n        C_NUMBER_RE: N,\n        BINARY_NUMBER_RE: v,\n        RE_STARTERS_RE: \"!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~\",\n        SHEBANG: (e = {})=>{\n            const n = /^#![ ]*\\//;\n            return e.binary && (e.begin = m(n, /.*\\b/, e.binary, /\\b.*/)), i({\n                scope: \"meta\",\n                begin: n,\n                end: /$/,\n                relevance: 0,\n                \"on:begin\": (e, n)=>{\n                    0 !== e.index && n.ignoreMatch();\n                }\n            }, e);\n        },\n        BACKSLASH_ESCAPE: O,\n        APOS_STRING_MODE: k,\n        QUOTE_STRING_MODE: x,\n        PHRASAL_WORDS_MODE: {\n            begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n        },\n        COMMENT: M,\n        C_LINE_COMMENT_MODE: S,\n        C_BLOCK_COMMENT_MODE: A,\n        HASH_COMMENT_MODE: C,\n        NUMBER_MODE: {\n            scope: \"number\",\n            begin: w,\n            relevance: 0\n        },\n        C_NUMBER_MODE: {\n            scope: \"number\",\n            begin: N,\n            relevance: 0\n        },\n        BINARY_NUMBER_MODE: {\n            scope: \"number\",\n            begin: v,\n            relevance: 0\n        },\n        REGEXP_MODE: {\n            begin: /(?=\\/[^/\\n]*\\/)/,\n            contains: [\n                {\n                    scope: \"regexp\",\n                    begin: /\\//,\n                    end: /\\/[gimuy]*/,\n                    illegal: /\\n/,\n                    contains: [\n                        O,\n                        {\n                            begin: /\\[/,\n                            end: /\\]/,\n                            relevance: 0,\n                            contains: [\n                                O\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        TITLE_MODE: {\n            scope: \"title\",\n            begin: E,\n            relevance: 0\n        },\n        UNDERSCORE_TITLE_MODE: {\n            scope: \"title\",\n            begin: y,\n            relevance: 0\n        },\n        METHOD_GUARD: {\n            begin: \"\\\\.\\\\s*[a-zA-Z_]\\\\w*\",\n            relevance: 0\n        },\n        END_SAME_AS_BEGIN: (e)=>Object.assign(e, {\n                \"on:begin\": (e, n)=>{\n                    n.data._beginMatch = e[1];\n                },\n                \"on:end\": (e, n)=>{\n                    n.data._beginMatch !== e[1] && n.ignoreMatch();\n                }\n            })\n    });\n    function R(e, n) {\n        \".\" === e.input[e.index - 1] && n.ignoreMatch();\n    }\n    function D(e, n) {\n        void 0 !== e.className && (e.scope = e.className, delete e.className);\n    }\n    function I(e, n) {\n        n && e.beginKeywords && (e.begin = \"\\\\b(\" + e.beginKeywords.split(\" \").join(\"|\") + \")(?!\\\\.)(?=\\\\b|\\\\s)\", e.__beforeBegin = R, e.keywords = e.keywords || e.beginKeywords, delete e.beginKeywords, void 0 === e.relevance && (e.relevance = 0));\n    }\n    function L(e, n) {\n        Array.isArray(e.illegal) && (e.illegal = p(...e.illegal));\n    }\n    function B(e, n) {\n        if (e.match) {\n            if (e.begin || e.end) throw Error(\"begin & end are not supported with match\");\n            e.begin = e.match, delete e.match;\n        }\n    }\n    function $(e, n) {\n        void 0 === e.relevance && (e.relevance = 1);\n    }\n    const z = (e, n)=>{\n        if (!e.beforeMatch) return;\n        if (e.starts) throw Error(\"beforeMatch cannot be used with starts\");\n        const t = Object.assign({}, e);\n        Object.keys(e).forEach((n)=>{\n            delete e[n];\n        }), e.keywords = t.keywords, e.begin = m(t.beforeMatch, g(t.begin)), e.starts = {\n            relevance: 0,\n            contains: [\n                Object.assign(t, {\n                    endsParent: !0\n                })\n            ]\n        }, e.relevance = 0, delete t.beforeMatch;\n    }, F = [\n        \"of\",\n        \"and\",\n        \"for\",\n        \"in\",\n        \"not\",\n        \"or\",\n        \"if\",\n        \"then\",\n        \"parent\",\n        \"list\",\n        \"value\"\n    ];\n    function U(e, n, t = \"keyword\") {\n        const a = Object.create(null);\n        return \"string\" == typeof e ? i(t, e.split(\" \")) : Array.isArray(e) ? i(t, e) : Object.keys(e).forEach((t)=>{\n            Object.assign(a, U(e[t], n, t));\n        }), a;\n        function i(e, t) {\n            n && (t = t.map((e)=>e.toLowerCase())), t.forEach((n)=>{\n                const t = n.split(\"|\");\n                a[t[0]] = [\n                    e,\n                    j(t[0], t[1])\n                ];\n            });\n        }\n    }\n    function j(e, n) {\n        return n ? Number(n) : ((e)=>F.includes(e.toLowerCase()))(e) ? 0 : 1;\n    }\n    const P = {}, K = (e)=>{\n        console.error(e);\n    }, H = (e, ...n)=>{\n        console.log(\"WARN: \" + e, ...n);\n    }, q = (e, n)=>{\n        P[`${e}/${n}`] || (console.log(`Deprecated as of ${e}. ${n}`), P[`${e}/${n}`] = !0);\n    }, Z = Error();\n    function G(e, n, { key: t }) {\n        let a = 0;\n        const i = e[t], r = {}, s = {};\n        for(let e = 1; e <= n.length; e++)s[e + a] = i[e], r[e + a] = !0, a += _(n[e - 1]);\n        e[t] = s, e[t]._emit = r, e[t]._multi = !0;\n    }\n    function W(e) {\n        ((e)=>{\n            e.scope && \"object\" == typeof e.scope && null !== e.scope && (e.beginScope = e.scope, delete e.scope);\n        })(e), \"string\" == typeof e.beginScope && (e.beginScope = {\n            _wrap: e.beginScope\n        }), \"string\" == typeof e.endScope && (e.endScope = {\n            _wrap: e.endScope\n        }), ((e)=>{\n            if (Array.isArray(e.begin)) {\n                if (e.skip || e.excludeBegin || e.returnBegin) throw K(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\"), Z;\n                if (\"object\" != typeof e.beginScope || null === e.beginScope) throw K(\"beginScope must be object\"), Z;\n                G(e, e.begin, {\n                    key: \"beginScope\"\n                }), e.begin = f(e.begin, {\n                    joinWith: \"\"\n                });\n            }\n        })(e), ((e)=>{\n            if (Array.isArray(e.end)) {\n                if (e.skip || e.excludeEnd || e.returnEnd) throw K(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\"), Z;\n                if (\"object\" != typeof e.endScope || null === e.endScope) throw K(\"endScope must be object\"), Z;\n                G(e, e.end, {\n                    key: \"endScope\"\n                }), e.end = f(e.end, {\n                    joinWith: \"\"\n                });\n            }\n        })(e);\n    }\n    function Q(e) {\n        function n(n, t) {\n            return RegExp(d(n), \"m\" + (e.case_insensitive ? \"i\" : \"\") + (e.unicodeRegex ? \"u\" : \"\") + (t ? \"g\" : \"\"));\n        }\n        class t {\n            constructor(){\n                this.matchIndexes = {}, this.regexes = [], this.matchAt = 1, this.position = 0;\n            }\n            addRule(e, n) {\n                n.position = this.position++, this.matchIndexes[this.matchAt] = n, this.regexes.push([\n                    n,\n                    e\n                ]), this.matchAt += _(e) + 1;\n            }\n            compile() {\n                0 === this.regexes.length && (this.exec = ()=>null);\n                const e = this.regexes.map((e)=>e[1]);\n                this.matcherRe = n(f(e, {\n                    joinWith: \"|\"\n                }), !0), this.lastIndex = 0;\n            }\n            exec(e) {\n                this.matcherRe.lastIndex = this.lastIndex;\n                const n = this.matcherRe.exec(e);\n                if (!n) return null;\n                const t = n.findIndex((e, n)=>n > 0 && void 0 !== e), a = this.matchIndexes[t];\n                return n.splice(0, t), Object.assign(n, a);\n            }\n        }\n        class a {\n            constructor(){\n                this.rules = [], this.multiRegexes = [], this.count = 0, this.lastIndex = 0, this.regexIndex = 0;\n            }\n            getMatcher(e) {\n                if (this.multiRegexes[e]) return this.multiRegexes[e];\n                const n = new t;\n                return this.rules.slice(e).forEach(([e, t])=>n.addRule(e, t)), n.compile(), this.multiRegexes[e] = n, n;\n            }\n            resumingScanAtSamePosition() {\n                return 0 !== this.regexIndex;\n            }\n            considerAll() {\n                this.regexIndex = 0;\n            }\n            addRule(e, n) {\n                this.rules.push([\n                    e,\n                    n\n                ]), \"begin\" === n.type && this.count++;\n            }\n            exec(e) {\n                const n = this.getMatcher(this.regexIndex);\n                n.lastIndex = this.lastIndex;\n                let t = n.exec(e);\n                if (this.resumingScanAtSamePosition()) {\n                    if (t && t.index === this.lastIndex) ;\n                    else {\n                        const n = this.getMatcher(0);\n                        n.lastIndex = this.lastIndex + 1, t = n.exec(e);\n                    }\n                }\n                return t && (this.regexIndex += t.position + 1, this.regexIndex === this.count && this.considerAll()), t;\n            }\n        }\n        if (e.compilerExtensions || (e.compilerExtensions = []), e.contains && e.contains.includes(\"self\")) throw Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n        return e.classNameAliases = i(e.classNameAliases || {}), function t(r, s) {\n            const o = r;\n            if (r.isCompiled) return o;\n            [\n                D,\n                B,\n                W,\n                z\n            ].forEach((e)=>e(r, s)), e.compilerExtensions.forEach((e)=>e(r, s)), r.__beforeBegin = null, [\n                I,\n                L,\n                $\n            ].forEach((e)=>e(r, s)), r.isCompiled = !0;\n            let l = null;\n            return \"object\" == typeof r.keywords && r.keywords.$pattern && (r.keywords = Object.assign({}, r.keywords), l = r.keywords.$pattern, delete r.keywords.$pattern), l = l || /\\w+/, r.keywords && (r.keywords = U(r.keywords, e.case_insensitive)), o.keywordPatternRe = n(l, !0), s && (r.begin || (r.begin = /\\B|\\b/), o.beginRe = n(o.begin), r.end || r.endsWithParent || (r.end = /\\B|\\b/), r.end && (o.endRe = n(o.end)), o.terminatorEnd = d(o.end) || \"\", r.endsWithParent && s.terminatorEnd && (o.terminatorEnd += (r.end ? \"|\" : \"\") + s.terminatorEnd)), r.illegal && (o.illegalRe = n(r.illegal)), r.contains || (r.contains = []), r.contains = [].concat(...r.contains.map((e)=>((e)=>(e.variants && !e.cachedVariants && (e.cachedVariants = e.variants.map((n)=>i(e, {\n                            variants: null\n                        }, n))), e.cachedVariants ? e.cachedVariants : X(e) ? i(e, {\n                        starts: e.starts ? i(e.starts) : null\n                    }) : Object.isFrozen(e) ? i(e) : e))(\"self\" === e ? r : e))), r.contains.forEach((e)=>{\n                t(e, o);\n            }), r.starts && t(r.starts, s), o.matcher = ((e)=>{\n                const n = new a;\n                return e.contains.forEach((e)=>n.addRule(e.begin, {\n                        rule: e,\n                        type: \"begin\"\n                    })), e.terminatorEnd && n.addRule(e.terminatorEnd, {\n                    type: \"end\"\n                }), e.illegal && n.addRule(e.illegal, {\n                    type: \"illegal\"\n                }), n;\n            })(o), o;\n        }(e);\n    }\n    function X(e) {\n        return !!e && (e.endsWithParent || X(e.starts));\n    }\n    class V extends Error {\n        constructor(e, n){\n            super(e), this.name = \"HTMLInjectionError\", this.html = n;\n        }\n    }\n    const J = a, Y = i, ee = Symbol(\"nomatch\");\n    var ne = ((n)=>{\n        const a = Object.create(null), i = Object.create(null), r = [];\n        let s = !0;\n        const o = \"Could not find the language '{}', did you forget to load/include a language module?\", l = {\n            disableAutodetect: !0,\n            name: \"Plain text\",\n            contains: []\n        };\n        let d = {\n            ignoreUnescapedHTML: !1,\n            throwUnescapedHTML: !1,\n            noHighlightRe: /^(no-?highlight)$/i,\n            languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n            classPrefix: \"hljs-\",\n            cssSelector: \"pre code\",\n            languages: null,\n            __emitter: c\n        };\n        function _(e) {\n            return d.noHighlightRe.test(e);\n        }\n        function h(e, n, t) {\n            let a = \"\", i = \"\";\n            \"object\" == typeof n ? (a = e, t = n.ignoreIllegals, i = n.language) : (q(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\"), q(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\"), i = e, a = n), void 0 === t && (t = !0);\n            const r = {\n                code: a,\n                language: i\n            };\n            x(\"before:highlight\", r);\n            const s = r.result ? r.result : f(r.language, r.code, t);\n            return s.code = r.code, x(\"after:highlight\", s), s;\n        }\n        function f(e, n, i, r) {\n            const l = Object.create(null);\n            function c() {\n                if (!k.keywords) return void M.addText(S);\n                let e = 0;\n                k.keywordPatternRe.lastIndex = 0;\n                let n = k.keywordPatternRe.exec(S), t = \"\";\n                for(; n;){\n                    t += S.substring(e, n.index);\n                    const i = w.case_insensitive ? n[0].toLowerCase() : n[0], r = (a = i, k.keywords[a]);\n                    if (r) {\n                        const [e, a] = r;\n                        if (M.addText(t), t = \"\", l[i] = (l[i] || 0) + 1, l[i] <= 7 && (A += a), e.startsWith(\"_\")) t += n[0];\n                        else {\n                            const t = w.classNameAliases[e] || e;\n                            M.addKeyword(n[0], t);\n                        }\n                    } else t += n[0];\n                    e = k.keywordPatternRe.lastIndex, n = k.keywordPatternRe.exec(S);\n                }\n                var a;\n                t += S.substring(e), M.addText(t);\n            }\n            function g() {\n                null != k.subLanguage ? (()=>{\n                    if (\"\" === S) return;\n                    let e = null;\n                    if (\"string\" == typeof k.subLanguage) {\n                        if (!a[k.subLanguage]) return void M.addText(S);\n                        e = f(k.subLanguage, S, !0, x[k.subLanguage]), x[k.subLanguage] = e._top;\n                    } else e = E(S, k.subLanguage.length ? k.subLanguage : null);\n                    k.relevance > 0 && (A += e.relevance), M.addSublanguage(e._emitter, e.language);\n                })() : c(), S = \"\";\n            }\n            function u(e, n) {\n                let t = 1;\n                const a = n.length - 1;\n                for(; t <= a;){\n                    if (!e._emit[t]) {\n                        t++;\n                        continue;\n                    }\n                    const a = w.classNameAliases[e[t]] || e[t], i = n[t];\n                    a ? M.addKeyword(i, a) : (S = i, c(), S = \"\"), t++;\n                }\n            }\n            function b(e, n) {\n                return e.scope && \"string\" == typeof e.scope && M.openNode(w.classNameAliases[e.scope] || e.scope), e.beginScope && (e.beginScope._wrap ? (M.addKeyword(S, w.classNameAliases[e.beginScope._wrap] || e.beginScope._wrap), S = \"\") : e.beginScope._multi && (u(e.beginScope, n), S = \"\")), k = Object.create(e, {\n                    parent: {\n                        value: k\n                    }\n                }), k;\n            }\n            function m(e, n, a) {\n                let i = ((e, n)=>{\n                    const t = e && e.exec(n);\n                    return t && 0 === t.index;\n                })(e.endRe, a);\n                if (i) {\n                    if (e[\"on:end\"]) {\n                        const a = new t(e);\n                        e[\"on:end\"](n, a), a.isMatchIgnored && (i = !1);\n                    }\n                    if (i) {\n                        for(; e.endsParent && e.parent;)e = e.parent;\n                        return e;\n                    }\n                }\n                if (e.endsWithParent) return m(e.parent, n, a);\n            }\n            function p(e) {\n                return 0 === k.matcher.regexIndex ? (S += e[0], 1) : (R = !0, 0);\n            }\n            function _(e) {\n                const t = e[0], a = n.substring(e.index), i = m(k, e, a);\n                if (!i) return ee;\n                const r = k;\n                k.endScope && k.endScope._wrap ? (g(), M.addKeyword(t, k.endScope._wrap)) : k.endScope && k.endScope._multi ? (g(), u(k.endScope, e)) : r.skip ? S += t : (r.returnEnd || r.excludeEnd || (S += t), g(), r.excludeEnd && (S = t));\n                do k.scope && M.closeNode(), k.skip || k.subLanguage || (A += k.relevance), k = k.parent;\n                while (k !== i.parent);\n                return i.starts && b(i.starts, e), r.returnEnd ? 0 : t.length;\n            }\n            let h = {};\n            function y(a, r) {\n                const o = r && r[0];\n                if (S += a, null == o) return g(), 0;\n                if (\"begin\" === h.type && \"end\" === r.type && h.index === r.index && \"\" === o) {\n                    if (S += n.slice(r.index, r.index + 1), !s) {\n                        const n = Error(`0 width match regex (${e})`);\n                        throw n.languageName = e, n.badRule = h.rule, n;\n                    }\n                    return 1;\n                }\n                if (h = r, \"begin\" === r.type) return ((e)=>{\n                    const n = e[0], a = e.rule, i = new t(a), r = [\n                        a.__beforeBegin,\n                        a[\"on:begin\"]\n                    ];\n                    for (const t of r)if (t && (t(e, i), i.isMatchIgnored)) return p(n);\n                    return a.skip ? S += n : (a.excludeBegin && (S += n), g(), a.returnBegin || a.excludeBegin || (S = n)), b(a, e), a.returnBegin ? 0 : n.length;\n                })(r);\n                if (\"illegal\" === r.type && !i) {\n                    const e = Error('Illegal lexeme \"' + o + '\" for mode \"' + (k.scope || \"<unnamed>\") + '\"');\n                    throw e.mode = k, e;\n                }\n                if (\"end\" === r.type) {\n                    const e = _(r);\n                    if (e !== ee) return e;\n                }\n                if (\"illegal\" === r.type && \"\" === o) return 1;\n                if (T > 1e5 && T > 3 * r.index) throw Error(\"potential infinite loop, way more iterations than matches\");\n                return S += o, o.length;\n            }\n            const w = v(e);\n            if (!w) throw K(o.replace(\"{}\", e)), Error('Unknown language: \"' + e + '\"');\n            const N = Q(w);\n            let O = \"\", k = r || N;\n            const x = {}, M = new d.__emitter(d);\n            (()=>{\n                const e = [];\n                for(let n = k; n !== w; n = n.parent)n.scope && e.unshift(n.scope);\n                e.forEach((e)=>M.openNode(e));\n            })();\n            let S = \"\", A = 0, C = 0, T = 0, R = !1;\n            try {\n                for(k.matcher.considerAll();;){\n                    T++, R ? R = !1 : k.matcher.considerAll(), k.matcher.lastIndex = C;\n                    const e = k.matcher.exec(n);\n                    if (!e) break;\n                    const t = y(n.substring(C, e.index), e);\n                    C = e.index + t;\n                }\n                return y(n.substring(C)), M.closeAllNodes(), M.finalize(), O = M.toHTML(), {\n                    language: e,\n                    value: O,\n                    relevance: A,\n                    illegal: !1,\n                    _emitter: M,\n                    _top: k\n                };\n            } catch (t) {\n                if (t.message && t.message.includes(\"Illegal\")) return {\n                    language: e,\n                    value: J(n),\n                    illegal: !0,\n                    relevance: 0,\n                    _illegalBy: {\n                        message: t.message,\n                        index: C,\n                        context: n.slice(C - 100, C + 100),\n                        mode: t.mode,\n                        resultSoFar: O\n                    },\n                    _emitter: M\n                };\n                if (s) return {\n                    language: e,\n                    value: J(n),\n                    illegal: !1,\n                    relevance: 0,\n                    errorRaised: t,\n                    _emitter: M,\n                    _top: k\n                };\n                throw t;\n            }\n        }\n        function E(e, n) {\n            n = n || d.languages || Object.keys(a);\n            const t = ((e)=>{\n                const n = {\n                    value: J(e),\n                    illegal: !1,\n                    relevance: 0,\n                    _top: l,\n                    _emitter: new d.__emitter(d)\n                };\n                return n._emitter.addText(e), n;\n            })(e), i = n.filter(v).filter(k).map((n)=>f(n, e, !1));\n            i.unshift(t);\n            const r = i.sort((e, n)=>{\n                if (e.relevance !== n.relevance) return n.relevance - e.relevance;\n                if (e.language && n.language) {\n                    if (v(e.language).supersetOf === n.language) return 1;\n                    if (v(n.language).supersetOf === e.language) return -1;\n                }\n                return 0;\n            }), [s, o] = r, c = s;\n            return c.secondBest = o, c;\n        }\n        function y(e) {\n            let n = null;\n            const t = ((e)=>{\n                let n = e.className + \" \";\n                n += e.parentNode ? e.parentNode.className : \"\";\n                const t = d.languageDetectRe.exec(n);\n                if (t) {\n                    const n = v(t[1]);\n                    return n || (H(o.replace(\"{}\", t[1])), H(\"Falling back to no-highlight mode for this block.\", e)), n ? t[1] : \"no-highlight\";\n                }\n                return n.split(/\\s+/).find((e)=>_(e) || v(e));\n            })(e);\n            if (_(t)) return;\n            if (x(\"before:highlightElement\", {\n                el: e,\n                language: t\n            }), e.children.length > 0 && (d.ignoreUnescapedHTML || (console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\"), console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\"), console.warn(\"The element with unescaped HTML:\"), console.warn(e)), d.throwUnescapedHTML)) throw new V(\"One of your code blocks includes unescaped HTML.\", e.innerHTML);\n            n = e;\n            const a = n.textContent, r = t ? h(a, {\n                language: t,\n                ignoreIllegals: !0\n            }) : E(a);\n            e.innerHTML = r.value, ((e, n, t)=>{\n                const a = n && i[n] || t;\n                e.classList.add(\"hljs\"), e.classList.add(\"language-\" + a);\n            })(e, t, r.language), e.result = {\n                language: r.language,\n                re: r.relevance,\n                relevance: r.relevance\n            }, r.secondBest && (e.secondBest = {\n                language: r.secondBest.language,\n                relevance: r.secondBest.relevance\n            }), x(\"after:highlightElement\", {\n                el: e,\n                result: r,\n                text: a\n            });\n        }\n        let w = !1;\n        function N() {\n            \"loading\" !== document.readyState ? document.querySelectorAll(d.cssSelector).forEach(y) : w = !0;\n        }\n        function v(e) {\n            return e = (e || \"\").toLowerCase(), a[e] || a[i[e]];\n        }\n        function O(e, { languageName: n }) {\n            \"string\" == typeof e && (e = [\n                e\n            ]), e.forEach((e)=>{\n                i[e.toLowerCase()] = n;\n            });\n        }\n        function k(e) {\n            const n = v(e);\n            return n && !n.disableAutodetect;\n        }\n        function x(e, n) {\n            const t = e;\n            r.forEach((e)=>{\n                e[t] && e[t](n);\n            });\n        }\n        \"undefined\" != typeof window && window.addEventListener && window.addEventListener(\"DOMContentLoaded\", ()=>{\n            w && N();\n        }, !1), Object.assign(n, {\n            highlight: h,\n            highlightAuto: E,\n            highlightAll: N,\n            highlightElement: y,\n            highlightBlock: (e)=>(q(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\"), q(\"10.7.0\", \"Please use highlightElement now.\"), y(e)),\n            configure: (e)=>{\n                d = Y(d, e);\n            },\n            initHighlighting: ()=>{\n                N(), q(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n            },\n            initHighlightingOnLoad: ()=>{\n                N(), q(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n            },\n            registerLanguage: (e, t)=>{\n                let i = null;\n                try {\n                    i = t(n);\n                } catch (n) {\n                    if (K(\"Language definition for '{}' could not be registered.\".replace(\"{}\", e)), !s) throw n;\n                    K(n), i = l;\n                }\n                i.name || (i.name = e), a[e] = i, i.rawDefinition = t.bind(null, n), i.aliases && O(i.aliases, {\n                    languageName: e\n                });\n            },\n            unregisterLanguage: (e)=>{\n                delete a[e];\n                for (const n of Object.keys(i))i[n] === e && delete i[n];\n            },\n            listLanguages: ()=>Object.keys(a),\n            getLanguage: v,\n            registerAliases: O,\n            autoDetection: k,\n            inherit: Y,\n            addPlugin: (e)=>{\n                ((e)=>{\n                    e[\"before:highlightBlock\"] && !e[\"before:highlightElement\"] && (e[\"before:highlightElement\"] = (n)=>{\n                        e[\"before:highlightBlock\"](Object.assign({\n                            block: n.el\n                        }, n));\n                    }), e[\"after:highlightBlock\"] && !e[\"after:highlightElement\"] && (e[\"after:highlightElement\"] = (n)=>{\n                        e[\"after:highlightBlock\"](Object.assign({\n                            block: n.el\n                        }, n));\n                    });\n                })(e), r.push(e);\n            }\n        }), n.debugMode = ()=>{\n            s = !1;\n        }, n.safeMode = ()=>{\n            s = !0;\n        }, n.versionString = \"11.7.0\", n.regex = {\n            concat: m,\n            lookahead: g,\n            either: p,\n            optional: b,\n            anyNumberOfTimes: u\n        };\n        for(const n in T)\"object\" == typeof T[n] && e.exports(T[n]);\n        return Object.assign(n, T), n;\n    })({});\n    const te = (e)=>({\n            IMPORTANT: {\n                scope: \"meta\",\n                begin: \"!important\"\n            },\n            BLOCK_COMMENT: e.C_BLOCK_COMMENT_MODE,\n            HEXCOLOR: {\n                scope: \"number\",\n                begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n            },\n            FUNCTION_DISPATCH: {\n                className: \"built_in\",\n                begin: /[\\w-]+(?=\\()/\n            },\n            ATTRIBUTE_SELECTOR_MODE: {\n                scope: \"selector-attr\",\n                begin: /\\[/,\n                end: /\\]/,\n                illegal: \"$\",\n                contains: [\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE\n                ]\n            },\n            CSS_NUMBER_MODE: {\n                scope: \"number\",\n                begin: e.NUMBER_RE + \"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\",\n                relevance: 0\n            },\n            CSS_VARIABLE: {\n                className: \"attr\",\n                begin: /--[A-Za-z][A-Za-z0-9_-]*/\n            }\n        }), ae = [\n        \"a\",\n        \"abbr\",\n        \"address\",\n        \"article\",\n        \"aside\",\n        \"audio\",\n        \"b\",\n        \"blockquote\",\n        \"body\",\n        \"button\",\n        \"canvas\",\n        \"caption\",\n        \"cite\",\n        \"code\",\n        \"dd\",\n        \"del\",\n        \"details\",\n        \"dfn\",\n        \"div\",\n        \"dl\",\n        \"dt\",\n        \"em\",\n        \"fieldset\",\n        \"figcaption\",\n        \"figure\",\n        \"footer\",\n        \"form\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"header\",\n        \"hgroup\",\n        \"html\",\n        \"i\",\n        \"iframe\",\n        \"img\",\n        \"input\",\n        \"ins\",\n        \"kbd\",\n        \"label\",\n        \"legend\",\n        \"li\",\n        \"main\",\n        \"mark\",\n        \"menu\",\n        \"nav\",\n        \"object\",\n        \"ol\",\n        \"p\",\n        \"q\",\n        \"quote\",\n        \"samp\",\n        \"section\",\n        \"span\",\n        \"strong\",\n        \"summary\",\n        \"sup\",\n        \"table\",\n        \"tbody\",\n        \"td\",\n        \"textarea\",\n        \"tfoot\",\n        \"th\",\n        \"thead\",\n        \"time\",\n        \"tr\",\n        \"ul\",\n        \"var\",\n        \"video\"\n    ], ie = [\n        \"any-hover\",\n        \"any-pointer\",\n        \"aspect-ratio\",\n        \"color\",\n        \"color-gamut\",\n        \"color-index\",\n        \"device-aspect-ratio\",\n        \"device-height\",\n        \"device-width\",\n        \"display-mode\",\n        \"forced-colors\",\n        \"grid\",\n        \"height\",\n        \"hover\",\n        \"inverted-colors\",\n        \"monochrome\",\n        \"orientation\",\n        \"overflow-block\",\n        \"overflow-inline\",\n        \"pointer\",\n        \"prefers-color-scheme\",\n        \"prefers-contrast\",\n        \"prefers-reduced-motion\",\n        \"prefers-reduced-transparency\",\n        \"resolution\",\n        \"scan\",\n        \"scripting\",\n        \"update\",\n        \"width\",\n        \"min-width\",\n        \"max-width\",\n        \"min-height\",\n        \"max-height\"\n    ], re = [\n        \"active\",\n        \"any-link\",\n        \"blank\",\n        \"checked\",\n        \"current\",\n        \"default\",\n        \"defined\",\n        \"dir\",\n        \"disabled\",\n        \"drop\",\n        \"empty\",\n        \"enabled\",\n        \"first\",\n        \"first-child\",\n        \"first-of-type\",\n        \"fullscreen\",\n        \"future\",\n        \"focus\",\n        \"focus-visible\",\n        \"focus-within\",\n        \"has\",\n        \"host\",\n        \"host-context\",\n        \"hover\",\n        \"indeterminate\",\n        \"in-range\",\n        \"invalid\",\n        \"is\",\n        \"lang\",\n        \"last-child\",\n        \"last-of-type\",\n        \"left\",\n        \"link\",\n        \"local-link\",\n        \"not\",\n        \"nth-child\",\n        \"nth-col\",\n        \"nth-last-child\",\n        \"nth-last-col\",\n        \"nth-last-of-type\",\n        \"nth-of-type\",\n        \"only-child\",\n        \"only-of-type\",\n        \"optional\",\n        \"out-of-range\",\n        \"past\",\n        \"placeholder-shown\",\n        \"read-only\",\n        \"read-write\",\n        \"required\",\n        \"right\",\n        \"root\",\n        \"scope\",\n        \"target\",\n        \"target-within\",\n        \"user-invalid\",\n        \"valid\",\n        \"visited\",\n        \"where\"\n    ], se = [\n        \"after\",\n        \"backdrop\",\n        \"before\",\n        \"cue\",\n        \"cue-region\",\n        \"first-letter\",\n        \"first-line\",\n        \"grammar-error\",\n        \"marker\",\n        \"part\",\n        \"placeholder\",\n        \"selection\",\n        \"slotted\",\n        \"spelling-error\"\n    ], oe = [\n        \"align-content\",\n        \"align-items\",\n        \"align-self\",\n        \"all\",\n        \"animation\",\n        \"animation-delay\",\n        \"animation-direction\",\n        \"animation-duration\",\n        \"animation-fill-mode\",\n        \"animation-iteration-count\",\n        \"animation-name\",\n        \"animation-play-state\",\n        \"animation-timing-function\",\n        \"backface-visibility\",\n        \"background\",\n        \"background-attachment\",\n        \"background-blend-mode\",\n        \"background-clip\",\n        \"background-color\",\n        \"background-image\",\n        \"background-origin\",\n        \"background-position\",\n        \"background-repeat\",\n        \"background-size\",\n        \"block-size\",\n        \"border\",\n        \"border-block\",\n        \"border-block-color\",\n        \"border-block-end\",\n        \"border-block-end-color\",\n        \"border-block-end-style\",\n        \"border-block-end-width\",\n        \"border-block-start\",\n        \"border-block-start-color\",\n        \"border-block-start-style\",\n        \"border-block-start-width\",\n        \"border-block-style\",\n        \"border-block-width\",\n        \"border-bottom\",\n        \"border-bottom-color\",\n        \"border-bottom-left-radius\",\n        \"border-bottom-right-radius\",\n        \"border-bottom-style\",\n        \"border-bottom-width\",\n        \"border-collapse\",\n        \"border-color\",\n        \"border-image\",\n        \"border-image-outset\",\n        \"border-image-repeat\",\n        \"border-image-slice\",\n        \"border-image-source\",\n        \"border-image-width\",\n        \"border-inline\",\n        \"border-inline-color\",\n        \"border-inline-end\",\n        \"border-inline-end-color\",\n        \"border-inline-end-style\",\n        \"border-inline-end-width\",\n        \"border-inline-start\",\n        \"border-inline-start-color\",\n        \"border-inline-start-style\",\n        \"border-inline-start-width\",\n        \"border-inline-style\",\n        \"border-inline-width\",\n        \"border-left\",\n        \"border-left-color\",\n        \"border-left-style\",\n        \"border-left-width\",\n        \"border-radius\",\n        \"border-right\",\n        \"border-right-color\",\n        \"border-right-style\",\n        \"border-right-width\",\n        \"border-spacing\",\n        \"border-style\",\n        \"border-top\",\n        \"border-top-color\",\n        \"border-top-left-radius\",\n        \"border-top-right-radius\",\n        \"border-top-style\",\n        \"border-top-width\",\n        \"border-width\",\n        \"bottom\",\n        \"box-decoration-break\",\n        \"box-shadow\",\n        \"box-sizing\",\n        \"break-after\",\n        \"break-before\",\n        \"break-inside\",\n        \"caption-side\",\n        \"caret-color\",\n        \"clear\",\n        \"clip\",\n        \"clip-path\",\n        \"clip-rule\",\n        \"color\",\n        \"column-count\",\n        \"column-fill\",\n        \"column-gap\",\n        \"column-rule\",\n        \"column-rule-color\",\n        \"column-rule-style\",\n        \"column-rule-width\",\n        \"column-span\",\n        \"column-width\",\n        \"columns\",\n        \"contain\",\n        \"content\",\n        \"content-visibility\",\n        \"counter-increment\",\n        \"counter-reset\",\n        \"cue\",\n        \"cue-after\",\n        \"cue-before\",\n        \"cursor\",\n        \"direction\",\n        \"display\",\n        \"empty-cells\",\n        \"filter\",\n        \"flex\",\n        \"flex-basis\",\n        \"flex-direction\",\n        \"flex-flow\",\n        \"flex-grow\",\n        \"flex-shrink\",\n        \"flex-wrap\",\n        \"float\",\n        \"flow\",\n        \"font\",\n        \"font-display\",\n        \"font-family\",\n        \"font-feature-settings\",\n        \"font-kerning\",\n        \"font-language-override\",\n        \"font-size\",\n        \"font-size-adjust\",\n        \"font-smoothing\",\n        \"font-stretch\",\n        \"font-style\",\n        \"font-synthesis\",\n        \"font-variant\",\n        \"font-variant-caps\",\n        \"font-variant-east-asian\",\n        \"font-variant-ligatures\",\n        \"font-variant-numeric\",\n        \"font-variant-position\",\n        \"font-variation-settings\",\n        \"font-weight\",\n        \"gap\",\n        \"glyph-orientation-vertical\",\n        \"grid\",\n        \"grid-area\",\n        \"grid-auto-columns\",\n        \"grid-auto-flow\",\n        \"grid-auto-rows\",\n        \"grid-column\",\n        \"grid-column-end\",\n        \"grid-column-start\",\n        \"grid-gap\",\n        \"grid-row\",\n        \"grid-row-end\",\n        \"grid-row-start\",\n        \"grid-template\",\n        \"grid-template-areas\",\n        \"grid-template-columns\",\n        \"grid-template-rows\",\n        \"hanging-punctuation\",\n        \"height\",\n        \"hyphens\",\n        \"icon\",\n        \"image-orientation\",\n        \"image-rendering\",\n        \"image-resolution\",\n        \"ime-mode\",\n        \"inline-size\",\n        \"isolation\",\n        \"justify-content\",\n        \"left\",\n        \"letter-spacing\",\n        \"line-break\",\n        \"line-height\",\n        \"list-style\",\n        \"list-style-image\",\n        \"list-style-position\",\n        \"list-style-type\",\n        \"margin\",\n        \"margin-block\",\n        \"margin-block-end\",\n        \"margin-block-start\",\n        \"margin-bottom\",\n        \"margin-inline\",\n        \"margin-inline-end\",\n        \"margin-inline-start\",\n        \"margin-left\",\n        \"margin-right\",\n        \"margin-top\",\n        \"marks\",\n        \"mask\",\n        \"mask-border\",\n        \"mask-border-mode\",\n        \"mask-border-outset\",\n        \"mask-border-repeat\",\n        \"mask-border-slice\",\n        \"mask-border-source\",\n        \"mask-border-width\",\n        \"mask-clip\",\n        \"mask-composite\",\n        \"mask-image\",\n        \"mask-mode\",\n        \"mask-origin\",\n        \"mask-position\",\n        \"mask-repeat\",\n        \"mask-size\",\n        \"mask-type\",\n        \"max-block-size\",\n        \"max-height\",\n        \"max-inline-size\",\n        \"max-width\",\n        \"min-block-size\",\n        \"min-height\",\n        \"min-inline-size\",\n        \"min-width\",\n        \"mix-blend-mode\",\n        \"nav-down\",\n        \"nav-index\",\n        \"nav-left\",\n        \"nav-right\",\n        \"nav-up\",\n        \"none\",\n        \"normal\",\n        \"object-fit\",\n        \"object-position\",\n        \"opacity\",\n        \"order\",\n        \"orphans\",\n        \"outline\",\n        \"outline-color\",\n        \"outline-offset\",\n        \"outline-style\",\n        \"outline-width\",\n        \"overflow\",\n        \"overflow-wrap\",\n        \"overflow-x\",\n        \"overflow-y\",\n        \"padding\",\n        \"padding-block\",\n        \"padding-block-end\",\n        \"padding-block-start\",\n        \"padding-bottom\",\n        \"padding-inline\",\n        \"padding-inline-end\",\n        \"padding-inline-start\",\n        \"padding-left\",\n        \"padding-right\",\n        \"padding-top\",\n        \"page-break-after\",\n        \"page-break-before\",\n        \"page-break-inside\",\n        \"pause\",\n        \"pause-after\",\n        \"pause-before\",\n        \"perspective\",\n        \"perspective-origin\",\n        \"pointer-events\",\n        \"position\",\n        \"quotes\",\n        \"resize\",\n        \"rest\",\n        \"rest-after\",\n        \"rest-before\",\n        \"right\",\n        \"row-gap\",\n        \"scroll-margin\",\n        \"scroll-margin-block\",\n        \"scroll-margin-block-end\",\n        \"scroll-margin-block-start\",\n        \"scroll-margin-bottom\",\n        \"scroll-margin-inline\",\n        \"scroll-margin-inline-end\",\n        \"scroll-margin-inline-start\",\n        \"scroll-margin-left\",\n        \"scroll-margin-right\",\n        \"scroll-margin-top\",\n        \"scroll-padding\",\n        \"scroll-padding-block\",\n        \"scroll-padding-block-end\",\n        \"scroll-padding-block-start\",\n        \"scroll-padding-bottom\",\n        \"scroll-padding-inline\",\n        \"scroll-padding-inline-end\",\n        \"scroll-padding-inline-start\",\n        \"scroll-padding-left\",\n        \"scroll-padding-right\",\n        \"scroll-padding-top\",\n        \"scroll-snap-align\",\n        \"scroll-snap-stop\",\n        \"scroll-snap-type\",\n        \"scrollbar-color\",\n        \"scrollbar-gutter\",\n        \"scrollbar-width\",\n        \"shape-image-threshold\",\n        \"shape-margin\",\n        \"shape-outside\",\n        \"speak\",\n        \"speak-as\",\n        \"src\",\n        \"tab-size\",\n        \"table-layout\",\n        \"text-align\",\n        \"text-align-all\",\n        \"text-align-last\",\n        \"text-combine-upright\",\n        \"text-decoration\",\n        \"text-decoration-color\",\n        \"text-decoration-line\",\n        \"text-decoration-style\",\n        \"text-emphasis\",\n        \"text-emphasis-color\",\n        \"text-emphasis-position\",\n        \"text-emphasis-style\",\n        \"text-indent\",\n        \"text-justify\",\n        \"text-orientation\",\n        \"text-overflow\",\n        \"text-rendering\",\n        \"text-shadow\",\n        \"text-transform\",\n        \"text-underline-position\",\n        \"top\",\n        \"transform\",\n        \"transform-box\",\n        \"transform-origin\",\n        \"transform-style\",\n        \"transition\",\n        \"transition-delay\",\n        \"transition-duration\",\n        \"transition-property\",\n        \"transition-timing-function\",\n        \"unicode-bidi\",\n        \"vertical-align\",\n        \"visibility\",\n        \"voice-balance\",\n        \"voice-duration\",\n        \"voice-family\",\n        \"voice-pitch\",\n        \"voice-range\",\n        \"voice-rate\",\n        \"voice-stress\",\n        \"voice-volume\",\n        \"white-space\",\n        \"widows\",\n        \"width\",\n        \"will-change\",\n        \"word-break\",\n        \"word-spacing\",\n        \"word-wrap\",\n        \"writing-mode\",\n        \"z-index\"\n    ].reverse(), le = re.concat(se);\n    var ce = \"\\\\.([0-9](_*[0-9])*)\", de = \"[0-9a-fA-F](_*[0-9a-fA-F])*\", ge = {\n        className: \"number\",\n        variants: [\n            {\n                begin: `(\\\\b([0-9](_*[0-9])*)((${ce})|\\\\.)?|(${ce}))[eE][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b`\n            },\n            {\n                begin: `\\\\b([0-9](_*[0-9])*)((${ce})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`\n            },\n            {\n                begin: `(${ce})[fFdD]?\\\\b`\n            },\n            {\n                begin: \"\\\\b([0-9](_*[0-9])*)[fFdD]\\\\b\"\n            },\n            {\n                begin: `\\\\b0[xX]((${de})\\\\.?|(${de})?\\\\.(${de}))[pP][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b`\n            },\n            {\n                begin: \"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\"\n            },\n            {\n                begin: `\\\\b0[xX](${de})[lL]?\\\\b`\n            },\n            {\n                begin: \"\\\\b0(_*[0-7])*[lL]?\\\\b\"\n            },\n            {\n                begin: \"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\"\n            }\n        ],\n        relevance: 0\n    };\n    function ue(e, n, t) {\n        return -1 === t ? \"\" : e.replace(n, (a)=>ue(e, n, t - 1));\n    }\n    const be = \"[A-Za-z$_][0-9A-Za-z$_]*\", me = [\n        \"as\",\n        \"in\",\n        \"of\",\n        \"if\",\n        \"for\",\n        \"while\",\n        \"finally\",\n        \"var\",\n        \"new\",\n        \"function\",\n        \"do\",\n        \"return\",\n        \"void\",\n        \"else\",\n        \"break\",\n        \"catch\",\n        \"instanceof\",\n        \"with\",\n        \"throw\",\n        \"case\",\n        \"default\",\n        \"try\",\n        \"switch\",\n        \"continue\",\n        \"typeof\",\n        \"delete\",\n        \"let\",\n        \"yield\",\n        \"const\",\n        \"class\",\n        \"debugger\",\n        \"async\",\n        \"await\",\n        \"static\",\n        \"import\",\n        \"from\",\n        \"export\",\n        \"extends\"\n    ], pe = [\n        \"true\",\n        \"false\",\n        \"null\",\n        \"undefined\",\n        \"NaN\",\n        \"Infinity\"\n    ], _e = [\n        \"Object\",\n        \"Function\",\n        \"Boolean\",\n        \"Symbol\",\n        \"Math\",\n        \"Date\",\n        \"Number\",\n        \"BigInt\",\n        \"String\",\n        \"RegExp\",\n        \"Array\",\n        \"Float32Array\",\n        \"Float64Array\",\n        \"Int8Array\",\n        \"Uint8Array\",\n        \"Uint8ClampedArray\",\n        \"Int16Array\",\n        \"Int32Array\",\n        \"Uint16Array\",\n        \"Uint32Array\",\n        \"BigInt64Array\",\n        \"BigUint64Array\",\n        \"Set\",\n        \"Map\",\n        \"WeakSet\",\n        \"WeakMap\",\n        \"ArrayBuffer\",\n        \"SharedArrayBuffer\",\n        \"Atomics\",\n        \"DataView\",\n        \"JSON\",\n        \"Promise\",\n        \"Generator\",\n        \"GeneratorFunction\",\n        \"AsyncFunction\",\n        \"Reflect\",\n        \"Proxy\",\n        \"Intl\",\n        \"WebAssembly\"\n    ], he = [\n        \"Error\",\n        \"EvalError\",\n        \"InternalError\",\n        \"RangeError\",\n        \"ReferenceError\",\n        \"SyntaxError\",\n        \"TypeError\",\n        \"URIError\"\n    ], fe = [\n        \"setInterval\",\n        \"setTimeout\",\n        \"clearInterval\",\n        \"clearTimeout\",\n        \"require\",\n        \"exports\",\n        \"eval\",\n        \"isFinite\",\n        \"isNaN\",\n        \"parseFloat\",\n        \"parseInt\",\n        \"decodeURI\",\n        \"decodeURIComponent\",\n        \"encodeURI\",\n        \"encodeURIComponent\",\n        \"escape\",\n        \"unescape\"\n    ], Ee = [\n        \"arguments\",\n        \"this\",\n        \"super\",\n        \"console\",\n        \"window\",\n        \"document\",\n        \"localStorage\",\n        \"module\",\n        \"global\"\n    ], ye = [].concat(fe, _e, he);\n    function we(e) {\n        const n = e.regex, t = be, a = {\n            begin: /<[A-Za-z0-9\\\\._:-]+/,\n            end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n            isTrulyOpeningTag: (e, n)=>{\n                const t = e[0].length + e.index, a = e.input[t];\n                if (\"<\" === a || \",\" === a) return void n.ignoreMatch();\n                let i;\n                \">\" === a && (((e, { after: n })=>{\n                    const t = \"</\" + e[0].slice(1);\n                    return -1 !== e.input.indexOf(t, n);\n                })(e, {\n                    after: t\n                }) || n.ignoreMatch());\n                const r = e.input.substring(t);\n                ((i = r.match(/^\\s*=/)) || (i = r.match(/^\\s+extends\\s+/)) && 0 === i.index) && n.ignoreMatch();\n            }\n        }, i = {\n            $pattern: be,\n            keyword: me,\n            literal: pe,\n            built_in: ye,\n            \"variable.language\": Ee\n        }, r = \"\\\\.([0-9](_?[0-9])*)\", s = \"0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*\", o = {\n            className: \"number\",\n            variants: [\n                {\n                    begin: `(\\\\b(${s})((${r})|\\\\.)?|(${r}))[eE][+-]?([0-9](_?[0-9])*)\\\\b`\n                },\n                {\n                    begin: `\\\\b(${s})\\\\b((${r})\\\\b|\\\\.)?|(${r})\\\\b`\n                },\n                {\n                    begin: \"\\\\b(0|[1-9](_?[0-9])*)n\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[0-7]+n?\\\\b\"\n                }\n            ],\n            relevance: 0\n        }, l = {\n            className: \"subst\",\n            begin: \"\\\\$\\\\{\",\n            end: \"\\\\}\",\n            keywords: i,\n            contains: []\n        }, c = {\n            begin: \"html`\",\n            end: \"\",\n            starts: {\n                end: \"`\",\n                returnEnd: !1,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    l\n                ],\n                subLanguage: \"xml\"\n            }\n        }, d = {\n            begin: \"css`\",\n            end: \"\",\n            starts: {\n                end: \"`\",\n                returnEnd: !1,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    l\n                ],\n                subLanguage: \"css\"\n            }\n        }, g = {\n            className: \"string\",\n            begin: \"`\",\n            end: \"`\",\n            contains: [\n                e.BACKSLASH_ESCAPE,\n                l\n            ]\n        }, u = {\n            className: \"comment\",\n            variants: [\n                e.COMMENT(/\\/\\*\\*(?!\\/)/, \"\\\\*/\", {\n                    relevance: 0,\n                    contains: [\n                        {\n                            begin: \"(?=@[A-Za-z]+)\",\n                            relevance: 0,\n                            contains: [\n                                {\n                                    className: \"doctag\",\n                                    begin: \"@[A-Za-z]+\"\n                                },\n                                {\n                                    className: \"type\",\n                                    begin: \"\\\\{\",\n                                    end: \"\\\\}\",\n                                    excludeEnd: !0,\n                                    excludeBegin: !0,\n                                    relevance: 0\n                                },\n                                {\n                                    className: \"variable\",\n                                    begin: t + \"(?=\\\\s*(-)|$)\",\n                                    endsParent: !0,\n                                    relevance: 0\n                                },\n                                {\n                                    begin: /(?=[^\\n])\\s/,\n                                    relevance: 0\n                                }\n                            ]\n                        }\n                    ]\n                }),\n                e.C_BLOCK_COMMENT_MODE,\n                e.C_LINE_COMMENT_MODE\n            ]\n        }, b = [\n            e.APOS_STRING_MODE,\n            e.QUOTE_STRING_MODE,\n            c,\n            d,\n            g,\n            {\n                match: /\\$\\d+/\n            },\n            o\n        ];\n        l.contains = b.concat({\n            begin: /\\{/,\n            end: /\\}/,\n            keywords: i,\n            contains: [\n                \"self\"\n            ].concat(b)\n        });\n        const m = [].concat(u, l.contains), p = m.concat([\n            {\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: i,\n                contains: [\n                    \"self\"\n                ].concat(m)\n            }\n        ]), _ = {\n            className: \"params\",\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: !0,\n            excludeEnd: !0,\n            keywords: i,\n            contains: p\n        }, h = {\n            variants: [\n                {\n                    match: [\n                        /class/,\n                        /\\s+/,\n                        t,\n                        /\\s+/,\n                        /extends/,\n                        /\\s+/,\n                        n.concat(t, \"(\", n.concat(/\\./, t), \")*\")\n                    ],\n                    scope: {\n                        1: \"keyword\",\n                        3: \"title.class\",\n                        5: \"keyword\",\n                        7: \"title.class.inherited\"\n                    }\n                },\n                {\n                    match: [\n                        /class/,\n                        /\\s+/,\n                        t\n                    ],\n                    scope: {\n                        1: \"keyword\",\n                        3: \"title.class\"\n                    }\n                }\n            ]\n        }, f = {\n            relevance: 0,\n            match: n.either(/\\bJSON/, /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/, /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/, /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/),\n            className: \"title.class\",\n            keywords: {\n                _: [\n                    ..._e,\n                    ...he\n                ]\n            }\n        }, E = {\n            variants: [\n                {\n                    match: [\n                        /function/,\n                        /\\s+/,\n                        t,\n                        /(?=\\s*\\()/\n                    ]\n                },\n                {\n                    match: [\n                        /function/,\n                        /\\s*(?=\\()/\n                    ]\n                }\n            ],\n            className: {\n                1: \"keyword\",\n                3: \"title.function\"\n            },\n            label: \"func.def\",\n            contains: [\n                _\n            ],\n            illegal: /%/\n        }, y = {\n            match: n.concat(/\\b/, (w = [\n                ...fe,\n                \"super\",\n                \"import\"\n            ], n.concat(\"(?!\", w.join(\"|\"), \")\")), t, n.lookahead(/\\(/)),\n            className: \"title.function\",\n            relevance: 0\n        };\n        var w;\n        const N = {\n            begin: n.concat(/\\./, n.lookahead(n.concat(t, /(?![0-9A-Za-z$_(])/))),\n            end: t,\n            excludeBegin: !0,\n            keywords: \"prototype\",\n            className: \"property\",\n            relevance: 0\n        }, v = {\n            match: [\n                /get|set/,\n                /\\s+/,\n                t,\n                /(?=\\()/\n            ],\n            className: {\n                1: \"keyword\",\n                3: \"title.function\"\n            },\n            contains: [\n                {\n                    begin: /\\(\\)/\n                },\n                _\n            ]\n        }, O = \"(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|\" + e.UNDERSCORE_IDENT_RE + \")\\\\s*=>\", k = {\n            match: [\n                /const|var|let/,\n                /\\s+/,\n                t,\n                /\\s*/,\n                /=\\s*/,\n                /(async\\s*)?/,\n                n.lookahead(O)\n            ],\n            keywords: \"async\",\n            className: {\n                1: \"keyword\",\n                3: \"title.function\"\n            },\n            contains: [\n                _\n            ]\n        };\n        return {\n            name: \"Javascript\",\n            aliases: [\n                \"js\",\n                \"jsx\",\n                \"mjs\",\n                \"cjs\"\n            ],\n            keywords: i,\n            exports: {\n                PARAMS_CONTAINS: p,\n                CLASS_REFERENCE: f\n            },\n            illegal: /#(?![$_A-z])/,\n            contains: [\n                e.SHEBANG({\n                    label: \"shebang\",\n                    binary: \"node\",\n                    relevance: 5\n                }),\n                {\n                    label: \"use_strict\",\n                    className: \"meta\",\n                    relevance: 10,\n                    begin: /^\\s*['\"]use (strict|asm)['\"]/\n                },\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE,\n                c,\n                d,\n                g,\n                u,\n                {\n                    match: /\\$\\d+/\n                },\n                o,\n                f,\n                {\n                    className: \"attr\",\n                    begin: t + n.lookahead(\":\"),\n                    relevance: 0\n                },\n                k,\n                {\n                    begin: \"(\" + e.RE_STARTERS_RE + \"|\\\\b(case|return|throw)\\\\b)\\\\s*\",\n                    keywords: \"return throw case\",\n                    relevance: 0,\n                    contains: [\n                        u,\n                        e.REGEXP_MODE,\n                        {\n                            className: \"function\",\n                            begin: O,\n                            returnBegin: !0,\n                            end: \"\\\\s*=>\",\n                            contains: [\n                                {\n                                    className: \"params\",\n                                    variants: [\n                                        {\n                                            begin: e.UNDERSCORE_IDENT_RE,\n                                            relevance: 0\n                                        },\n                                        {\n                                            className: null,\n                                            begin: /\\(\\s*\\)/,\n                                            skip: !0\n                                        },\n                                        {\n                                            begin: /\\(/,\n                                            end: /\\)/,\n                                            excludeBegin: !0,\n                                            excludeEnd: !0,\n                                            keywords: i,\n                                            contains: p\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            begin: /,/,\n                            relevance: 0\n                        },\n                        {\n                            match: /\\s+/,\n                            relevance: 0\n                        },\n                        {\n                            variants: [\n                                {\n                                    begin: \"<>\",\n                                    end: \"</>\"\n                                },\n                                {\n                                    match: /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/\n                                },\n                                {\n                                    begin: a.begin,\n                                    \"on:begin\": a.isTrulyOpeningTag,\n                                    end: a.end\n                                }\n                            ],\n                            subLanguage: \"xml\",\n                            contains: [\n                                {\n                                    begin: a.begin,\n                                    end: a.end,\n                                    skip: !0,\n                                    contains: [\n                                        \"self\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                },\n                E,\n                {\n                    beginKeywords: \"while if switch catch for\"\n                },\n                {\n                    begin: \"\\\\b(?!function)\" + e.UNDERSCORE_IDENT_RE + \"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\",\n                    returnBegin: !0,\n                    label: \"func.def\",\n                    contains: [\n                        _,\n                        e.inherit(e.TITLE_MODE, {\n                            begin: t,\n                            className: \"title.function\"\n                        })\n                    ]\n                },\n                {\n                    match: /\\.\\.\\./,\n                    relevance: 0\n                },\n                N,\n                {\n                    match: \"\\\\$\" + t,\n                    relevance: 0\n                },\n                {\n                    match: [\n                        /\\bconstructor(?=\\s*\\()/\n                    ],\n                    className: {\n                        1: \"title.function\"\n                    },\n                    contains: [\n                        _\n                    ]\n                },\n                y,\n                {\n                    relevance: 0,\n                    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n                    className: \"variable.constant\"\n                },\n                h,\n                v,\n                {\n                    match: /\\$[(.]/\n                }\n            ]\n        };\n    }\n    const Ne = (e)=>m(/\\b/, e, /\\w$/.test(e) ? /\\b/ : /\\B/), ve = [\n        \"Protocol\",\n        \"Type\"\n    ].map(Ne), Oe = [\n        \"init\",\n        \"self\"\n    ].map(Ne), ke = [\n        \"Any\",\n        \"Self\"\n    ], xe = [\n        \"actor\",\n        \"any\",\n        \"associatedtype\",\n        \"async\",\n        \"await\",\n        /as\\?/,\n        /as!/,\n        \"as\",\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"class\",\n        \"continue\",\n        \"convenience\",\n        \"default\",\n        \"defer\",\n        \"deinit\",\n        \"didSet\",\n        \"distributed\",\n        \"do\",\n        \"dynamic\",\n        \"else\",\n        \"enum\",\n        \"extension\",\n        \"fallthrough\",\n        /fileprivate\\(set\\)/,\n        \"fileprivate\",\n        \"final\",\n        \"for\",\n        \"func\",\n        \"get\",\n        \"guard\",\n        \"if\",\n        \"import\",\n        \"indirect\",\n        \"infix\",\n        /init\\?/,\n        /init!/,\n        \"inout\",\n        /internal\\(set\\)/,\n        \"internal\",\n        \"in\",\n        \"is\",\n        \"isolated\",\n        \"nonisolated\",\n        \"lazy\",\n        \"let\",\n        \"mutating\",\n        \"nonmutating\",\n        /open\\(set\\)/,\n        \"open\",\n        \"operator\",\n        \"optional\",\n        \"override\",\n        \"postfix\",\n        \"precedencegroup\",\n        \"prefix\",\n        /private\\(set\\)/,\n        \"private\",\n        \"protocol\",\n        /public\\(set\\)/,\n        \"public\",\n        \"repeat\",\n        \"required\",\n        \"rethrows\",\n        \"return\",\n        \"set\",\n        \"some\",\n        \"static\",\n        \"struct\",\n        \"subscript\",\n        \"super\",\n        \"switch\",\n        \"throws\",\n        \"throw\",\n        /try\\?/,\n        /try!/,\n        \"try\",\n        \"typealias\",\n        /unowned\\(safe\\)/,\n        /unowned\\(unsafe\\)/,\n        \"unowned\",\n        \"var\",\n        \"weak\",\n        \"where\",\n        \"while\",\n        \"willSet\"\n    ], Me = [\n        \"false\",\n        \"nil\",\n        \"true\"\n    ], Se = [\n        \"assignment\",\n        \"associativity\",\n        \"higherThan\",\n        \"left\",\n        \"lowerThan\",\n        \"none\",\n        \"right\"\n    ], Ae = [\n        \"#colorLiteral\",\n        \"#column\",\n        \"#dsohandle\",\n        \"#else\",\n        \"#elseif\",\n        \"#endif\",\n        \"#error\",\n        \"#file\",\n        \"#fileID\",\n        \"#fileLiteral\",\n        \"#filePath\",\n        \"#function\",\n        \"#if\",\n        \"#imageLiteral\",\n        \"#keyPath\",\n        \"#line\",\n        \"#selector\",\n        \"#sourceLocation\",\n        \"#warn_unqualified_access\",\n        \"#warning\"\n    ], Ce = [\n        \"abs\",\n        \"all\",\n        \"any\",\n        \"assert\",\n        \"assertionFailure\",\n        \"debugPrint\",\n        \"dump\",\n        \"fatalError\",\n        \"getVaList\",\n        \"isKnownUniquelyReferenced\",\n        \"max\",\n        \"min\",\n        \"numericCast\",\n        \"pointwiseMax\",\n        \"pointwiseMin\",\n        \"precondition\",\n        \"preconditionFailure\",\n        \"print\",\n        \"readLine\",\n        \"repeatElement\",\n        \"sequence\",\n        \"stride\",\n        \"swap\",\n        \"swift_unboxFromSwiftValueWithType\",\n        \"transcode\",\n        \"type\",\n        \"unsafeBitCast\",\n        \"unsafeDowncast\",\n        \"withExtendedLifetime\",\n        \"withUnsafeMutablePointer\",\n        \"withUnsafePointer\",\n        \"withVaList\",\n        \"withoutActuallyEscaping\",\n        \"zip\"\n    ], Te = p(/[/=\\-+!*%<>&|^~?]/, /[\\u00A1-\\u00A7]/, /[\\u00A9\\u00AB]/, /[\\u00AC\\u00AE]/, /[\\u00B0\\u00B1]/, /[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/, /[\\u2016-\\u2017]/, /[\\u2020-\\u2027]/, /[\\u2030-\\u203E]/, /[\\u2041-\\u2053]/, /[\\u2055-\\u205E]/, /[\\u2190-\\u23FF]/, /[\\u2500-\\u2775]/, /[\\u2794-\\u2BFF]/, /[\\u2E00-\\u2E7F]/, /[\\u3001-\\u3003]/, /[\\u3008-\\u3020]/, /[\\u3030]/), Re = p(Te, /[\\u0300-\\u036F]/, /[\\u1DC0-\\u1DFF]/, /[\\u20D0-\\u20FF]/, /[\\uFE00-\\uFE0F]/, /[\\uFE20-\\uFE2F]/), De = m(Te, Re, \"*\"), Ie = p(/[a-zA-Z_]/, /[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/, /[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/, /[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/, /[\\u1E00-\\u1FFF]/, /[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/, /[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/, /[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/, /[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/, /[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/, /[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/), Le = p(Ie, /\\d/, /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/), Be = m(Ie, Le, \"*\"), $e = m(/[A-Z]/, Le, \"*\"), ze = [\n        \"autoclosure\",\n        m(/convention\\(/, p(\"swift\", \"block\", \"c\"), /\\)/),\n        \"discardableResult\",\n        \"dynamicCallable\",\n        \"dynamicMemberLookup\",\n        \"escaping\",\n        \"frozen\",\n        \"GKInspectable\",\n        \"IBAction\",\n        \"IBDesignable\",\n        \"IBInspectable\",\n        \"IBOutlet\",\n        \"IBSegueAction\",\n        \"inlinable\",\n        \"main\",\n        \"nonobjc\",\n        \"NSApplicationMain\",\n        \"NSCopying\",\n        \"NSManaged\",\n        m(/objc\\(/, Be, /\\)/),\n        \"objc\",\n        \"objcMembers\",\n        \"propertyWrapper\",\n        \"requires_stored_property_inits\",\n        \"resultBuilder\",\n        \"testable\",\n        \"UIApplicationMain\",\n        \"unknown\",\n        \"usableFromInline\"\n    ], Fe = [\n        \"iOS\",\n        \"iOSApplicationExtension\",\n        \"macOS\",\n        \"macOSApplicationExtension\",\n        \"macCatalyst\",\n        \"macCatalystApplicationExtension\",\n        \"watchOS\",\n        \"watchOSApplicationExtension\",\n        \"tvOS\",\n        \"tvOSApplicationExtension\",\n        \"swift\"\n    ];\n    var Ue = Object.freeze({\n        __proto__: null,\n        grmr_bash: (e)=>{\n            const n = e.regex, t = {}, a = {\n                begin: /\\$\\{/,\n                end: /\\}/,\n                contains: [\n                    \"self\",\n                    {\n                        begin: /:-/,\n                        contains: [\n                            t\n                        ]\n                    }\n                ]\n            };\n            Object.assign(t, {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: n.concat(/\\$[\\w\\d#@][\\w\\d_]*/, \"(?![\\\\w\\\\d])(?![$])\")\n                    },\n                    a\n                ]\n            });\n            const i = {\n                className: \"subst\",\n                begin: /\\$\\(/,\n                end: /\\)/,\n                contains: [\n                    e.BACKSLASH_ESCAPE\n                ]\n            }, r = {\n                begin: /<<-?\\s*(?=\\w+)/,\n                starts: {\n                    contains: [\n                        e.END_SAME_AS_BEGIN({\n                            begin: /(\\w+)/,\n                            end: /(\\w+)/,\n                            className: \"string\"\n                        })\n                    ]\n                }\n            }, s = {\n                className: \"string\",\n                begin: /\"/,\n                end: /\"/,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    t,\n                    i\n                ]\n            };\n            i.contains.push(s);\n            const o = {\n                begin: /\\$?\\(\\(/,\n                end: /\\)\\)/,\n                contains: [\n                    {\n                        begin: /\\d+#[0-9a-f]+/,\n                        className: \"number\"\n                    },\n                    e.NUMBER_MODE,\n                    t\n                ]\n            }, l = e.SHEBANG({\n                binary: \"(fish|bash|zsh|sh|csh|ksh|tcsh|dash|scsh)\",\n                relevance: 10\n            }), c = {\n                className: \"function\",\n                begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n                returnBegin: !0,\n                contains: [\n                    e.inherit(e.TITLE_MODE, {\n                        begin: /\\w[\\w\\d_]*/\n                    })\n                ],\n                relevance: 0\n            };\n            return {\n                name: \"Bash\",\n                aliases: [\n                    \"sh\"\n                ],\n                keywords: {\n                    $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n                    keyword: [\n                        \"if\",\n                        \"then\",\n                        \"else\",\n                        \"elif\",\n                        \"fi\",\n                        \"for\",\n                        \"while\",\n                        \"in\",\n                        \"do\",\n                        \"done\",\n                        \"case\",\n                        \"esac\",\n                        \"function\"\n                    ],\n                    literal: [\n                        \"true\",\n                        \"false\"\n                    ],\n                    built_in: [\n                        \"break\",\n                        \"cd\",\n                        \"continue\",\n                        \"eval\",\n                        \"exec\",\n                        \"exit\",\n                        \"export\",\n                        \"getopts\",\n                        \"hash\",\n                        \"pwd\",\n                        \"readonly\",\n                        \"return\",\n                        \"shift\",\n                        \"test\",\n                        \"times\",\n                        \"trap\",\n                        \"umask\",\n                        \"unset\",\n                        \"alias\",\n                        \"bind\",\n                        \"builtin\",\n                        \"caller\",\n                        \"command\",\n                        \"declare\",\n                        \"echo\",\n                        \"enable\",\n                        \"help\",\n                        \"let\",\n                        \"local\",\n                        \"logout\",\n                        \"mapfile\",\n                        \"printf\",\n                        \"read\",\n                        \"readarray\",\n                        \"source\",\n                        \"type\",\n                        \"typeset\",\n                        \"ulimit\",\n                        \"unalias\",\n                        \"set\",\n                        \"shopt\",\n                        \"autoload\",\n                        \"bg\",\n                        \"bindkey\",\n                        \"bye\",\n                        \"cap\",\n                        \"chdir\",\n                        \"clone\",\n                        \"comparguments\",\n                        \"compcall\",\n                        \"compctl\",\n                        \"compdescribe\",\n                        \"compfiles\",\n                        \"compgroups\",\n                        \"compquote\",\n                        \"comptags\",\n                        \"comptry\",\n                        \"compvalues\",\n                        \"dirs\",\n                        \"disable\",\n                        \"disown\",\n                        \"echotc\",\n                        \"echoti\",\n                        \"emulate\",\n                        \"fc\",\n                        \"fg\",\n                        \"float\",\n                        \"functions\",\n                        \"getcap\",\n                        \"getln\",\n                        \"history\",\n                        \"integer\",\n                        \"jobs\",\n                        \"kill\",\n                        \"limit\",\n                        \"log\",\n                        \"noglob\",\n                        \"popd\",\n                        \"print\",\n                        \"pushd\",\n                        \"pushln\",\n                        \"rehash\",\n                        \"sched\",\n                        \"setcap\",\n                        \"setopt\",\n                        \"stat\",\n                        \"suspend\",\n                        \"ttyctl\",\n                        \"unfunction\",\n                        \"unhash\",\n                        \"unlimit\",\n                        \"unsetopt\",\n                        \"vared\",\n                        \"wait\",\n                        \"whence\",\n                        \"where\",\n                        \"which\",\n                        \"zcompile\",\n                        \"zformat\",\n                        \"zftp\",\n                        \"zle\",\n                        \"zmodload\",\n                        \"zparseopts\",\n                        \"zprof\",\n                        \"zpty\",\n                        \"zregexparse\",\n                        \"zsocket\",\n                        \"zstyle\",\n                        \"ztcp\",\n                        \"chcon\",\n                        \"chgrp\",\n                        \"chown\",\n                        \"chmod\",\n                        \"cp\",\n                        \"dd\",\n                        \"df\",\n                        \"dir\",\n                        \"dircolors\",\n                        \"ln\",\n                        \"ls\",\n                        \"mkdir\",\n                        \"mkfifo\",\n                        \"mknod\",\n                        \"mktemp\",\n                        \"mv\",\n                        \"realpath\",\n                        \"rm\",\n                        \"rmdir\",\n                        \"shred\",\n                        \"sync\",\n                        \"touch\",\n                        \"truncate\",\n                        \"vdir\",\n                        \"b2sum\",\n                        \"base32\",\n                        \"base64\",\n                        \"cat\",\n                        \"cksum\",\n                        \"comm\",\n                        \"csplit\",\n                        \"cut\",\n                        \"expand\",\n                        \"fmt\",\n                        \"fold\",\n                        \"head\",\n                        \"join\",\n                        \"md5sum\",\n                        \"nl\",\n                        \"numfmt\",\n                        \"od\",\n                        \"paste\",\n                        \"ptx\",\n                        \"pr\",\n                        \"sha1sum\",\n                        \"sha224sum\",\n                        \"sha256sum\",\n                        \"sha384sum\",\n                        \"sha512sum\",\n                        \"shuf\",\n                        \"sort\",\n                        \"split\",\n                        \"sum\",\n                        \"tac\",\n                        \"tail\",\n                        \"tr\",\n                        \"tsort\",\n                        \"unexpand\",\n                        \"uniq\",\n                        \"wc\",\n                        \"arch\",\n                        \"basename\",\n                        \"chroot\",\n                        \"date\",\n                        \"dirname\",\n                        \"du\",\n                        \"echo\",\n                        \"env\",\n                        \"expr\",\n                        \"factor\",\n                        \"groups\",\n                        \"hostid\",\n                        \"id\",\n                        \"link\",\n                        \"logname\",\n                        \"nice\",\n                        \"nohup\",\n                        \"nproc\",\n                        \"pathchk\",\n                        \"pinky\",\n                        \"printenv\",\n                        \"printf\",\n                        \"pwd\",\n                        \"readlink\",\n                        \"runcon\",\n                        \"seq\",\n                        \"sleep\",\n                        \"stat\",\n                        \"stdbuf\",\n                        \"stty\",\n                        \"tee\",\n                        \"test\",\n                        \"timeout\",\n                        \"tty\",\n                        \"uname\",\n                        \"unlink\",\n                        \"uptime\",\n                        \"users\",\n                        \"who\",\n                        \"whoami\",\n                        \"yes\"\n                    ]\n                },\n                contains: [\n                    l,\n                    e.SHEBANG(),\n                    c,\n                    o,\n                    e.HASH_COMMENT_MODE,\n                    r,\n                    {\n                        match: /(\\/[a-z._-]+)+/\n                    },\n                    s,\n                    {\n                        className: \"\",\n                        begin: /\\\\\"/\n                    },\n                    {\n                        className: \"string\",\n                        begin: /'/,\n                        end: /'/\n                    },\n                    t\n                ]\n            };\n        },\n        grmr_c: (e)=>{\n            const n = e.regex, t = e.COMMENT(\"//\", \"$\", {\n                contains: [\n                    {\n                        begin: /\\\\\\n/\n                    }\n                ]\n            }), a = \"[a-zA-Z_]\\\\w*::\", i = \"(decltype\\\\(auto\\\\)|\" + n.optional(a) + \"[a-zA-Z_]\\\\w*\" + n.optional(\"<[^<>]+>\") + \")\", r = {\n                className: \"type\",\n                variants: [\n                    {\n                        begin: \"\\\\b[a-z\\\\d_]*_t\\\\b\"\n                    },\n                    {\n                        match: /\\batomic_[a-z]{3,6}\\b/\n                    }\n                ]\n            }, s = {\n                className: \"string\",\n                variants: [\n                    {\n                        begin: '(u8?|U|L)?\"',\n                        end: '\"',\n                        illegal: \"\\\\n\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: \"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\n                        end: \"'\",\n                        illegal: \".\"\n                    },\n                    e.END_SAME_AS_BEGIN({\n                        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n                        end: /\\)([^()\\\\ ]{0,16})\"/\n                    })\n                ]\n            }, o = {\n                className: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b(0b[01']+)\"\n                    },\n                    {\n                        begin: \"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n                    },\n                    {\n                        begin: \"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n                    }\n                ],\n                relevance: 0\n            }, l = {\n                className: \"meta\",\n                begin: /#\\s*[a-z]+\\b/,\n                end: /$/,\n                keywords: {\n                    keyword: \"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n                },\n                contains: [\n                    {\n                        begin: /\\\\\\n/,\n                        relevance: 0\n                    },\n                    e.inherit(s, {\n                        className: \"string\"\n                    }),\n                    {\n                        className: \"string\",\n                        begin: /<.*?>/\n                    },\n                    t,\n                    e.C_BLOCK_COMMENT_MODE\n                ]\n            }, c = {\n                className: \"title\",\n                begin: n.optional(a) + e.IDENT_RE,\n                relevance: 0\n            }, d = n.optional(a) + e.IDENT_RE + \"\\\\s*\\\\(\", g = {\n                keyword: [\n                    \"asm\",\n                    \"auto\",\n                    \"break\",\n                    \"case\",\n                    \"continue\",\n                    \"default\",\n                    \"do\",\n                    \"else\",\n                    \"enum\",\n                    \"extern\",\n                    \"for\",\n                    \"fortran\",\n                    \"goto\",\n                    \"if\",\n                    \"inline\",\n                    \"register\",\n                    \"restrict\",\n                    \"return\",\n                    \"sizeof\",\n                    \"struct\",\n                    \"switch\",\n                    \"typedef\",\n                    \"union\",\n                    \"volatile\",\n                    \"while\",\n                    \"_Alignas\",\n                    \"_Alignof\",\n                    \"_Atomic\",\n                    \"_Generic\",\n                    \"_Noreturn\",\n                    \"_Static_assert\",\n                    \"_Thread_local\",\n                    \"alignas\",\n                    \"alignof\",\n                    \"noreturn\",\n                    \"static_assert\",\n                    \"thread_local\",\n                    \"_Pragma\"\n                ],\n                type: [\n                    \"float\",\n                    \"double\",\n                    \"signed\",\n                    \"unsigned\",\n                    \"int\",\n                    \"short\",\n                    \"long\",\n                    \"char\",\n                    \"void\",\n                    \"_Bool\",\n                    \"_Complex\",\n                    \"_Imaginary\",\n                    \"_Decimal32\",\n                    \"_Decimal64\",\n                    \"_Decimal128\",\n                    \"const\",\n                    \"static\",\n                    \"complex\",\n                    \"bool\",\n                    \"imaginary\"\n                ],\n                literal: \"true false NULL\",\n                built_in: \"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr\"\n            }, u = [\n                l,\n                r,\n                t,\n                e.C_BLOCK_COMMENT_MODE,\n                o,\n                s\n            ], b = {\n                variants: [\n                    {\n                        begin: /=/,\n                        end: /;/\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/\n                    },\n                    {\n                        beginKeywords: \"new throw return else\",\n                        end: /;/\n                    }\n                ],\n                keywords: g,\n                contains: u.concat([\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: g,\n                        contains: u.concat([\n                            \"self\"\n                        ]),\n                        relevance: 0\n                    }\n                ]),\n                relevance: 0\n            }, m = {\n                begin: \"(\" + i + \"[\\\\*&\\\\s]+)+\" + d,\n                returnBegin: !0,\n                end: /[{;=]/,\n                excludeEnd: !0,\n                keywords: g,\n                illegal: /[^\\w\\s\\*&:<>.]/,\n                contains: [\n                    {\n                        begin: \"decltype\\\\(auto\\\\)\",\n                        keywords: g,\n                        relevance: 0\n                    },\n                    {\n                        begin: d,\n                        returnBegin: !0,\n                        contains: [\n                            e.inherit(c, {\n                                className: \"title.function\"\n                            })\n                        ],\n                        relevance: 0\n                    },\n                    {\n                        relevance: 0,\n                        match: /,/\n                    },\n                    {\n                        className: \"params\",\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: g,\n                        relevance: 0,\n                        contains: [\n                            t,\n                            e.C_BLOCK_COMMENT_MODE,\n                            s,\n                            o,\n                            r,\n                            {\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: g,\n                                relevance: 0,\n                                contains: [\n                                    \"self\",\n                                    t,\n                                    e.C_BLOCK_COMMENT_MODE,\n                                    s,\n                                    o,\n                                    r\n                                ]\n                            }\n                        ]\n                    },\n                    r,\n                    t,\n                    e.C_BLOCK_COMMENT_MODE,\n                    l\n                ]\n            };\n            return {\n                name: \"C\",\n                aliases: [\n                    \"h\"\n                ],\n                keywords: g,\n                disableAutodetect: !0,\n                illegal: \"</\",\n                contains: [].concat(b, m, u, [\n                    l,\n                    {\n                        begin: e.IDENT_RE + \"::\",\n                        keywords: g\n                    },\n                    {\n                        className: \"class\",\n                        beginKeywords: \"enum class struct union\",\n                        end: /[{;:<>=]/,\n                        contains: [\n                            {\n                                beginKeywords: \"final class struct\"\n                            },\n                            e.TITLE_MODE\n                        ]\n                    }\n                ]),\n                exports: {\n                    preprocessor: l,\n                    strings: s,\n                    keywords: g\n                }\n            };\n        },\n        grmr_cpp: (e)=>{\n            const n = e.regex, t = e.COMMENT(\"//\", \"$\", {\n                contains: [\n                    {\n                        begin: /\\\\\\n/\n                    }\n                ]\n            }), a = \"[a-zA-Z_]\\\\w*::\", i = \"(?!struct)(decltype\\\\(auto\\\\)|\" + n.optional(a) + \"[a-zA-Z_]\\\\w*\" + n.optional(\"<[^<>]+>\") + \")\", r = {\n                className: \"type\",\n                begin: \"\\\\b[a-z\\\\d_]*_t\\\\b\"\n            }, s = {\n                className: \"string\",\n                variants: [\n                    {\n                        begin: '(u8?|U|L)?\"',\n                        end: '\"',\n                        illegal: \"\\\\n\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: \"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\n                        end: \"'\",\n                        illegal: \".\"\n                    },\n                    e.END_SAME_AS_BEGIN({\n                        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n                        end: /\\)([^()\\\\ ]{0,16})\"/\n                    })\n                ]\n            }, o = {\n                className: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b(0b[01']+)\"\n                    },\n                    {\n                        begin: \"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n                    },\n                    {\n                        begin: \"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n                    }\n                ],\n                relevance: 0\n            }, l = {\n                className: \"meta\",\n                begin: /#\\s*[a-z]+\\b/,\n                end: /$/,\n                keywords: {\n                    keyword: \"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n                },\n                contains: [\n                    {\n                        begin: /\\\\\\n/,\n                        relevance: 0\n                    },\n                    e.inherit(s, {\n                        className: \"string\"\n                    }),\n                    {\n                        className: \"string\",\n                        begin: /<.*?>/\n                    },\n                    t,\n                    e.C_BLOCK_COMMENT_MODE\n                ]\n            }, c = {\n                className: \"title\",\n                begin: n.optional(a) + e.IDENT_RE,\n                relevance: 0\n            }, d = n.optional(a) + e.IDENT_RE + \"\\\\s*\\\\(\", g = {\n                type: [\n                    \"bool\",\n                    \"char\",\n                    \"char16_t\",\n                    \"char32_t\",\n                    \"char8_t\",\n                    \"double\",\n                    \"float\",\n                    \"int\",\n                    \"long\",\n                    \"short\",\n                    \"void\",\n                    \"wchar_t\",\n                    \"unsigned\",\n                    \"signed\",\n                    \"const\",\n                    \"static\"\n                ],\n                keyword: [\n                    \"alignas\",\n                    \"alignof\",\n                    \"and\",\n                    \"and_eq\",\n                    \"asm\",\n                    \"atomic_cancel\",\n                    \"atomic_commit\",\n                    \"atomic_noexcept\",\n                    \"auto\",\n                    \"bitand\",\n                    \"bitor\",\n                    \"break\",\n                    \"case\",\n                    \"catch\",\n                    \"class\",\n                    \"co_await\",\n                    \"co_return\",\n                    \"co_yield\",\n                    \"compl\",\n                    \"concept\",\n                    \"const_cast|10\",\n                    \"consteval\",\n                    \"constexpr\",\n                    \"constinit\",\n                    \"continue\",\n                    \"decltype\",\n                    \"default\",\n                    \"delete\",\n                    \"do\",\n                    \"dynamic_cast|10\",\n                    \"else\",\n                    \"enum\",\n                    \"explicit\",\n                    \"export\",\n                    \"extern\",\n                    \"false\",\n                    \"final\",\n                    \"for\",\n                    \"friend\",\n                    \"goto\",\n                    \"if\",\n                    \"import\",\n                    \"inline\",\n                    \"module\",\n                    \"mutable\",\n                    \"namespace\",\n                    \"new\",\n                    \"noexcept\",\n                    \"not\",\n                    \"not_eq\",\n                    \"nullptr\",\n                    \"operator\",\n                    \"or\",\n                    \"or_eq\",\n                    \"override\",\n                    \"private\",\n                    \"protected\",\n                    \"public\",\n                    \"reflexpr\",\n                    \"register\",\n                    \"reinterpret_cast|10\",\n                    \"requires\",\n                    \"return\",\n                    \"sizeof\",\n                    \"static_assert\",\n                    \"static_cast|10\",\n                    \"struct\",\n                    \"switch\",\n                    \"synchronized\",\n                    \"template\",\n                    \"this\",\n                    \"thread_local\",\n                    \"throw\",\n                    \"transaction_safe\",\n                    \"transaction_safe_dynamic\",\n                    \"true\",\n                    \"try\",\n                    \"typedef\",\n                    \"typeid\",\n                    \"typename\",\n                    \"union\",\n                    \"using\",\n                    \"virtual\",\n                    \"volatile\",\n                    \"while\",\n                    \"xor\",\n                    \"xor_eq\"\n                ],\n                literal: [\n                    \"NULL\",\n                    \"false\",\n                    \"nullopt\",\n                    \"nullptr\",\n                    \"true\"\n                ],\n                built_in: [\n                    \"_Pragma\"\n                ],\n                _type_hints: [\n                    \"any\",\n                    \"auto_ptr\",\n                    \"barrier\",\n                    \"binary_semaphore\",\n                    \"bitset\",\n                    \"complex\",\n                    \"condition_variable\",\n                    \"condition_variable_any\",\n                    \"counting_semaphore\",\n                    \"deque\",\n                    \"false_type\",\n                    \"future\",\n                    \"imaginary\",\n                    \"initializer_list\",\n                    \"istringstream\",\n                    \"jthread\",\n                    \"latch\",\n                    \"lock_guard\",\n                    \"multimap\",\n                    \"multiset\",\n                    \"mutex\",\n                    \"optional\",\n                    \"ostringstream\",\n                    \"packaged_task\",\n                    \"pair\",\n                    \"promise\",\n                    \"priority_queue\",\n                    \"queue\",\n                    \"recursive_mutex\",\n                    \"recursive_timed_mutex\",\n                    \"scoped_lock\",\n                    \"set\",\n                    \"shared_future\",\n                    \"shared_lock\",\n                    \"shared_mutex\",\n                    \"shared_timed_mutex\",\n                    \"shared_ptr\",\n                    \"stack\",\n                    \"string_view\",\n                    \"stringstream\",\n                    \"timed_mutex\",\n                    \"thread\",\n                    \"true_type\",\n                    \"tuple\",\n                    \"unique_lock\",\n                    \"unique_ptr\",\n                    \"unordered_map\",\n                    \"unordered_multimap\",\n                    \"unordered_multiset\",\n                    \"unordered_set\",\n                    \"variant\",\n                    \"vector\",\n                    \"weak_ptr\",\n                    \"wstring\",\n                    \"wstring_view\"\n                ]\n            }, u = {\n                className: \"function.dispatch\",\n                relevance: 0,\n                keywords: {\n                    _hint: [\n                        \"abort\",\n                        \"abs\",\n                        \"acos\",\n                        \"apply\",\n                        \"as_const\",\n                        \"asin\",\n                        \"atan\",\n                        \"atan2\",\n                        \"calloc\",\n                        \"ceil\",\n                        \"cerr\",\n                        \"cin\",\n                        \"clog\",\n                        \"cos\",\n                        \"cosh\",\n                        \"cout\",\n                        \"declval\",\n                        \"endl\",\n                        \"exchange\",\n                        \"exit\",\n                        \"exp\",\n                        \"fabs\",\n                        \"floor\",\n                        \"fmod\",\n                        \"forward\",\n                        \"fprintf\",\n                        \"fputs\",\n                        \"free\",\n                        \"frexp\",\n                        \"fscanf\",\n                        \"future\",\n                        \"invoke\",\n                        \"isalnum\",\n                        \"isalpha\",\n                        \"iscntrl\",\n                        \"isdigit\",\n                        \"isgraph\",\n                        \"islower\",\n                        \"isprint\",\n                        \"ispunct\",\n                        \"isspace\",\n                        \"isupper\",\n                        \"isxdigit\",\n                        \"labs\",\n                        \"launder\",\n                        \"ldexp\",\n                        \"log\",\n                        \"log10\",\n                        \"make_pair\",\n                        \"make_shared\",\n                        \"make_shared_for_overwrite\",\n                        \"make_tuple\",\n                        \"make_unique\",\n                        \"malloc\",\n                        \"memchr\",\n                        \"memcmp\",\n                        \"memcpy\",\n                        \"memset\",\n                        \"modf\",\n                        \"move\",\n                        \"pow\",\n                        \"printf\",\n                        \"putchar\",\n                        \"puts\",\n                        \"realloc\",\n                        \"scanf\",\n                        \"sin\",\n                        \"sinh\",\n                        \"snprintf\",\n                        \"sprintf\",\n                        \"sqrt\",\n                        \"sscanf\",\n                        \"std\",\n                        \"stderr\",\n                        \"stdin\",\n                        \"stdout\",\n                        \"strcat\",\n                        \"strchr\",\n                        \"strcmp\",\n                        \"strcpy\",\n                        \"strcspn\",\n                        \"strlen\",\n                        \"strncat\",\n                        \"strncmp\",\n                        \"strncpy\",\n                        \"strpbrk\",\n                        \"strrchr\",\n                        \"strspn\",\n                        \"strstr\",\n                        \"swap\",\n                        \"tan\",\n                        \"tanh\",\n                        \"terminate\",\n                        \"to_underlying\",\n                        \"tolower\",\n                        \"toupper\",\n                        \"vfprintf\",\n                        \"visit\",\n                        \"vprintf\",\n                        \"vsprintf\"\n                    ]\n                },\n                begin: n.concat(/\\b/, /(?!decltype)/, /(?!if)/, /(?!for)/, /(?!switch)/, /(?!while)/, e.IDENT_RE, n.lookahead(/(<[^<>]+>|)\\s*\\(/))\n            }, b = [\n                u,\n                l,\n                r,\n                t,\n                e.C_BLOCK_COMMENT_MODE,\n                o,\n                s\n            ], m = {\n                variants: [\n                    {\n                        begin: /=/,\n                        end: /;/\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/\n                    },\n                    {\n                        beginKeywords: \"new throw return else\",\n                        end: /;/\n                    }\n                ],\n                keywords: g,\n                contains: b.concat([\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: g,\n                        contains: b.concat([\n                            \"self\"\n                        ]),\n                        relevance: 0\n                    }\n                ]),\n                relevance: 0\n            }, p = {\n                className: \"function\",\n                begin: \"(\" + i + \"[\\\\*&\\\\s]+)+\" + d,\n                returnBegin: !0,\n                end: /[{;=]/,\n                excludeEnd: !0,\n                keywords: g,\n                illegal: /[^\\w\\s\\*&:<>.]/,\n                contains: [\n                    {\n                        begin: \"decltype\\\\(auto\\\\)\",\n                        keywords: g,\n                        relevance: 0\n                    },\n                    {\n                        begin: d,\n                        returnBegin: !0,\n                        contains: [\n                            c\n                        ],\n                        relevance: 0\n                    },\n                    {\n                        begin: /::/,\n                        relevance: 0\n                    },\n                    {\n                        begin: /:/,\n                        endsWithParent: !0,\n                        contains: [\n                            s,\n                            o\n                        ]\n                    },\n                    {\n                        relevance: 0,\n                        match: /,/\n                    },\n                    {\n                        className: \"params\",\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: g,\n                        relevance: 0,\n                        contains: [\n                            t,\n                            e.C_BLOCK_COMMENT_MODE,\n                            s,\n                            o,\n                            r,\n                            {\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: g,\n                                relevance: 0,\n                                contains: [\n                                    \"self\",\n                                    t,\n                                    e.C_BLOCK_COMMENT_MODE,\n                                    s,\n                                    o,\n                                    r\n                                ]\n                            }\n                        ]\n                    },\n                    r,\n                    t,\n                    e.C_BLOCK_COMMENT_MODE,\n                    l\n                ]\n            };\n            return {\n                name: \"C++\",\n                aliases: [\n                    \"cc\",\n                    \"c++\",\n                    \"h++\",\n                    \"hpp\",\n                    \"hh\",\n                    \"hxx\",\n                    \"cxx\"\n                ],\n                keywords: g,\n                illegal: \"</\",\n                classNameAliases: {\n                    \"function.dispatch\": \"built_in\"\n                },\n                contains: [].concat(m, p, u, b, [\n                    l,\n                    {\n                        begin: \"\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)\",\n                        end: \">\",\n                        keywords: g,\n                        contains: [\n                            \"self\",\n                            r\n                        ]\n                    },\n                    {\n                        begin: e.IDENT_RE + \"::\",\n                        keywords: g\n                    },\n                    {\n                        match: [\n                            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n                            /\\s+/,\n                            /\\w+/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    }\n                ])\n            };\n        },\n        grmr_csharp: (e)=>{\n            const n = {\n                keyword: [\n                    \"abstract\",\n                    \"as\",\n                    \"base\",\n                    \"break\",\n                    \"case\",\n                    \"catch\",\n                    \"class\",\n                    \"const\",\n                    \"continue\",\n                    \"do\",\n                    \"else\",\n                    \"event\",\n                    \"explicit\",\n                    \"extern\",\n                    \"finally\",\n                    \"fixed\",\n                    \"for\",\n                    \"foreach\",\n                    \"goto\",\n                    \"if\",\n                    \"implicit\",\n                    \"in\",\n                    \"interface\",\n                    \"internal\",\n                    \"is\",\n                    \"lock\",\n                    \"namespace\",\n                    \"new\",\n                    \"operator\",\n                    \"out\",\n                    \"override\",\n                    \"params\",\n                    \"private\",\n                    \"protected\",\n                    \"public\",\n                    \"readonly\",\n                    \"record\",\n                    \"ref\",\n                    \"return\",\n                    \"scoped\",\n                    \"sealed\",\n                    \"sizeof\",\n                    \"stackalloc\",\n                    \"static\",\n                    \"struct\",\n                    \"switch\",\n                    \"this\",\n                    \"throw\",\n                    \"try\",\n                    \"typeof\",\n                    \"unchecked\",\n                    \"unsafe\",\n                    \"using\",\n                    \"virtual\",\n                    \"void\",\n                    \"volatile\",\n                    \"while\"\n                ].concat([\n                    \"add\",\n                    \"alias\",\n                    \"and\",\n                    \"ascending\",\n                    \"async\",\n                    \"await\",\n                    \"by\",\n                    \"descending\",\n                    \"equals\",\n                    \"from\",\n                    \"get\",\n                    \"global\",\n                    \"group\",\n                    \"init\",\n                    \"into\",\n                    \"join\",\n                    \"let\",\n                    \"nameof\",\n                    \"not\",\n                    \"notnull\",\n                    \"on\",\n                    \"or\",\n                    \"orderby\",\n                    \"partial\",\n                    \"remove\",\n                    \"select\",\n                    \"set\",\n                    \"unmanaged\",\n                    \"value|0\",\n                    \"var\",\n                    \"when\",\n                    \"where\",\n                    \"with\",\n                    \"yield\"\n                ]),\n                built_in: [\n                    \"bool\",\n                    \"byte\",\n                    \"char\",\n                    \"decimal\",\n                    \"delegate\",\n                    \"double\",\n                    \"dynamic\",\n                    \"enum\",\n                    \"float\",\n                    \"int\",\n                    \"long\",\n                    \"nint\",\n                    \"nuint\",\n                    \"object\",\n                    \"sbyte\",\n                    \"short\",\n                    \"string\",\n                    \"ulong\",\n                    \"uint\",\n                    \"ushort\"\n                ],\n                literal: [\n                    \"default\",\n                    \"false\",\n                    \"null\",\n                    \"true\"\n                ]\n            }, t = e.inherit(e.TITLE_MODE, {\n                begin: \"[a-zA-Z](\\\\.?\\\\w)*\"\n            }), a = {\n                className: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b(0b[01']+)\"\n                    },\n                    {\n                        begin: \"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)(u|U|l|L|ul|UL|f|F|b|B)\"\n                    },\n                    {\n                        begin: \"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n                    }\n                ],\n                relevance: 0\n            }, i = {\n                className: \"string\",\n                begin: '@\"',\n                end: '\"',\n                contains: [\n                    {\n                        begin: '\"\"'\n                    }\n                ]\n            }, r = e.inherit(i, {\n                illegal: /\\n/\n            }), s = {\n                className: \"subst\",\n                begin: /\\{/,\n                end: /\\}/,\n                keywords: n\n            }, o = e.inherit(s, {\n                illegal: /\\n/\n            }), l = {\n                className: \"string\",\n                begin: /\\$\"/,\n                end: '\"',\n                illegal: /\\n/,\n                contains: [\n                    {\n                        begin: /\\{\\{/\n                    },\n                    {\n                        begin: /\\}\\}/\n                    },\n                    e.BACKSLASH_ESCAPE,\n                    o\n                ]\n            }, c = {\n                className: \"string\",\n                begin: /\\$@\"/,\n                end: '\"',\n                contains: [\n                    {\n                        begin: /\\{\\{/\n                    },\n                    {\n                        begin: /\\}\\}/\n                    },\n                    {\n                        begin: '\"\"'\n                    },\n                    s\n                ]\n            }, d = e.inherit(c, {\n                illegal: /\\n/,\n                contains: [\n                    {\n                        begin: /\\{\\{/\n                    },\n                    {\n                        begin: /\\}\\}/\n                    },\n                    {\n                        begin: '\"\"'\n                    },\n                    o\n                ]\n            });\n            s.contains = [\n                c,\n                l,\n                i,\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE,\n                a,\n                e.C_BLOCK_COMMENT_MODE\n            ], o.contains = [\n                d,\n                l,\n                r,\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE,\n                a,\n                e.inherit(e.C_BLOCK_COMMENT_MODE, {\n                    illegal: /\\n/\n                })\n            ];\n            const g = {\n                variants: [\n                    c,\n                    l,\n                    i,\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE\n                ]\n            }, u = {\n                begin: \"<\",\n                end: \">\",\n                contains: [\n                    {\n                        beginKeywords: \"in out\"\n                    },\n                    t\n                ]\n            }, b = e.IDENT_RE + \"(<\" + e.IDENT_RE + \"(\\\\s*,\\\\s*\" + e.IDENT_RE + \")*>)?(\\\\[\\\\])?\", m = {\n                begin: \"@\" + e.IDENT_RE,\n                relevance: 0\n            };\n            return {\n                name: \"C#\",\n                aliases: [\n                    \"cs\",\n                    \"c#\"\n                ],\n                keywords: n,\n                illegal: /::/,\n                contains: [\n                    e.COMMENT(\"///\", \"$\", {\n                        returnBegin: !0,\n                        contains: [\n                            {\n                                className: \"doctag\",\n                                variants: [\n                                    {\n                                        begin: \"///\",\n                                        relevance: 0\n                                    },\n                                    {\n                                        begin: \"<!--|-->\"\n                                    },\n                                    {\n                                        begin: \"</?\",\n                                        end: \">\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }),\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    {\n                        className: \"meta\",\n                        begin: \"#\",\n                        end: \"$\",\n                        keywords: {\n                            keyword: \"if else elif endif define undef warning error line region endregion pragma checksum\"\n                        }\n                    },\n                    g,\n                    a,\n                    {\n                        beginKeywords: \"class interface\",\n                        relevance: 0,\n                        end: /[{;=]/,\n                        illegal: /[^\\s:,]/,\n                        contains: [\n                            {\n                                beginKeywords: \"where class\"\n                            },\n                            t,\n                            u,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"namespace\",\n                        relevance: 0,\n                        end: /[{;=]/,\n                        illegal: /[^\\s:]/,\n                        contains: [\n                            t,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"record\",\n                        relevance: 0,\n                        end: /[{;=]/,\n                        illegal: /[^\\s:]/,\n                        contains: [\n                            t,\n                            u,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        className: \"meta\",\n                        begin: \"^\\\\s*\\\\[(?=[\\\\w])\",\n                        excludeBegin: !0,\n                        end: \"\\\\]\",\n                        excludeEnd: !0,\n                        contains: [\n                            {\n                                className: \"string\",\n                                begin: /\"/,\n                                end: /\"/\n                            }\n                        ]\n                    },\n                    {\n                        beginKeywords: \"new return throw await else\",\n                        relevance: 0\n                    },\n                    {\n                        className: \"function\",\n                        begin: \"(\" + b + \"\\\\s+)+\" + e.IDENT_RE + \"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",\n                        returnBegin: !0,\n                        end: /\\s*[{;=]/,\n                        excludeEnd: !0,\n                        keywords: n,\n                        contains: [\n                            {\n                                beginKeywords: \"public private protected static internal protected abstract async extern override unsafe virtual new sealed partial\",\n                                relevance: 0\n                            },\n                            {\n                                begin: e.IDENT_RE + \"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",\n                                returnBegin: !0,\n                                contains: [\n                                    e.TITLE_MODE,\n                                    u\n                                ],\n                                relevance: 0\n                            },\n                            {\n                                match: /\\(\\)/\n                            },\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                excludeBegin: !0,\n                                excludeEnd: !0,\n                                keywords: n,\n                                relevance: 0,\n                                contains: [\n                                    g,\n                                    a,\n                                    e.C_BLOCK_COMMENT_MODE\n                                ]\n                            },\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    m\n                ]\n            };\n        },\n        grmr_css: (e)=>{\n            const n = e.regex, t = te(e), a = [\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE\n            ];\n            return {\n                name: \"CSS\",\n                case_insensitive: !0,\n                illegal: /[=|'\\$]/,\n                keywords: {\n                    keyframePosition: \"from to\"\n                },\n                classNameAliases: {\n                    keyframePosition: \"selector-tag\"\n                },\n                contains: [\n                    t.BLOCK_COMMENT,\n                    {\n                        begin: /-(webkit|moz|ms|o)-(?=[a-z])/\n                    },\n                    t.CSS_NUMBER_MODE,\n                    {\n                        className: \"selector-id\",\n                        begin: /#[A-Za-z0-9_-]+/,\n                        relevance: 0\n                    },\n                    {\n                        className: \"selector-class\",\n                        begin: \"\\\\.[a-zA-Z-][a-zA-Z0-9_-]*\",\n                        relevance: 0\n                    },\n                    t.ATTRIBUTE_SELECTOR_MODE,\n                    {\n                        className: \"selector-pseudo\",\n                        variants: [\n                            {\n                                begin: \":(\" + re.join(\"|\") + \")\"\n                            },\n                            {\n                                begin: \":(:)?(\" + se.join(\"|\") + \")\"\n                            }\n                        ]\n                    },\n                    t.CSS_VARIABLE,\n                    {\n                        className: \"attribute\",\n                        begin: \"\\\\b(\" + oe.join(\"|\") + \")\\\\b\"\n                    },\n                    {\n                        begin: /:/,\n                        end: /[;}{]/,\n                        contains: [\n                            t.BLOCK_COMMENT,\n                            t.HEXCOLOR,\n                            t.IMPORTANT,\n                            t.CSS_NUMBER_MODE,\n                            ...a,\n                            {\n                                begin: /(url|data-uri)\\(/,\n                                end: /\\)/,\n                                relevance: 0,\n                                keywords: {\n                                    built_in: \"url data-uri\"\n                                },\n                                contains: [\n                                    ...a,\n                                    {\n                                        className: \"string\",\n                                        begin: /[^)]/,\n                                        endsWithParent: !0,\n                                        excludeEnd: !0\n                                    }\n                                ]\n                            },\n                            t.FUNCTION_DISPATCH\n                        ]\n                    },\n                    {\n                        begin: n.lookahead(/@/),\n                        end: \"[{;]\",\n                        relevance: 0,\n                        illegal: /:/,\n                        contains: [\n                            {\n                                className: \"keyword\",\n                                begin: /@-?\\w[\\w]*(-\\w+)*/\n                            },\n                            {\n                                begin: /\\s/,\n                                endsWithParent: !0,\n                                excludeEnd: !0,\n                                relevance: 0,\n                                keywords: {\n                                    $pattern: /[a-z-]+/,\n                                    keyword: \"and or not only\",\n                                    attribute: ie.join(\" \")\n                                },\n                                contains: [\n                                    {\n                                        begin: /[a-z-]+(?=:)/,\n                                        className: \"attribute\"\n                                    },\n                                    ...a,\n                                    t.CSS_NUMBER_MODE\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        className: \"selector-tag\",\n                        begin: \"\\\\b(\" + ae.join(\"|\") + \")\\\\b\"\n                    }\n                ]\n            };\n        },\n        grmr_diff: (e)=>{\n            const n = e.regex;\n            return {\n                name: \"Diff\",\n                aliases: [\n                    \"patch\"\n                ],\n                contains: [\n                    {\n                        className: \"meta\",\n                        relevance: 10,\n                        match: n.either(/^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/, /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/, /^--- +\\d+,\\d+ +----$/)\n                    },\n                    {\n                        className: \"comment\",\n                        variants: [\n                            {\n                                begin: n.either(/Index: /, /^index/, /={3,}/, /^-{3}/, /^\\*{3} /, /^\\+{3}/, /^diff --git/),\n                                end: /$/\n                            },\n                            {\n                                match: /^\\*{15}$/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"addition\",\n                        begin: /^\\+/,\n                        end: /$/\n                    },\n                    {\n                        className: \"deletion\",\n                        begin: /^-/,\n                        end: /$/\n                    },\n                    {\n                        className: \"addition\",\n                        begin: /^!/,\n                        end: /$/\n                    }\n                ]\n            };\n        },\n        grmr_go: (e)=>{\n            const n = {\n                keyword: [\n                    \"break\",\n                    \"case\",\n                    \"chan\",\n                    \"const\",\n                    \"continue\",\n                    \"default\",\n                    \"defer\",\n                    \"else\",\n                    \"fallthrough\",\n                    \"for\",\n                    \"func\",\n                    \"go\",\n                    \"goto\",\n                    \"if\",\n                    \"import\",\n                    \"interface\",\n                    \"map\",\n                    \"package\",\n                    \"range\",\n                    \"return\",\n                    \"select\",\n                    \"struct\",\n                    \"switch\",\n                    \"type\",\n                    \"var\"\n                ],\n                type: [\n                    \"bool\",\n                    \"byte\",\n                    \"complex64\",\n                    \"complex128\",\n                    \"error\",\n                    \"float32\",\n                    \"float64\",\n                    \"int8\",\n                    \"int16\",\n                    \"int32\",\n                    \"int64\",\n                    \"string\",\n                    \"uint8\",\n                    \"uint16\",\n                    \"uint32\",\n                    \"uint64\",\n                    \"int\",\n                    \"uint\",\n                    \"uintptr\",\n                    \"rune\"\n                ],\n                literal: [\n                    \"true\",\n                    \"false\",\n                    \"iota\",\n                    \"nil\"\n                ],\n                built_in: [\n                    \"append\",\n                    \"cap\",\n                    \"close\",\n                    \"complex\",\n                    \"copy\",\n                    \"imag\",\n                    \"len\",\n                    \"make\",\n                    \"new\",\n                    \"panic\",\n                    \"print\",\n                    \"println\",\n                    \"real\",\n                    \"recover\",\n                    \"delete\"\n                ]\n            };\n            return {\n                name: \"Go\",\n                aliases: [\n                    \"golang\"\n                ],\n                keywords: n,\n                illegal: \"</\",\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    {\n                        className: \"string\",\n                        variants: [\n                            e.QUOTE_STRING_MODE,\n                            e.APOS_STRING_MODE,\n                            {\n                                begin: \"`\",\n                                end: \"`\"\n                            }\n                        ]\n                    },\n                    {\n                        className: \"number\",\n                        variants: [\n                            {\n                                begin: e.C_NUMBER_RE + \"[i]\",\n                                relevance: 1\n                            },\n                            e.C_NUMBER_MODE\n                        ]\n                    },\n                    {\n                        begin: /:=/\n                    },\n                    {\n                        className: \"function\",\n                        beginKeywords: \"func\",\n                        end: \"\\\\s*(\\\\{|$)\",\n                        excludeEnd: !0,\n                        contains: [\n                            e.TITLE_MODE,\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                endsParent: !0,\n                                keywords: n,\n                                illegal: /[\"']/\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_graphql: (e)=>{\n            const n = e.regex;\n            return {\n                name: \"GraphQL\",\n                aliases: [\n                    \"gql\"\n                ],\n                case_insensitive: !0,\n                disableAutodetect: !1,\n                keywords: {\n                    keyword: [\n                        \"query\",\n                        \"mutation\",\n                        \"subscription\",\n                        \"type\",\n                        \"input\",\n                        \"schema\",\n                        \"directive\",\n                        \"interface\",\n                        \"union\",\n                        \"scalar\",\n                        \"fragment\",\n                        \"enum\",\n                        \"on\"\n                    ],\n                    literal: [\n                        \"true\",\n                        \"false\",\n                        \"null\"\n                    ]\n                },\n                contains: [\n                    e.HASH_COMMENT_MODE,\n                    e.QUOTE_STRING_MODE,\n                    e.NUMBER_MODE,\n                    {\n                        scope: \"punctuation\",\n                        match: /[.]{3}/,\n                        relevance: 0\n                    },\n                    {\n                        scope: \"punctuation\",\n                        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n                        relevance: 0\n                    },\n                    {\n                        scope: \"variable\",\n                        begin: /\\$/,\n                        end: /\\W/,\n                        excludeEnd: !0,\n                        relevance: 0\n                    },\n                    {\n                        scope: \"meta\",\n                        match: /@\\w+/,\n                        excludeEnd: !0\n                    },\n                    {\n                        scope: \"symbol\",\n                        begin: n.concat(/[_A-Za-z][_0-9A-Za-z]*/, n.lookahead(/\\s*:/)),\n                        relevance: 0\n                    }\n                ],\n                illegal: [\n                    /[;<']/,\n                    /BEGIN/\n                ]\n            };\n        },\n        grmr_ini: (e)=>{\n            const n = e.regex, t = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: /([+-]+)?[\\d]+_[\\d_]+/\n                    },\n                    {\n                        begin: e.NUMBER_RE\n                    }\n                ]\n            }, a = e.COMMENT();\n            a.variants = [\n                {\n                    begin: /;/,\n                    end: /$/\n                },\n                {\n                    begin: /#/,\n                    end: /$/\n                }\n            ];\n            const i = {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: /\\$[\\w\\d\"][\\w\\d_]*/\n                    },\n                    {\n                        begin: /\\$\\{(.*?)\\}/\n                    }\n                ]\n            }, r = {\n                className: \"literal\",\n                begin: /\\bon|off|true|false|yes|no\\b/\n            }, s = {\n                className: \"string\",\n                contains: [\n                    e.BACKSLASH_ESCAPE\n                ],\n                variants: [\n                    {\n                        begin: \"'''\",\n                        end: \"'''\",\n                        relevance: 10\n                    },\n                    {\n                        begin: '\"\"\"',\n                        end: '\"\"\"',\n                        relevance: 10\n                    },\n                    {\n                        begin: '\"',\n                        end: '\"'\n                    },\n                    {\n                        begin: \"'\",\n                        end: \"'\"\n                    }\n                ]\n            }, o = {\n                begin: /\\[/,\n                end: /\\]/,\n                contains: [\n                    a,\n                    r,\n                    i,\n                    s,\n                    t,\n                    \"self\"\n                ],\n                relevance: 0\n            }, l = n.either(/[A-Za-z0-9_-]+/, /\"(\\\\\"|[^\"])*\"/, /'[^']*'/);\n            return {\n                name: \"TOML, also INI\",\n                aliases: [\n                    \"toml\"\n                ],\n                case_insensitive: !0,\n                illegal: /\\S/,\n                contains: [\n                    a,\n                    {\n                        className: \"section\",\n                        begin: /\\[+/,\n                        end: /\\]+/\n                    },\n                    {\n                        begin: n.concat(l, \"(\\\\s*\\\\.\\\\s*\", l, \")*\", n.lookahead(/\\s*=\\s*[^#\\s]/)),\n                        className: \"attr\",\n                        starts: {\n                            end: /$/,\n                            contains: [\n                                a,\n                                o,\n                                r,\n                                i,\n                                s,\n                                t\n                            ]\n                        }\n                    }\n                ]\n            };\n        },\n        grmr_java: (e)=>{\n            const n = e.regex, t = \"[\\xc0-\\u02B8a-zA-Z_$][\\xc0-\\u02B8a-zA-Z_$0-9]*\", a = t + ue(\"(?:<\" + t + \"~~~(?:\\\\s*,\\\\s*\" + t + \"~~~)*>)?\", /~~~/g, 2), i = {\n                keyword: [\n                    \"synchronized\",\n                    \"abstract\",\n                    \"private\",\n                    \"var\",\n                    \"static\",\n                    \"if\",\n                    \"const \",\n                    \"for\",\n                    \"while\",\n                    \"strictfp\",\n                    \"finally\",\n                    \"protected\",\n                    \"import\",\n                    \"native\",\n                    \"final\",\n                    \"void\",\n                    \"enum\",\n                    \"else\",\n                    \"break\",\n                    \"transient\",\n                    \"catch\",\n                    \"instanceof\",\n                    \"volatile\",\n                    \"case\",\n                    \"assert\",\n                    \"package\",\n                    \"default\",\n                    \"public\",\n                    \"try\",\n                    \"switch\",\n                    \"continue\",\n                    \"throws\",\n                    \"protected\",\n                    \"public\",\n                    \"private\",\n                    \"module\",\n                    \"requires\",\n                    \"exports\",\n                    \"do\",\n                    \"sealed\",\n                    \"yield\",\n                    \"permits\"\n                ],\n                literal: [\n                    \"false\",\n                    \"true\",\n                    \"null\"\n                ],\n                type: [\n                    \"char\",\n                    \"boolean\",\n                    \"long\",\n                    \"float\",\n                    \"int\",\n                    \"byte\",\n                    \"short\",\n                    \"double\"\n                ],\n                built_in: [\n                    \"super\",\n                    \"this\"\n                ]\n            }, r = {\n                className: \"meta\",\n                begin: \"@\" + t,\n                contains: [\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            \"self\"\n                        ]\n                    }\n                ]\n            }, s = {\n                className: \"params\",\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: i,\n                relevance: 0,\n                contains: [\n                    e.C_BLOCK_COMMENT_MODE\n                ],\n                endsParent: !0\n            };\n            return {\n                name: \"Java\",\n                aliases: [\n                    \"jsp\"\n                ],\n                keywords: i,\n                illegal: /<\\/|#/,\n                contains: [\n                    e.COMMENT(\"/\\\\*\\\\*\", \"\\\\*/\", {\n                        relevance: 0,\n                        contains: [\n                            {\n                                begin: /\\w+@/,\n                                relevance: 0\n                            },\n                            {\n                                className: \"doctag\",\n                                begin: \"@[A-Za-z]+\"\n                            }\n                        ]\n                    }),\n                    {\n                        begin: /import java\\.[a-z]+\\./,\n                        keywords: \"import\",\n                        relevance: 2\n                    },\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    {\n                        begin: /\"\"\"/,\n                        end: /\"\"\"/,\n                        className: \"string\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE,\n                    {\n                        match: [\n                            /\\b(?:class|interface|enum|extends|implements|new)/,\n                            /\\s+/,\n                            t\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    },\n                    {\n                        match: /non-sealed/,\n                        scope: \"keyword\"\n                    },\n                    {\n                        begin: [\n                            n.concat(/(?!else)/, t),\n                            /\\s+/,\n                            t,\n                            /\\s+/,\n                            /=(?!=)/\n                        ],\n                        className: {\n                            1: \"type\",\n                            3: \"variable\",\n                            5: \"operator\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /record/,\n                            /\\s+/,\n                            t\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        },\n                        contains: [\n                            s,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"new throw return else\",\n                        relevance: 0\n                    },\n                    {\n                        begin: [\n                            \"(?:\" + a + \"\\\\s+)\",\n                            e.UNDERSCORE_IDENT_RE,\n                            /\\s*(?=\\()/\n                        ],\n                        className: {\n                            2: \"title.function\"\n                        },\n                        keywords: i,\n                        contains: [\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: i,\n                                relevance: 0,\n                                contains: [\n                                    r,\n                                    e.APOS_STRING_MODE,\n                                    e.QUOTE_STRING_MODE,\n                                    ge,\n                                    e.C_BLOCK_COMMENT_MODE\n                                ]\n                            },\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    ge,\n                    r\n                ]\n            };\n        },\n        grmr_javascript: we,\n        grmr_json: (e)=>{\n            const n = [\n                \"true\",\n                \"false\",\n                \"null\"\n            ], t = {\n                scope: \"literal\",\n                beginKeywords: n.join(\" \")\n            };\n            return {\n                name: \"JSON\",\n                keywords: {\n                    literal: n\n                },\n                contains: [\n                    {\n                        className: \"attr\",\n                        begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n                        relevance: 1.01\n                    },\n                    {\n                        match: /[{}[\\],:]/,\n                        className: \"punctuation\",\n                        relevance: 0\n                    },\n                    e.QUOTE_STRING_MODE,\n                    t,\n                    e.C_NUMBER_MODE,\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE\n                ],\n                illegal: \"\\\\S\"\n            };\n        },\n        grmr_kotlin: (e)=>{\n            const n = {\n                keyword: \"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual\",\n                built_in: \"Byte Short Char Int Long Boolean Float Double Void Unit Nothing\",\n                literal: \"true false null\"\n            }, t = {\n                className: \"symbol\",\n                begin: e.UNDERSCORE_IDENT_RE + \"@\"\n            }, a = {\n                className: \"subst\",\n                begin: /\\$\\{/,\n                end: /\\}/,\n                contains: [\n                    e.C_NUMBER_MODE\n                ]\n            }, i = {\n                className: \"variable\",\n                begin: \"\\\\$\" + e.UNDERSCORE_IDENT_RE\n            }, r = {\n                className: \"string\",\n                variants: [\n                    {\n                        begin: '\"\"\"',\n                        end: '\"\"\"(?=[^\"])',\n                        contains: [\n                            i,\n                            a\n                        ]\n                    },\n                    {\n                        begin: \"'\",\n                        end: \"'\",\n                        illegal: /\\n/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: '\"',\n                        end: '\"',\n                        illegal: /\\n/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            i,\n                            a\n                        ]\n                    }\n                ]\n            };\n            a.contains.push(r);\n            const s = {\n                className: \"meta\",\n                begin: \"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*\" + e.UNDERSCORE_IDENT_RE + \")?\"\n            }, o = {\n                className: \"meta\",\n                begin: \"@\" + e.UNDERSCORE_IDENT_RE,\n                contains: [\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            e.inherit(r, {\n                                className: \"string\"\n                            }),\n                            \"self\"\n                        ]\n                    }\n                ]\n            }, l = ge, c = e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                contains: [\n                    e.C_BLOCK_COMMENT_MODE\n                ]\n            }), d = {\n                variants: [\n                    {\n                        className: \"type\",\n                        begin: e.UNDERSCORE_IDENT_RE\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: []\n                    }\n                ]\n            }, g = d;\n            return g.variants[1].contains = [\n                d\n            ], d.variants[1].contains = [\n                g\n            ], {\n                name: \"Kotlin\",\n                aliases: [\n                    \"kt\",\n                    \"kts\"\n                ],\n                keywords: n,\n                contains: [\n                    e.COMMENT(\"/\\\\*\\\\*\", \"\\\\*/\", {\n                        relevance: 0,\n                        contains: [\n                            {\n                                className: \"doctag\",\n                                begin: \"@[A-Za-z]+\"\n                            }\n                        ]\n                    }),\n                    e.C_LINE_COMMENT_MODE,\n                    c,\n                    {\n                        className: \"keyword\",\n                        begin: /\\b(break|continue|return|this)\\b/,\n                        starts: {\n                            contains: [\n                                {\n                                    className: \"symbol\",\n                                    begin: /@\\w+/\n                                }\n                            ]\n                        }\n                    },\n                    t,\n                    s,\n                    o,\n                    {\n                        className: \"function\",\n                        beginKeywords: \"fun\",\n                        end: \"[(]|$\",\n                        returnBegin: !0,\n                        excludeEnd: !0,\n                        keywords: n,\n                        relevance: 5,\n                        contains: [\n                            {\n                                begin: e.UNDERSCORE_IDENT_RE + \"\\\\s*\\\\(\",\n                                returnBegin: !0,\n                                relevance: 0,\n                                contains: [\n                                    e.UNDERSCORE_TITLE_MODE\n                                ]\n                            },\n                            {\n                                className: \"type\",\n                                begin: /</,\n                                end: />/,\n                                keywords: \"reified\",\n                                relevance: 0\n                            },\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                endsParent: !0,\n                                keywords: n,\n                                relevance: 0,\n                                contains: [\n                                    {\n                                        begin: /:/,\n                                        end: /[=,\\/]/,\n                                        endsWithParent: !0,\n                                        contains: [\n                                            d,\n                                            e.C_LINE_COMMENT_MODE,\n                                            c\n                                        ],\n                                        relevance: 0\n                                    },\n                                    e.C_LINE_COMMENT_MODE,\n                                    c,\n                                    s,\n                                    o,\n                                    r,\n                                    e.C_NUMBER_MODE\n                                ]\n                            },\n                            c\n                        ]\n                    },\n                    {\n                        begin: [\n                            /class|interface|trait/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        beginScope: {\n                            3: \"title.class\"\n                        },\n                        keywords: \"class interface trait\",\n                        end: /[:\\{(]|$/,\n                        excludeEnd: !0,\n                        illegal: \"extends implements\",\n                        contains: [\n                            {\n                                beginKeywords: \"public protected internal private constructor\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE,\n                            {\n                                className: \"type\",\n                                begin: /</,\n                                end: />/,\n                                excludeBegin: !0,\n                                excludeEnd: !0,\n                                relevance: 0\n                            },\n                            {\n                                className: \"type\",\n                                begin: /[,:]\\s*/,\n                                end: /[<\\(,){\\s]|$/,\n                                excludeBegin: !0,\n                                returnEnd: !0\n                            },\n                            s,\n                            o\n                        ]\n                    },\n                    r,\n                    {\n                        className: \"meta\",\n                        begin: \"^#!/usr/bin/env\",\n                        end: \"$\",\n                        illegal: \"\\n\"\n                    },\n                    l\n                ]\n            };\n        },\n        grmr_less: (e)=>{\n            const n = te(e), t = le, a = \"([\\\\w-]+|@\\\\{[\\\\w-]+\\\\})\", i = [], r = [], s = (e)=>({\n                    className: \"string\",\n                    begin: \"~?\" + e + \".*?\" + e\n                }), o = (e, n, t)=>({\n                    className: e,\n                    begin: n,\n                    relevance: t\n                }), l = {\n                $pattern: /[a-z-]+/,\n                keyword: \"and or not only\",\n                attribute: ie.join(\" \")\n            }, c = {\n                begin: \"\\\\(\",\n                end: \"\\\\)\",\n                contains: r,\n                keywords: l,\n                relevance: 0\n            };\n            r.push(e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, s(\"'\"), s('\"'), n.CSS_NUMBER_MODE, {\n                begin: \"(url|data-uri)\\\\(\",\n                starts: {\n                    className: \"string\",\n                    end: \"[\\\\)\\\\n]\",\n                    excludeEnd: !0\n                }\n            }, n.HEXCOLOR, c, o(\"variable\", \"@@?[\\\\w-]+\", 10), o(\"variable\", \"@\\\\{[\\\\w-]+\\\\}\"), o(\"built_in\", \"~?`[^`]*?`\"), {\n                className: \"attribute\",\n                begin: \"[\\\\w-]+\\\\s*:\",\n                end: \":\",\n                returnBegin: !0,\n                excludeEnd: !0\n            }, n.IMPORTANT, {\n                beginKeywords: \"and not\"\n            }, n.FUNCTION_DISPATCH);\n            const d = r.concat({\n                begin: /\\{/,\n                end: /\\}/,\n                contains: i\n            }), g = {\n                beginKeywords: \"when\",\n                endsWithParent: !0,\n                contains: [\n                    {\n                        beginKeywords: \"and not\"\n                    }\n                ].concat(r)\n            }, u = {\n                begin: a + \"\\\\s*:\",\n                returnBegin: !0,\n                end: /[;}]/,\n                relevance: 0,\n                contains: [\n                    {\n                        begin: /-(webkit|moz|ms|o)-/\n                    },\n                    n.CSS_VARIABLE,\n                    {\n                        className: \"attribute\",\n                        begin: \"\\\\b(\" + oe.join(\"|\") + \")\\\\b\",\n                        end: /(?=:)/,\n                        starts: {\n                            endsWithParent: !0,\n                            illegal: \"[<=$]\",\n                            relevance: 0,\n                            contains: r\n                        }\n                    }\n                ]\n            }, b = {\n                className: \"keyword\",\n                begin: \"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b\",\n                starts: {\n                    end: \"[;{}]\",\n                    keywords: l,\n                    returnEnd: !0,\n                    contains: r,\n                    relevance: 0\n                }\n            }, m = {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: \"@[\\\\w-]+\\\\s*:\",\n                        relevance: 15\n                    },\n                    {\n                        begin: \"@[\\\\w-]+\"\n                    }\n                ],\n                starts: {\n                    end: \"[;}]\",\n                    returnEnd: !0,\n                    contains: d\n                }\n            }, p = {\n                variants: [\n                    {\n                        begin: \"[\\\\.#:&\\\\[>]\",\n                        end: \"[;{}]\"\n                    },\n                    {\n                        begin: a,\n                        end: /\\{/\n                    }\n                ],\n                returnBegin: !0,\n                returnEnd: !0,\n                illegal: \"[<='$\\\"]\",\n                relevance: 0,\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    g,\n                    o(\"keyword\", \"all\\\\b\"),\n                    o(\"variable\", \"@\\\\{[\\\\w-]+\\\\}\"),\n                    {\n                        begin: \"\\\\b(\" + ae.join(\"|\") + \")\\\\b\",\n                        className: \"selector-tag\"\n                    },\n                    n.CSS_NUMBER_MODE,\n                    o(\"selector-tag\", a, 0),\n                    o(\"selector-id\", \"#\" + a),\n                    o(\"selector-class\", \"\\\\.\" + a, 0),\n                    o(\"selector-tag\", \"&\", 0),\n                    n.ATTRIBUTE_SELECTOR_MODE,\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(\" + re.join(\"|\") + \")\"\n                    },\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(:)?(\" + se.join(\"|\") + \")\"\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        relevance: 0,\n                        contains: d\n                    },\n                    {\n                        begin: \"!important\"\n                    },\n                    n.FUNCTION_DISPATCH\n                ]\n            }, _ = {\n                begin: `[\\\\w-]+:(:)?(${t.join(\"|\")})`,\n                returnBegin: !0,\n                contains: [\n                    p\n                ]\n            };\n            return i.push(e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, b, m, _, u, p, g, n.FUNCTION_DISPATCH), {\n                name: \"Less\",\n                case_insensitive: !0,\n                illegal: \"[=>'/<($\\\"]\",\n                contains: i\n            };\n        },\n        grmr_lua: (e)=>{\n            const n = \"\\\\[=*\\\\[\", t = \"\\\\]=*\\\\]\", a = {\n                begin: n,\n                end: t,\n                contains: [\n                    \"self\"\n                ]\n            }, i = [\n                e.COMMENT(\"--(?!\\\\[=*\\\\[)\", \"$\"),\n                e.COMMENT(\"--\\\\[=*\\\\[\", t, {\n                    contains: [\n                        a\n                    ],\n                    relevance: 10\n                })\n            ];\n            return {\n                name: \"Lua\",\n                keywords: {\n                    $pattern: e.UNDERSCORE_IDENT_RE,\n                    literal: \"true false nil\",\n                    keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\n                    built_in: \"_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove\"\n                },\n                contains: i.concat([\n                    {\n                        className: \"function\",\n                        beginKeywords: \"function\",\n                        end: \"\\\\)\",\n                        contains: [\n                            e.inherit(e.TITLE_MODE, {\n                                begin: \"([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*\"\n                            }),\n                            {\n                                className: \"params\",\n                                begin: \"\\\\(\",\n                                endsWithParent: !0,\n                                contains: i\n                            }\n                        ].concat(i)\n                    },\n                    e.C_NUMBER_MODE,\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE,\n                    {\n                        className: \"string\",\n                        begin: n,\n                        end: t,\n                        contains: [\n                            a\n                        ],\n                        relevance: 5\n                    }\n                ])\n            };\n        },\n        grmr_makefile: (e)=>{\n            const n = {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: \"\\\\$\\\\(\" + e.UNDERSCORE_IDENT_RE + \"\\\\)\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: /\\$[@%<?\\^\\+\\*]/\n                    }\n                ]\n            }, t = {\n                className: \"string\",\n                begin: /\"/,\n                end: /\"/,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    n\n                ]\n            }, a = {\n                className: \"variable\",\n                begin: /\\$\\([\\w-]+\\s/,\n                end: /\\)/,\n                keywords: {\n                    built_in: \"subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value\"\n                },\n                contains: [\n                    n\n                ]\n            }, i = {\n                begin: \"^\" + e.UNDERSCORE_IDENT_RE + \"\\\\s*(?=[:+?]?=)\"\n            }, r = {\n                className: \"section\",\n                begin: /^[^\\s]+:/,\n                end: /$/,\n                contains: [\n                    n\n                ]\n            };\n            return {\n                name: \"Makefile\",\n                aliases: [\n                    \"mk\",\n                    \"mak\",\n                    \"make\"\n                ],\n                keywords: {\n                    $pattern: /[\\w-]+/,\n                    keyword: \"define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath\"\n                },\n                contains: [\n                    e.HASH_COMMENT_MODE,\n                    n,\n                    t,\n                    a,\n                    i,\n                    {\n                        className: \"meta\",\n                        begin: /^\\.PHONY:/,\n                        end: /$/,\n                        keywords: {\n                            $pattern: /[\\.\\w]+/,\n                            keyword: \".PHONY\"\n                        }\n                    },\n                    r\n                ]\n            };\n        },\n        grmr_xml: (e)=>{\n            const n = e.regex, t = n.concat(/[\\p{L}_]/u, n.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u), a = {\n                className: \"symbol\",\n                begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n            }, i = {\n                begin: /\\s/,\n                contains: [\n                    {\n                        className: \"keyword\",\n                        begin: /#?[a-z_][a-z1-9_-]+/,\n                        illegal: /\\n/\n                    }\n                ]\n            }, r = e.inherit(i, {\n                begin: /\\(/,\n                end: /\\)/\n            }), s = e.inherit(e.APOS_STRING_MODE, {\n                className: \"string\"\n            }), o = e.inherit(e.QUOTE_STRING_MODE, {\n                className: \"string\"\n            }), l = {\n                endsWithParent: !0,\n                illegal: /</,\n                relevance: 0,\n                contains: [\n                    {\n                        className: \"attr\",\n                        begin: /[\\p{L}0-9._:-]+/u,\n                        relevance: 0\n                    },\n                    {\n                        begin: /=\\s*/,\n                        relevance: 0,\n                        contains: [\n                            {\n                                className: \"string\",\n                                endsParent: !0,\n                                variants: [\n                                    {\n                                        begin: /\"/,\n                                        end: /\"/,\n                                        contains: [\n                                            a\n                                        ]\n                                    },\n                                    {\n                                        begin: /'/,\n                                        end: /'/,\n                                        contains: [\n                                            a\n                                        ]\n                                    },\n                                    {\n                                        begin: /[^\\s\"'=<>`]+/\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            };\n            return {\n                name: \"HTML, XML\",\n                aliases: [\n                    \"html\",\n                    \"xhtml\",\n                    \"rss\",\n                    \"atom\",\n                    \"xjb\",\n                    \"xsd\",\n                    \"xsl\",\n                    \"plist\",\n                    \"wsf\",\n                    \"svg\"\n                ],\n                case_insensitive: !0,\n                unicodeRegex: !0,\n                contains: [\n                    {\n                        className: \"meta\",\n                        begin: /<![a-z]/,\n                        end: />/,\n                        relevance: 10,\n                        contains: [\n                            i,\n                            o,\n                            s,\n                            r,\n                            {\n                                begin: /\\[/,\n                                end: /\\]/,\n                                contains: [\n                                    {\n                                        className: \"meta\",\n                                        begin: /<![a-z]/,\n                                        end: />/,\n                                        contains: [\n                                            i,\n                                            r,\n                                            o,\n                                            s\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    e.COMMENT(/<!--/, /-->/, {\n                        relevance: 10\n                    }),\n                    {\n                        begin: /<!\\[CDATA\\[/,\n                        end: /\\]\\]>/,\n                        relevance: 10\n                    },\n                    a,\n                    {\n                        className: \"meta\",\n                        end: /\\?>/,\n                        variants: [\n                            {\n                                begin: /<\\?xml/,\n                                relevance: 10,\n                                contains: [\n                                    o\n                                ]\n                            },\n                            {\n                                begin: /<\\?[a-z][a-z0-9]+/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"tag\",\n                        begin: /<style(?=\\s|>)/,\n                        end: />/,\n                        keywords: {\n                            name: \"style\"\n                        },\n                        contains: [\n                            l\n                        ],\n                        starts: {\n                            end: /<\\/style>/,\n                            returnEnd: !0,\n                            subLanguage: [\n                                \"css\",\n                                \"xml\"\n                            ]\n                        }\n                    },\n                    {\n                        className: \"tag\",\n                        begin: /<script(?=\\s|>)/,\n                        end: />/,\n                        keywords: {\n                            name: \"script\"\n                        },\n                        contains: [\n                            l\n                        ],\n                        starts: {\n                            end: /<\\/script>/,\n                            returnEnd: !0,\n                            subLanguage: [\n                                \"javascript\",\n                                \"handlebars\",\n                                \"xml\"\n                            ]\n                        }\n                    },\n                    {\n                        className: \"tag\",\n                        begin: /<>|<\\/>/\n                    },\n                    {\n                        className: \"tag\",\n                        begin: n.concat(/</, n.lookahead(n.concat(t, n.either(/\\/>/, />/, /\\s/)))),\n                        end: /\\/?>/,\n                        contains: [\n                            {\n                                className: \"name\",\n                                begin: t,\n                                relevance: 0,\n                                starts: l\n                            }\n                        ]\n                    },\n                    {\n                        className: \"tag\",\n                        begin: n.concat(/<\\//, n.lookahead(n.concat(t, />/))),\n                        contains: [\n                            {\n                                className: \"name\",\n                                begin: t,\n                                relevance: 0\n                            },\n                            {\n                                begin: />/,\n                                relevance: 0,\n                                endsParent: !0\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_markdown: (e)=>{\n            const n = {\n                begin: /<\\/?[A-Za-z_]/,\n                end: \">\",\n                subLanguage: \"xml\",\n                relevance: 0\n            }, t = {\n                variants: [\n                    {\n                        begin: /\\[.+?\\]\\[.*?\\]/,\n                        relevance: 0\n                    },\n                    {\n                        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n                        relevance: 2\n                    },\n                    {\n                        begin: e.regex.concat(/\\[.+?\\]\\(/, /[A-Za-z][A-Za-z0-9+.-]*/, /:\\/\\/.*?\\)/),\n                        relevance: 2\n                    },\n                    {\n                        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\n                        relevance: 1\n                    },\n                    {\n                        begin: /\\[.*?\\]\\(.*?\\)/,\n                        relevance: 0\n                    }\n                ],\n                returnBegin: !0,\n                contains: [\n                    {\n                        match: /\\[(?=\\])/\n                    },\n                    {\n                        className: \"string\",\n                        relevance: 0,\n                        begin: \"\\\\[\",\n                        end: \"\\\\]\",\n                        excludeBegin: !0,\n                        returnEnd: !0\n                    },\n                    {\n                        className: \"link\",\n                        relevance: 0,\n                        begin: \"\\\\]\\\\(\",\n                        end: \"\\\\)\",\n                        excludeBegin: !0,\n                        excludeEnd: !0\n                    },\n                    {\n                        className: \"symbol\",\n                        relevance: 0,\n                        begin: \"\\\\]\\\\[\",\n                        end: \"\\\\]\",\n                        excludeBegin: !0,\n                        excludeEnd: !0\n                    }\n                ]\n            }, a = {\n                className: \"strong\",\n                contains: [],\n                variants: [\n                    {\n                        begin: /_{2}(?!\\s)/,\n                        end: /_{2}/\n                    },\n                    {\n                        begin: /\\*{2}(?!\\s)/,\n                        end: /\\*{2}/\n                    }\n                ]\n            }, i = {\n                className: \"emphasis\",\n                contains: [],\n                variants: [\n                    {\n                        begin: /\\*(?![*\\s])/,\n                        end: /\\*/\n                    },\n                    {\n                        begin: /_(?![_\\s])/,\n                        end: /_/,\n                        relevance: 0\n                    }\n                ]\n            }, r = e.inherit(a, {\n                contains: []\n            }), s = e.inherit(i, {\n                contains: []\n            });\n            a.contains.push(s), i.contains.push(r);\n            let o = [\n                n,\n                t\n            ];\n            return [\n                a,\n                i,\n                r,\n                s\n            ].forEach((e)=>{\n                e.contains = e.contains.concat(o);\n            }), o = o.concat(a, i), {\n                name: \"Markdown\",\n                aliases: [\n                    \"md\",\n                    \"mkdown\",\n                    \"mkd\"\n                ],\n                contains: [\n                    {\n                        className: \"section\",\n                        variants: [\n                            {\n                                begin: \"^#{1,6}\",\n                                end: \"$\",\n                                contains: o\n                            },\n                            {\n                                begin: \"(?=^.+?\\\\n[=-]{2,}$)\",\n                                contains: [\n                                    {\n                                        begin: \"^[=-]*$\"\n                                    },\n                                    {\n                                        begin: \"^\",\n                                        end: \"\\\\n\",\n                                        contains: o\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    n,\n                    {\n                        className: \"bullet\",\n                        begin: \"^[ \t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)\",\n                        end: \"\\\\s+\",\n                        excludeEnd: !0\n                    },\n                    a,\n                    i,\n                    {\n                        className: \"quote\",\n                        begin: \"^>\\\\s+\",\n                        contains: o,\n                        end: \"$\"\n                    },\n                    {\n                        className: \"code\",\n                        variants: [\n                            {\n                                begin: \"(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*\"\n                            },\n                            {\n                                begin: \"(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*\"\n                            },\n                            {\n                                begin: \"```\",\n                                end: \"```+[ ]*$\"\n                            },\n                            {\n                                begin: \"~~~\",\n                                end: \"~~~+[ ]*$\"\n                            },\n                            {\n                                begin: \"`.+?`\"\n                            },\n                            {\n                                begin: \"(?=^( {4}|\\\\t))\",\n                                contains: [\n                                    {\n                                        begin: \"^( {4}|\\\\t)\",\n                                        end: \"(\\\\n)$\"\n                                    }\n                                ],\n                                relevance: 0\n                            }\n                        ]\n                    },\n                    {\n                        begin: \"^[-\\\\*]{3,}\",\n                        end: \"$\"\n                    },\n                    t,\n                    {\n                        begin: /^\\[[^\\n]+\\]:/,\n                        returnBegin: !0,\n                        contains: [\n                            {\n                                className: \"symbol\",\n                                begin: /\\[/,\n                                end: /\\]/,\n                                excludeBegin: !0,\n                                excludeEnd: !0\n                            },\n                            {\n                                className: \"link\",\n                                begin: /:\\s*/,\n                                end: /$/,\n                                excludeBegin: !0\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_objectivec: (e)=>{\n            const n = /[a-zA-Z@][a-zA-Z0-9_]*/, t = {\n                $pattern: n,\n                keyword: [\n                    \"@interface\",\n                    \"@class\",\n                    \"@protocol\",\n                    \"@implementation\"\n                ]\n            };\n            return {\n                name: \"Objective-C\",\n                aliases: [\n                    \"mm\",\n                    \"objc\",\n                    \"obj-c\",\n                    \"obj-c++\",\n                    \"objective-c++\"\n                ],\n                keywords: {\n                    \"variable.language\": [\n                        \"this\",\n                        \"super\"\n                    ],\n                    $pattern: n,\n                    keyword: [\n                        \"while\",\n                        \"export\",\n                        \"sizeof\",\n                        \"typedef\",\n                        \"const\",\n                        \"struct\",\n                        \"for\",\n                        \"union\",\n                        \"volatile\",\n                        \"static\",\n                        \"mutable\",\n                        \"if\",\n                        \"do\",\n                        \"return\",\n                        \"goto\",\n                        \"enum\",\n                        \"else\",\n                        \"break\",\n                        \"extern\",\n                        \"asm\",\n                        \"case\",\n                        \"default\",\n                        \"register\",\n                        \"explicit\",\n                        \"typename\",\n                        \"switch\",\n                        \"continue\",\n                        \"inline\",\n                        \"readonly\",\n                        \"assign\",\n                        \"readwrite\",\n                        \"self\",\n                        \"@synchronized\",\n                        \"id\",\n                        \"typeof\",\n                        \"nonatomic\",\n                        \"IBOutlet\",\n                        \"IBAction\",\n                        \"strong\",\n                        \"weak\",\n                        \"copy\",\n                        \"in\",\n                        \"out\",\n                        \"inout\",\n                        \"bycopy\",\n                        \"byref\",\n                        \"oneway\",\n                        \"__strong\",\n                        \"__weak\",\n                        \"__block\",\n                        \"__autoreleasing\",\n                        \"@private\",\n                        \"@protected\",\n                        \"@public\",\n                        \"@try\",\n                        \"@property\",\n                        \"@end\",\n                        \"@throw\",\n                        \"@catch\",\n                        \"@finally\",\n                        \"@autoreleasepool\",\n                        \"@synthesize\",\n                        \"@dynamic\",\n                        \"@selector\",\n                        \"@optional\",\n                        \"@required\",\n                        \"@encode\",\n                        \"@package\",\n                        \"@import\",\n                        \"@defs\",\n                        \"@compatibility_alias\",\n                        \"__bridge\",\n                        \"__bridge_transfer\",\n                        \"__bridge_retained\",\n                        \"__bridge_retain\",\n                        \"__covariant\",\n                        \"__contravariant\",\n                        \"__kindof\",\n                        \"_Nonnull\",\n                        \"_Nullable\",\n                        \"_Null_unspecified\",\n                        \"__FUNCTION__\",\n                        \"__PRETTY_FUNCTION__\",\n                        \"__attribute__\",\n                        \"getter\",\n                        \"setter\",\n                        \"retain\",\n                        \"unsafe_unretained\",\n                        \"nonnull\",\n                        \"nullable\",\n                        \"null_unspecified\",\n                        \"null_resettable\",\n                        \"class\",\n                        \"instancetype\",\n                        \"NS_DESIGNATED_INITIALIZER\",\n                        \"NS_UNAVAILABLE\",\n                        \"NS_REQUIRES_SUPER\",\n                        \"NS_RETURNS_INNER_POINTER\",\n                        \"NS_INLINE\",\n                        \"NS_AVAILABLE\",\n                        \"NS_DEPRECATED\",\n                        \"NS_ENUM\",\n                        \"NS_OPTIONS\",\n                        \"NS_SWIFT_UNAVAILABLE\",\n                        \"NS_ASSUME_NONNULL_BEGIN\",\n                        \"NS_ASSUME_NONNULL_END\",\n                        \"NS_REFINED_FOR_SWIFT\",\n                        \"NS_SWIFT_NAME\",\n                        \"NS_SWIFT_NOTHROW\",\n                        \"NS_DURING\",\n                        \"NS_HANDLER\",\n                        \"NS_ENDHANDLER\",\n                        \"NS_VALUERETURN\",\n                        \"NS_VOIDRETURN\"\n                    ],\n                    literal: [\n                        \"false\",\n                        \"true\",\n                        \"FALSE\",\n                        \"TRUE\",\n                        \"nil\",\n                        \"YES\",\n                        \"NO\",\n                        \"NULL\"\n                    ],\n                    built_in: [\n                        \"dispatch_once_t\",\n                        \"dispatch_queue_t\",\n                        \"dispatch_sync\",\n                        \"dispatch_async\",\n                        \"dispatch_once\"\n                    ],\n                    type: [\n                        \"int\",\n                        \"float\",\n                        \"char\",\n                        \"unsigned\",\n                        \"signed\",\n                        \"short\",\n                        \"long\",\n                        \"double\",\n                        \"wchar_t\",\n                        \"unichar\",\n                        \"void\",\n                        \"bool\",\n                        \"BOOL\",\n                        \"id|0\",\n                        \"_Bool\"\n                    ]\n                },\n                illegal: \"</\",\n                contains: [\n                    {\n                        className: \"built_in\",\n                        begin: \"\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+\"\n                    },\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    e.C_NUMBER_MODE,\n                    e.QUOTE_STRING_MODE,\n                    e.APOS_STRING_MODE,\n                    {\n                        className: \"string\",\n                        variants: [\n                            {\n                                begin: '@\"',\n                                end: '\"',\n                                illegal: \"\\\\n\",\n                                contains: [\n                                    e.BACKSLASH_ESCAPE\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        className: \"meta\",\n                        begin: /#\\s*[a-z]+\\b/,\n                        end: /$/,\n                        keywords: {\n                            keyword: \"if else elif endif define undef warning error line pragma ifdef ifndef include\"\n                        },\n                        contains: [\n                            {\n                                begin: /\\\\\\n/,\n                                relevance: 0\n                            },\n                            e.inherit(e.QUOTE_STRING_MODE, {\n                                className: \"string\"\n                            }),\n                            {\n                                className: \"string\",\n                                begin: /<.*?>/,\n                                end: /$/,\n                                illegal: \"\\\\n\"\n                            },\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        className: \"class\",\n                        begin: \"(\" + t.keyword.join(\"|\") + \")\\\\b\",\n                        end: /(\\{|$)/,\n                        excludeEnd: !0,\n                        keywords: t,\n                        contains: [\n                            e.UNDERSCORE_TITLE_MODE\n                        ]\n                    },\n                    {\n                        begin: \"\\\\.\" + e.UNDERSCORE_IDENT_RE,\n                        relevance: 0\n                    }\n                ]\n            };\n        },\n        grmr_perl: (e)=>{\n            const n = e.regex, t = /[dualxmsipngr]{0,12}/, a = {\n                $pattern: /[\\w.]+/,\n                keyword: \"abs accept alarm and atan2 bind binmode bless break caller chdir chmod chomp chop chown chr chroot close closedir connect continue cos crypt dbmclose dbmopen defined delete die do dump each else elsif endgrent endhostent endnetent endprotoent endpwent endservent eof eval exec exists exit exp fcntl fileno flock for foreach fork format formline getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername getpgrp getpriority getprotobyname getprotobynumber getprotoent getpwent getpwnam getpwuid getservbyname getservbyport getservent getsockname getsockopt given glob gmtime goto grep gt hex if index int ioctl join keys kill last lc lcfirst length link listen local localtime log lstat lt ma map mkdir msgctl msgget msgrcv msgsnd my ne next no not oct open opendir or ord our pack package pipe pop pos print printf prototype push q|0 qq quotemeta qw qx rand read readdir readline readlink readpipe recv redo ref rename require reset return reverse rewinddir rindex rmdir say scalar seek seekdir select semctl semget semop send setgrent sethostent setnetent setpgrp setpriority setprotoent setpwent setservent setsockopt shift shmctl shmget shmread shmwrite shutdown sin sleep socket socketpair sort splice split sprintf sqrt srand stat state study sub substr symlink syscall sysopen sysread sysseek system syswrite tell telldir tie tied time times tr truncate uc ucfirst umask undef unless unlink unpack unshift untie until use utime values vec wait waitpid wantarray warn when while write x|0 xor y|0\"\n            }, i = {\n                className: \"subst\",\n                begin: \"[$@]\\\\{\",\n                end: \"\\\\}\",\n                keywords: a\n            }, r = {\n                begin: /->\\{/,\n                end: /\\}/\n            }, s = {\n                variants: [\n                    {\n                        begin: /\\$\\d/\n                    },\n                    {\n                        begin: n.concat(/[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/, \"(?![A-Za-z])(?![@$%])\")\n                    },\n                    {\n                        begin: /[$%@][^\\s\\w{]/,\n                        relevance: 0\n                    }\n                ]\n            }, o = [\n                e.BACKSLASH_ESCAPE,\n                i,\n                s\n            ], l = [\n                /!/,\n                /\\//,\n                /\\|/,\n                /\\?/,\n                /'/,\n                /\"/,\n                /#/\n            ], c = (e, a, i = \"\\\\1\")=>{\n                const r = \"\\\\1\" === i ? i : n.concat(i, a);\n                return n.concat(n.concat(\"(?:\", e, \")\"), a, /(?:\\\\.|[^\\\\\\/])*?/, r, /(?:\\\\.|[^\\\\\\/])*?/, i, t);\n            }, d = (e, a, i)=>n.concat(n.concat(\"(?:\", e, \")\"), a, /(?:\\\\.|[^\\\\\\/])*?/, i, t), g = [\n                s,\n                e.HASH_COMMENT_MODE,\n                e.COMMENT(/^=\\w/, /=cut/, {\n                    endsWithParent: !0\n                }),\n                r,\n                {\n                    className: \"string\",\n                    contains: o,\n                    variants: [\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\(\",\n                            end: \"\\\\)\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\[\",\n                            end: \"\\\\]\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\{\",\n                            end: \"\\\\}\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\|\",\n                            end: \"\\\\|\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*<\",\n                            end: \">\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"qw\\\\s+q\",\n                            end: \"q\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"'\",\n                            end: \"'\",\n                            contains: [\n                                e.BACKSLASH_ESCAPE\n                            ]\n                        },\n                        {\n                            begin: '\"',\n                            end: '\"'\n                        },\n                        {\n                            begin: \"`\",\n                            end: \"`\",\n                            contains: [\n                                e.BACKSLASH_ESCAPE\n                            ]\n                        },\n                        {\n                            begin: /\\{\\w+\\}/,\n                            relevance: 0\n                        },\n                        {\n                            begin: \"-?\\\\w+\\\\s*=>\",\n                            relevance: 0\n                        }\n                    ]\n                },\n                {\n                    className: \"number\",\n                    begin: \"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\",\n                    relevance: 0\n                },\n                {\n                    begin: \"(\\\\/\\\\/|\" + e.RE_STARTERS_RE + \"|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*\",\n                    keywords: \"split return print reverse grep\",\n                    relevance: 0,\n                    contains: [\n                        e.HASH_COMMENT_MODE,\n                        {\n                            className: \"regexp\",\n                            variants: [\n                                {\n                                    begin: c(\"s|tr|y\", n.either(...l, {\n                                        capture: !0\n                                    }))\n                                },\n                                {\n                                    begin: c(\"s|tr|y\", \"\\\\(\", \"\\\\)\")\n                                },\n                                {\n                                    begin: c(\"s|tr|y\", \"\\\\[\", \"\\\\]\")\n                                },\n                                {\n                                    begin: c(\"s|tr|y\", \"\\\\{\", \"\\\\}\")\n                                }\n                            ],\n                            relevance: 2\n                        },\n                        {\n                            className: \"regexp\",\n                            variants: [\n                                {\n                                    begin: /(m|qr)\\/\\//,\n                                    relevance: 0\n                                },\n                                {\n                                    begin: d(\"(?:m|qr)?\", /\\//, /\\//)\n                                },\n                                {\n                                    begin: d(\"m|qr\", n.either(...l, {\n                                        capture: !0\n                                    }), /\\1/)\n                                },\n                                {\n                                    begin: d(\"m|qr\", /\\(/, /\\)/)\n                                },\n                                {\n                                    begin: d(\"m|qr\", /\\[/, /\\]/)\n                                },\n                                {\n                                    begin: d(\"m|qr\", /\\{/, /\\}/)\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    className: \"function\",\n                    beginKeywords: \"sub\",\n                    end: \"(\\\\s*\\\\(.*?\\\\))?[;{]\",\n                    excludeEnd: !0,\n                    relevance: 5,\n                    contains: [\n                        e.TITLE_MODE\n                    ]\n                },\n                {\n                    begin: \"-\\\\w\\\\b\",\n                    relevance: 0\n                },\n                {\n                    begin: \"^__DATA__$\",\n                    end: \"^__END__$\",\n                    subLanguage: \"mojolicious\",\n                    contains: [\n                        {\n                            begin: \"^@@.*\",\n                            end: \"$\",\n                            className: \"comment\"\n                        }\n                    ]\n                }\n            ];\n            return i.contains = g, r.contains = g, {\n                name: \"Perl\",\n                aliases: [\n                    \"pl\",\n                    \"pm\"\n                ],\n                keywords: a,\n                contains: g\n            };\n        },\n        grmr_php: (e)=>{\n            const n = e.regex, t = /(?![A-Za-z0-9])(?![$])/, a = n.concat(/[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/, t), i = n.concat(/(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/, t), r = {\n                scope: \"variable\",\n                match: \"\\\\$+\" + a\n            }, s = {\n                scope: \"subst\",\n                variants: [\n                    {\n                        begin: /\\$\\w+/\n                    },\n                    {\n                        begin: /\\{\\$/,\n                        end: /\\}/\n                    }\n                ]\n            }, o = e.inherit(e.APOS_STRING_MODE, {\n                illegal: null\n            }), l = \"[ \t\\n]\", c = {\n                scope: \"string\",\n                variants: [\n                    e.inherit(e.QUOTE_STRING_MODE, {\n                        illegal: null,\n                        contains: e.QUOTE_STRING_MODE.contains.concat(s)\n                    }),\n                    o,\n                    e.END_SAME_AS_BEGIN({\n                        begin: /<<<[ \\t]*(\\w+)\\n/,\n                        end: /[ \\t]*(\\w+)\\b/,\n                        contains: e.QUOTE_STRING_MODE.contains.concat(s)\n                    })\n                ]\n            }, d = {\n                scope: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b0[bB][01]+(?:_[01]+)*\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b\"\n                    },\n                    {\n                        begin: \"(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?\"\n                    }\n                ],\n                relevance: 0\n            }, g = [\n                \"false\",\n                \"null\",\n                \"true\"\n            ], u = [\n                \"__CLASS__\",\n                \"__DIR__\",\n                \"__FILE__\",\n                \"__FUNCTION__\",\n                \"__COMPILER_HALT_OFFSET__\",\n                \"__LINE__\",\n                \"__METHOD__\",\n                \"__NAMESPACE__\",\n                \"__TRAIT__\",\n                \"die\",\n                \"echo\",\n                \"exit\",\n                \"include\",\n                \"include_once\",\n                \"print\",\n                \"require\",\n                \"require_once\",\n                \"array\",\n                \"abstract\",\n                \"and\",\n                \"as\",\n                \"binary\",\n                \"bool\",\n                \"boolean\",\n                \"break\",\n                \"callable\",\n                \"case\",\n                \"catch\",\n                \"class\",\n                \"clone\",\n                \"const\",\n                \"continue\",\n                \"declare\",\n                \"default\",\n                \"do\",\n                \"double\",\n                \"else\",\n                \"elseif\",\n                \"empty\",\n                \"enddeclare\",\n                \"endfor\",\n                \"endforeach\",\n                \"endif\",\n                \"endswitch\",\n                \"endwhile\",\n                \"enum\",\n                \"eval\",\n                \"extends\",\n                \"final\",\n                \"finally\",\n                \"float\",\n                \"for\",\n                \"foreach\",\n                \"from\",\n                \"global\",\n                \"goto\",\n                \"if\",\n                \"implements\",\n                \"instanceof\",\n                \"insteadof\",\n                \"int\",\n                \"integer\",\n                \"interface\",\n                \"isset\",\n                \"iterable\",\n                \"list\",\n                \"match|0\",\n                \"mixed\",\n                \"new\",\n                \"never\",\n                \"object\",\n                \"or\",\n                \"private\",\n                \"protected\",\n                \"public\",\n                \"readonly\",\n                \"real\",\n                \"return\",\n                \"string\",\n                \"switch\",\n                \"throw\",\n                \"trait\",\n                \"try\",\n                \"unset\",\n                \"use\",\n                \"var\",\n                \"void\",\n                \"while\",\n                \"xor\",\n                \"yield\"\n            ], b = [\n                \"Error|0\",\n                \"AppendIterator\",\n                \"ArgumentCountError\",\n                \"ArithmeticError\",\n                \"ArrayIterator\",\n                \"ArrayObject\",\n                \"AssertionError\",\n                \"BadFunctionCallException\",\n                \"BadMethodCallException\",\n                \"CachingIterator\",\n                \"CallbackFilterIterator\",\n                \"CompileError\",\n                \"Countable\",\n                \"DirectoryIterator\",\n                \"DivisionByZeroError\",\n                \"DomainException\",\n                \"EmptyIterator\",\n                \"ErrorException\",\n                \"Exception\",\n                \"FilesystemIterator\",\n                \"FilterIterator\",\n                \"GlobIterator\",\n                \"InfiniteIterator\",\n                \"InvalidArgumentException\",\n                \"IteratorIterator\",\n                \"LengthException\",\n                \"LimitIterator\",\n                \"LogicException\",\n                \"MultipleIterator\",\n                \"NoRewindIterator\",\n                \"OutOfBoundsException\",\n                \"OutOfRangeException\",\n                \"OuterIterator\",\n                \"OverflowException\",\n                \"ParentIterator\",\n                \"ParseError\",\n                \"RangeException\",\n                \"RecursiveArrayIterator\",\n                \"RecursiveCachingIterator\",\n                \"RecursiveCallbackFilterIterator\",\n                \"RecursiveDirectoryIterator\",\n                \"RecursiveFilterIterator\",\n                \"RecursiveIterator\",\n                \"RecursiveIteratorIterator\",\n                \"RecursiveRegexIterator\",\n                \"RecursiveTreeIterator\",\n                \"RegexIterator\",\n                \"RuntimeException\",\n                \"SeekableIterator\",\n                \"SplDoublyLinkedList\",\n                \"SplFileInfo\",\n                \"SplFileObject\",\n                \"SplFixedArray\",\n                \"SplHeap\",\n                \"SplMaxHeap\",\n                \"SplMinHeap\",\n                \"SplObjectStorage\",\n                \"SplObserver\",\n                \"SplPriorityQueue\",\n                \"SplQueue\",\n                \"SplStack\",\n                \"SplSubject\",\n                \"SplTempFileObject\",\n                \"TypeError\",\n                \"UnderflowException\",\n                \"UnexpectedValueException\",\n                \"UnhandledMatchError\",\n                \"ArrayAccess\",\n                \"BackedEnum\",\n                \"Closure\",\n                \"Fiber\",\n                \"Generator\",\n                \"Iterator\",\n                \"IteratorAggregate\",\n                \"Serializable\",\n                \"Stringable\",\n                \"Throwable\",\n                \"Traversable\",\n                \"UnitEnum\",\n                \"WeakReference\",\n                \"WeakMap\",\n                \"Directory\",\n                \"__PHP_Incomplete_Class\",\n                \"parent\",\n                \"php_user_filter\",\n                \"self\",\n                \"static\",\n                \"stdClass\"\n            ], m = {\n                keyword: u,\n                literal: ((e)=>{\n                    const n = [];\n                    return e.forEach((e)=>{\n                        n.push(e), e.toLowerCase() === e ? n.push(e.toUpperCase()) : n.push(e.toLowerCase());\n                    }), n;\n                })(g),\n                built_in: b\n            }, p = (e)=>e.map((e)=>e.replace(/\\|\\d+$/, \"\")), _ = {\n                variants: [\n                    {\n                        match: [\n                            /new/,\n                            n.concat(l, \"+\"),\n                            n.concat(\"(?!\", p(b).join(\"\\\\b|\"), \"\\\\b)\"),\n                            i\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            4: \"title.class\"\n                        }\n                    }\n                ]\n            }, h = n.concat(a, \"\\\\b(?!\\\\()\"), f = {\n                variants: [\n                    {\n                        match: [\n                            n.concat(/::/, n.lookahead(/(?!class\\b)/)),\n                            h\n                        ],\n                        scope: {\n                            2: \"variable.constant\"\n                        }\n                    },\n                    {\n                        match: [\n                            /::/,\n                            /class/\n                        ],\n                        scope: {\n                            2: \"variable.language\"\n                        }\n                    },\n                    {\n                        match: [\n                            i,\n                            n.concat(/::/, n.lookahead(/(?!class\\b)/)),\n                            h\n                        ],\n                        scope: {\n                            1: \"title.class\",\n                            3: \"variable.constant\"\n                        }\n                    },\n                    {\n                        match: [\n                            i,\n                            n.concat(\"::\", n.lookahead(/(?!class\\b)/))\n                        ],\n                        scope: {\n                            1: \"title.class\"\n                        }\n                    },\n                    {\n                        match: [\n                            i,\n                            /::/,\n                            /class/\n                        ],\n                        scope: {\n                            1: \"title.class\",\n                            3: \"variable.language\"\n                        }\n                    }\n                ]\n            }, E = {\n                scope: \"attr\",\n                match: n.concat(a, n.lookahead(\":\"), n.lookahead(/(?!::)/))\n            }, y = {\n                relevance: 0,\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: m,\n                contains: [\n                    E,\n                    r,\n                    f,\n                    e.C_BLOCK_COMMENT_MODE,\n                    c,\n                    d,\n                    _\n                ]\n            }, w = {\n                relevance: 0,\n                match: [\n                    /\\b/,\n                    n.concat(\"(?!fn\\\\b|function\\\\b|\", p(u).join(\"\\\\b|\"), \"|\", p(b).join(\"\\\\b|\"), \"\\\\b)\"),\n                    a,\n                    n.concat(l, \"*\"),\n                    n.lookahead(/(?=\\()/)\n                ],\n                scope: {\n                    3: \"title.function.invoke\"\n                },\n                contains: [\n                    y\n                ]\n            };\n            y.contains.push(w);\n            const N = [\n                E,\n                f,\n                e.C_BLOCK_COMMENT_MODE,\n                c,\n                d,\n                _\n            ];\n            return {\n                case_insensitive: !1,\n                keywords: m,\n                contains: [\n                    {\n                        begin: n.concat(/#\\[\\s*/, i),\n                        beginScope: \"meta\",\n                        end: /]/,\n                        endScope: \"meta\",\n                        keywords: {\n                            literal: g,\n                            keyword: [\n                                \"new\",\n                                \"array\"\n                            ]\n                        },\n                        contains: [\n                            {\n                                begin: /\\[/,\n                                end: /]/,\n                                keywords: {\n                                    literal: g,\n                                    keyword: [\n                                        \"new\",\n                                        \"array\"\n                                    ]\n                                },\n                                contains: [\n                                    \"self\",\n                                    ...N\n                                ]\n                            },\n                            ...N,\n                            {\n                                scope: \"meta\",\n                                match: i\n                            }\n                        ]\n                    },\n                    e.HASH_COMMENT_MODE,\n                    e.COMMENT(\"//\", \"$\"),\n                    e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                        contains: [\n                            {\n                                scope: \"doctag\",\n                                match: \"@[A-Za-z]+\"\n                            }\n                        ]\n                    }),\n                    {\n                        match: /__halt_compiler\\(\\);/,\n                        keywords: \"__halt_compiler\",\n                        starts: {\n                            scope: \"comment\",\n                            end: e.MATCH_NOTHING_RE,\n                            contains: [\n                                {\n                                    match: /\\?>/,\n                                    scope: \"meta\",\n                                    endsParent: !0\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        scope: \"meta\",\n                        variants: [\n                            {\n                                begin: /<\\?php/,\n                                relevance: 10\n                            },\n                            {\n                                begin: /<\\?=/\n                            },\n                            {\n                                begin: /<\\?/,\n                                relevance: .1\n                            },\n                            {\n                                begin: /\\?>/\n                            }\n                        ]\n                    },\n                    {\n                        scope: \"variable.language\",\n                        match: /\\$this\\b/\n                    },\n                    r,\n                    w,\n                    f,\n                    {\n                        match: [\n                            /const/,\n                            /\\s/,\n                            a\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            3: \"variable.constant\"\n                        }\n                    },\n                    _,\n                    {\n                        scope: \"function\",\n                        relevance: 0,\n                        beginKeywords: \"fn function\",\n                        end: /[;{]/,\n                        excludeEnd: !0,\n                        illegal: \"[$%\\\\[]\",\n                        contains: [\n                            {\n                                beginKeywords: \"use\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE,\n                            {\n                                begin: \"=>\",\n                                endsParent: !0\n                            },\n                            {\n                                scope: \"params\",\n                                begin: \"\\\\(\",\n                                end: \"\\\\)\",\n                                excludeBegin: !0,\n                                excludeEnd: !0,\n                                keywords: m,\n                                contains: [\n                                    \"self\",\n                                    r,\n                                    f,\n                                    e.C_BLOCK_COMMENT_MODE,\n                                    c,\n                                    d\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        scope: \"class\",\n                        variants: [\n                            {\n                                beginKeywords: \"enum\",\n                                illegal: /[($\"]/\n                            },\n                            {\n                                beginKeywords: \"class interface trait\",\n                                illegal: /[:($\"]/\n                            }\n                        ],\n                        relevance: 0,\n                        end: /\\{/,\n                        excludeEnd: !0,\n                        contains: [\n                            {\n                                beginKeywords: \"extends implements\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"namespace\",\n                        relevance: 0,\n                        end: \";\",\n                        illegal: /[.']/,\n                        contains: [\n                            e.inherit(e.UNDERSCORE_TITLE_MODE, {\n                                scope: \"title.class\"\n                            })\n                        ]\n                    },\n                    {\n                        beginKeywords: \"use\",\n                        relevance: 0,\n                        end: \";\",\n                        contains: [\n                            {\n                                match: /\\b(as|const|function)\\b/,\n                                scope: \"keyword\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE\n                        ]\n                    },\n                    c,\n                    d\n                ]\n            };\n        },\n        grmr_php_template: (e)=>({\n                name: \"PHP template\",\n                subLanguage: \"xml\",\n                contains: [\n                    {\n                        begin: /<\\?(php|=)?/,\n                        end: /\\?>/,\n                        subLanguage: \"php\",\n                        contains: [\n                            {\n                                begin: \"/\\\\*\",\n                                end: \"\\\\*/\",\n                                skip: !0\n                            },\n                            {\n                                begin: 'b\"',\n                                end: '\"',\n                                skip: !0\n                            },\n                            {\n                                begin: \"b'\",\n                                end: \"'\",\n                                skip: !0\n                            },\n                            e.inherit(e.APOS_STRING_MODE, {\n                                illegal: null,\n                                className: null,\n                                contains: null,\n                                skip: !0\n                            }),\n                            e.inherit(e.QUOTE_STRING_MODE, {\n                                illegal: null,\n                                className: null,\n                                contains: null,\n                                skip: !0\n                            })\n                        ]\n                    }\n                ]\n            }),\n        grmr_plaintext: (e)=>({\n                name: \"Plain text\",\n                aliases: [\n                    \"text\",\n                    \"txt\"\n                ],\n                disableAutodetect: !0\n            }),\n        grmr_python: (e)=>{\n            const n = e.regex, t = /[\\p{XID_Start}_]\\p{XID_Continue}*/u, a = [\n                \"and\",\n                \"as\",\n                \"assert\",\n                \"async\",\n                \"await\",\n                \"break\",\n                \"case\",\n                \"class\",\n                \"continue\",\n                \"def\",\n                \"del\",\n                \"elif\",\n                \"else\",\n                \"except\",\n                \"finally\",\n                \"for\",\n                \"from\",\n                \"global\",\n                \"if\",\n                \"import\",\n                \"in\",\n                \"is\",\n                \"lambda\",\n                \"match\",\n                \"nonlocal|10\",\n                \"not\",\n                \"or\",\n                \"pass\",\n                \"raise\",\n                \"return\",\n                \"try\",\n                \"while\",\n                \"with\",\n                \"yield\"\n            ], i = {\n                $pattern: /[A-Za-z]\\w+|__\\w+__/,\n                keyword: a,\n                built_in: [\n                    \"__import__\",\n                    \"abs\",\n                    \"all\",\n                    \"any\",\n                    \"ascii\",\n                    \"bin\",\n                    \"bool\",\n                    \"breakpoint\",\n                    \"bytearray\",\n                    \"bytes\",\n                    \"callable\",\n                    \"chr\",\n                    \"classmethod\",\n                    \"compile\",\n                    \"complex\",\n                    \"delattr\",\n                    \"dict\",\n                    \"dir\",\n                    \"divmod\",\n                    \"enumerate\",\n                    \"eval\",\n                    \"exec\",\n                    \"filter\",\n                    \"float\",\n                    \"format\",\n                    \"frozenset\",\n                    \"getattr\",\n                    \"globals\",\n                    \"hasattr\",\n                    \"hash\",\n                    \"help\",\n                    \"hex\",\n                    \"id\",\n                    \"input\",\n                    \"int\",\n                    \"isinstance\",\n                    \"issubclass\",\n                    \"iter\",\n                    \"len\",\n                    \"list\",\n                    \"locals\",\n                    \"map\",\n                    \"max\",\n                    \"memoryview\",\n                    \"min\",\n                    \"next\",\n                    \"object\",\n                    \"oct\",\n                    \"open\",\n                    \"ord\",\n                    \"pow\",\n                    \"print\",\n                    \"property\",\n                    \"range\",\n                    \"repr\",\n                    \"reversed\",\n                    \"round\",\n                    \"set\",\n                    \"setattr\",\n                    \"slice\",\n                    \"sorted\",\n                    \"staticmethod\",\n                    \"str\",\n                    \"sum\",\n                    \"super\",\n                    \"tuple\",\n                    \"type\",\n                    \"vars\",\n                    \"zip\"\n                ],\n                literal: [\n                    \"__debug__\",\n                    \"Ellipsis\",\n                    \"False\",\n                    \"None\",\n                    \"NotImplemented\",\n                    \"True\"\n                ],\n                type: [\n                    \"Any\",\n                    \"Callable\",\n                    \"Coroutine\",\n                    \"Dict\",\n                    \"List\",\n                    \"Literal\",\n                    \"Generic\",\n                    \"Optional\",\n                    \"Sequence\",\n                    \"Set\",\n                    \"Tuple\",\n                    \"Type\",\n                    \"Union\"\n                ]\n            }, r = {\n                className: \"meta\",\n                begin: /^(>>>|\\.\\.\\.) /\n            }, s = {\n                className: \"subst\",\n                begin: /\\{/,\n                end: /\\}/,\n                keywords: i,\n                illegal: /#/\n            }, o = {\n                begin: /\\{\\{/,\n                relevance: 0\n            }, l = {\n                className: \"string\",\n                contains: [\n                    e.BACKSLASH_ESCAPE\n                ],\n                variants: [\n                    {\n                        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n                        end: /'''/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r\n                        ],\n                        relevance: 10\n                    },\n                    {\n                        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n                        end: /\"\"\"/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r\n                        ],\n                        relevance: 10\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n                        end: /'''/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r,\n                            o,\n                            s\n                        ]\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n                        end: /\"\"\"/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r,\n                            o,\n                            s\n                        ]\n                    },\n                    {\n                        begin: /([uU]|[rR])'/,\n                        end: /'/,\n                        relevance: 10\n                    },\n                    {\n                        begin: /([uU]|[rR])\"/,\n                        end: /\"/,\n                        relevance: 10\n                    },\n                    {\n                        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n                        end: /'/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            o,\n                            s\n                        ]\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n                        end: /\"/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            o,\n                            s\n                        ]\n                    },\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE\n                ]\n            }, c = \"[0-9](_?[0-9])*\", d = `(\\\\b(${c}))?\\\\.(${c})|\\\\b(${c})\\\\.`, g = \"\\\\b|\" + a.join(\"|\"), u = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: `(\\\\b(${c})|(${d}))[eE][+-]?(${c})[jJ]?(?=${g})`\n                    },\n                    {\n                        begin: `(${d})[jJ]?`\n                    },\n                    {\n                        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b(${c})[jJ](?=${g})`\n                    }\n                ]\n            }, b = {\n                className: \"comment\",\n                begin: n.lookahead(/# type:/),\n                end: /$/,\n                keywords: i,\n                contains: [\n                    {\n                        begin: /# type:/\n                    },\n                    {\n                        begin: /#/,\n                        end: /\\b\\B/,\n                        endsWithParent: !0\n                    }\n                ]\n            }, m = {\n                className: \"params\",\n                variants: [\n                    {\n                        className: \"\",\n                        begin: /\\(\\s*\\)/,\n                        skip: !0\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        excludeBegin: !0,\n                        excludeEnd: !0,\n                        keywords: i,\n                        contains: [\n                            \"self\",\n                            r,\n                            u,\n                            l,\n                            e.HASH_COMMENT_MODE\n                        ]\n                    }\n                ]\n            };\n            return s.contains = [\n                l,\n                u,\n                r\n            ], {\n                name: \"Python\",\n                aliases: [\n                    \"py\",\n                    \"gyp\",\n                    \"ipython\"\n                ],\n                unicodeRegex: !0,\n                keywords: i,\n                illegal: /(<\\/|->|\\?)|=>/,\n                contains: [\n                    r,\n                    u,\n                    {\n                        begin: /\\bself\\b/\n                    },\n                    {\n                        beginKeywords: \"if\",\n                        relevance: 0\n                    },\n                    l,\n                    b,\n                    e.HASH_COMMENT_MODE,\n                    {\n                        match: [\n                            /\\bdef/,\n                            /\\s+/,\n                            t\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            3: \"title.function\"\n                        },\n                        contains: [\n                            m\n                        ]\n                    },\n                    {\n                        variants: [\n                            {\n                                match: [\n                                    /\\bclass/,\n                                    /\\s+/,\n                                    t,\n                                    /\\s*/,\n                                    /\\(\\s*/,\n                                    t,\n                                    /\\s*\\)/\n                                ]\n                            },\n                            {\n                                match: [\n                                    /\\bclass/,\n                                    /\\s+/,\n                                    t\n                                ]\n                            }\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            3: \"title.class\",\n                            6: \"title.class.inherited\"\n                        }\n                    },\n                    {\n                        className: \"meta\",\n                        begin: /^[\\t ]*@/,\n                        end: /(?=#)|$/,\n                        contains: [\n                            u,\n                            m,\n                            l\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_python_repl: (e)=>({\n                aliases: [\n                    \"pycon\"\n                ],\n                contains: [\n                    {\n                        className: \"meta.prompt\",\n                        starts: {\n                            end: / |$/,\n                            starts: {\n                                end: \"$\",\n                                subLanguage: \"python\"\n                            }\n                        },\n                        variants: [\n                            {\n                                begin: /^>>>(?=[ ]|$)/\n                            },\n                            {\n                                begin: /^\\.\\.\\.(?=[ ]|$)/\n                            }\n                        ]\n                    }\n                ]\n            }),\n        grmr_r: (e)=>{\n            const n = e.regex, t = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/, a = n.either(/0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/, /0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/, /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/), i = /[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/, r = n.either(/[()]/, /[{}]/, /\\[\\[/, /[[\\]]/, /\\\\/, /,/);\n            return {\n                name: \"R\",\n                keywords: {\n                    $pattern: t,\n                    keyword: \"function if in break next repeat else for while\",\n                    literal: \"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10\",\n                    built_in: \"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm\"\n                },\n                contains: [\n                    e.COMMENT(/#'/, /$/, {\n                        contains: [\n                            {\n                                scope: \"doctag\",\n                                match: /@examples/,\n                                starts: {\n                                    end: n.lookahead(n.either(/\\n^#'\\s*(?=@[a-zA-Z]+)/, /\\n^(?!#')/)),\n                                    endsParent: !0\n                                }\n                            },\n                            {\n                                scope: \"doctag\",\n                                begin: \"@param\",\n                                end: /$/,\n                                contains: [\n                                    {\n                                        scope: \"variable\",\n                                        variants: [\n                                            {\n                                                match: t\n                                            },\n                                            {\n                                                match: /`(?:\\\\.|[^`\\\\])+`/\n                                            }\n                                        ],\n                                        endsParent: !0\n                                    }\n                                ]\n                            },\n                            {\n                                scope: \"doctag\",\n                                match: /@[a-zA-Z]+/\n                            },\n                            {\n                                scope: \"keyword\",\n                                match: /\\\\[a-zA-Z]+/\n                            }\n                        ]\n                    }),\n                    e.HASH_COMMENT_MODE,\n                    {\n                        scope: \"string\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ],\n                        variants: [\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]\"(-*)\\(/,\n                                end: /\\)(-*)\"/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]\"(-*)\\{/,\n                                end: /\\}(-*)\"/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]\"(-*)\\[/,\n                                end: /\\](-*)\"/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]'(-*)\\(/,\n                                end: /\\)(-*)'/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]'(-*)\\{/,\n                                end: /\\}(-*)'/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]'(-*)\\[/,\n                                end: /\\](-*)'/\n                            }),\n                            {\n                                begin: '\"',\n                                end: '\"',\n                                relevance: 0\n                            },\n                            {\n                                begin: \"'\",\n                                end: \"'\",\n                                relevance: 0\n                            }\n                        ]\n                    },\n                    {\n                        relevance: 0,\n                        variants: [\n                            {\n                                scope: {\n                                    1: \"operator\",\n                                    2: \"number\"\n                                },\n                                match: [\n                                    i,\n                                    a\n                                ]\n                            },\n                            {\n                                scope: {\n                                    1: \"operator\",\n                                    2: \"number\"\n                                },\n                                match: [\n                                    /%[^%]*%/,\n                                    a\n                                ]\n                            },\n                            {\n                                scope: {\n                                    1: \"punctuation\",\n                                    2: \"number\"\n                                },\n                                match: [\n                                    r,\n                                    a\n                                ]\n                            },\n                            {\n                                scope: {\n                                    2: \"number\"\n                                },\n                                match: [\n                                    /[^a-zA-Z0-9._]|^/,\n                                    a\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        scope: {\n                            3: \"operator\"\n                        },\n                        match: [\n                            t,\n                            /\\s+/,\n                            /<-/,\n                            /\\s+/\n                        ]\n                    },\n                    {\n                        scope: \"operator\",\n                        relevance: 0,\n                        variants: [\n                            {\n                                match: i\n                            },\n                            {\n                                match: /%[^%]*%/\n                            }\n                        ]\n                    },\n                    {\n                        scope: \"punctuation\",\n                        relevance: 0,\n                        match: r\n                    },\n                    {\n                        begin: \"`\",\n                        end: \"`\",\n                        contains: [\n                            {\n                                begin: /\\\\./\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_ruby: (e)=>{\n            const n = e.regex, t = \"([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)\", a = n.either(/\\b([A-Z]+[a-z0-9]+)+/, /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/), i = n.concat(a, /(::\\w+)*/), r = {\n                \"variable.constant\": [\n                    \"__FILE__\",\n                    \"__LINE__\",\n                    \"__ENCODING__\"\n                ],\n                \"variable.language\": [\n                    \"self\",\n                    \"super\"\n                ],\n                keyword: [\n                    \"alias\",\n                    \"and\",\n                    \"begin\",\n                    \"BEGIN\",\n                    \"break\",\n                    \"case\",\n                    \"class\",\n                    \"defined\",\n                    \"do\",\n                    \"else\",\n                    \"elsif\",\n                    \"end\",\n                    \"END\",\n                    \"ensure\",\n                    \"for\",\n                    \"if\",\n                    \"in\",\n                    \"module\",\n                    \"next\",\n                    \"not\",\n                    \"or\",\n                    \"redo\",\n                    \"require\",\n                    \"rescue\",\n                    \"retry\",\n                    \"return\",\n                    \"then\",\n                    \"undef\",\n                    \"unless\",\n                    \"until\",\n                    \"when\",\n                    \"while\",\n                    \"yield\",\n                    \"include\",\n                    \"extend\",\n                    \"prepend\",\n                    \"public\",\n                    \"private\",\n                    \"protected\",\n                    \"raise\",\n                    \"throw\"\n                ],\n                built_in: [\n                    \"proc\",\n                    \"lambda\",\n                    \"attr_accessor\",\n                    \"attr_reader\",\n                    \"attr_writer\",\n                    \"define_method\",\n                    \"private_constant\",\n                    \"module_function\"\n                ],\n                literal: [\n                    \"true\",\n                    \"false\",\n                    \"nil\"\n                ]\n            }, s = {\n                className: \"doctag\",\n                begin: \"@[A-Za-z]+\"\n            }, o = {\n                begin: \"#<\",\n                end: \">\"\n            }, l = [\n                e.COMMENT(\"#\", \"$\", {\n                    contains: [\n                        s\n                    ]\n                }),\n                e.COMMENT(\"^=begin\", \"^=end\", {\n                    contains: [\n                        s\n                    ],\n                    relevance: 10\n                }),\n                e.COMMENT(\"^__END__\", e.MATCH_NOTHING_RE)\n            ], c = {\n                className: \"subst\",\n                begin: /#\\{/,\n                end: /\\}/,\n                keywords: r\n            }, d = {\n                className: \"string\",\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    c\n                ],\n                variants: [\n                    {\n                        begin: /'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /`/,\n                        end: /`/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\(/,\n                        end: /\\)/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\[/,\n                        end: /\\]/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\{/,\n                        end: /\\}/\n                    },\n                    {\n                        begin: /%[qQwWx]?</,\n                        end: />/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\//,\n                        end: /\\//\n                    },\n                    {\n                        begin: /%[qQwWx]?%/,\n                        end: /%/\n                    },\n                    {\n                        begin: /%[qQwWx]?-/,\n                        end: /-/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\|/,\n                        end: /\\|/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\\\d{1,3})/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/\n                    },\n                    {\n                        begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/\n                    },\n                    {\n                        begin: /\\B\\?\\\\?\\S/\n                    },\n                    {\n                        begin: n.concat(/<<[-~]?'?/, n.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)),\n                        contains: [\n                            e.END_SAME_AS_BEGIN({\n                                begin: /(\\w+)/,\n                                end: /(\\w+)/,\n                                contains: [\n                                    e.BACKSLASH_ESCAPE,\n                                    c\n                                ]\n                            })\n                        ]\n                    }\n                ]\n            }, g = \"[0-9](_?[0-9])*\", u = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: `\\\\b([1-9](_?[0-9])*|0)(\\\\.(${g}))?([eE][+-]?(${g})|r)?i?\\\\b`\n                    },\n                    {\n                        begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n                    }\n                ]\n            }, b = {\n                variants: [\n                    {\n                        match: /\\(\\)/\n                    },\n                    {\n                        className: \"params\",\n                        begin: /\\(/,\n                        end: /(?=\\))/,\n                        excludeBegin: !0,\n                        endsParent: !0,\n                        keywords: r\n                    }\n                ]\n            }, m = [\n                d,\n                {\n                    variants: [\n                        {\n                            match: [\n                                /class\\s+/,\n                                i,\n                                /\\s+<\\s+/,\n                                i\n                            ]\n                        },\n                        {\n                            match: [\n                                /\\b(class|module)\\s+/,\n                                i\n                            ]\n                        }\n                    ],\n                    scope: {\n                        2: \"title.class\",\n                        4: \"title.class.inherited\"\n                    },\n                    keywords: r\n                },\n                {\n                    match: [\n                        /(include|extend)\\s+/,\n                        i\n                    ],\n                    scope: {\n                        2: \"title.class\"\n                    },\n                    keywords: r\n                },\n                {\n                    relevance: 0,\n                    match: [\n                        i,\n                        /\\.new[. (]/\n                    ],\n                    scope: {\n                        1: \"title.class\"\n                    }\n                },\n                {\n                    relevance: 0,\n                    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n                    className: \"variable.constant\"\n                },\n                {\n                    relevance: 0,\n                    match: a,\n                    scope: \"title.class\"\n                },\n                {\n                    match: [\n                        /def/,\n                        /\\s+/,\n                        t\n                    ],\n                    scope: {\n                        1: \"keyword\",\n                        3: \"title.function\"\n                    },\n                    contains: [\n                        b\n                    ]\n                },\n                {\n                    begin: e.IDENT_RE + \"::\"\n                },\n                {\n                    className: \"symbol\",\n                    begin: e.UNDERSCORE_IDENT_RE + \"(!|\\\\?)?:\",\n                    relevance: 0\n                },\n                {\n                    className: \"symbol\",\n                    begin: \":(?!\\\\s)\",\n                    contains: [\n                        d,\n                        {\n                            begin: t\n                        }\n                    ],\n                    relevance: 0\n                },\n                u,\n                {\n                    className: \"variable\",\n                    begin: \"(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])\"\n                },\n                {\n                    className: \"params\",\n                    begin: /\\|/,\n                    end: /\\|/,\n                    excludeBegin: !0,\n                    excludeEnd: !0,\n                    relevance: 0,\n                    keywords: r\n                },\n                {\n                    begin: \"(\" + e.RE_STARTERS_RE + \"|unless)\\\\s*\",\n                    keywords: \"unless\",\n                    contains: [\n                        {\n                            className: \"regexp\",\n                            contains: [\n                                e.BACKSLASH_ESCAPE,\n                                c\n                            ],\n                            illegal: /\\n/,\n                            variants: [\n                                {\n                                    begin: \"/\",\n                                    end: \"/[a-z]*\"\n                                },\n                                {\n                                    begin: /%r\\{/,\n                                    end: /\\}[a-z]*/\n                                },\n                                {\n                                    begin: \"%r\\\\(\",\n                                    end: \"\\\\)[a-z]*\"\n                                },\n                                {\n                                    begin: \"%r!\",\n                                    end: \"![a-z]*\"\n                                },\n                                {\n                                    begin: \"%r\\\\[\",\n                                    end: \"\\\\][a-z]*\"\n                                }\n                            ]\n                        }\n                    ].concat(o, l),\n                    relevance: 0\n                }\n            ].concat(o, l);\n            c.contains = m, b.contains = m;\n            const p = [\n                {\n                    begin: /^\\s*=>/,\n                    starts: {\n                        end: \"$\",\n                        contains: m\n                    }\n                },\n                {\n                    className: \"meta.prompt\",\n                    begin: \"^([>?]>|[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]|(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>)(?=[ ])\",\n                    starts: {\n                        end: \"$\",\n                        keywords: r,\n                        contains: m\n                    }\n                }\n            ];\n            return l.unshift(o), {\n                name: \"Ruby\",\n                aliases: [\n                    \"rb\",\n                    \"gemspec\",\n                    \"podspec\",\n                    \"thor\",\n                    \"irb\"\n                ],\n                keywords: r,\n                illegal: /\\/\\*/,\n                contains: [\n                    e.SHEBANG({\n                        binary: \"ruby\"\n                    })\n                ].concat(p).concat(l).concat(m)\n            };\n        },\n        grmr_rust: (e)=>{\n            const n = e.regex, t = {\n                className: \"title.function.invoke\",\n                relevance: 0,\n                begin: n.concat(/\\b/, /(?!let\\b)/, e.IDENT_RE, n.lookahead(/\\s*\\(/))\n            }, a = \"([ui](8|16|32|64|128|size)|f(32|64))?\", i = [\n                \"drop \",\n                \"Copy\",\n                \"Send\",\n                \"Sized\",\n                \"Sync\",\n                \"Drop\",\n                \"Fn\",\n                \"FnMut\",\n                \"FnOnce\",\n                \"ToOwned\",\n                \"Clone\",\n                \"Debug\",\n                \"PartialEq\",\n                \"PartialOrd\",\n                \"Eq\",\n                \"Ord\",\n                \"AsRef\",\n                \"AsMut\",\n                \"Into\",\n                \"From\",\n                \"Default\",\n                \"Iterator\",\n                \"Extend\",\n                \"IntoIterator\",\n                \"DoubleEndedIterator\",\n                \"ExactSizeIterator\",\n                \"SliceConcatExt\",\n                \"ToString\",\n                \"assert!\",\n                \"assert_eq!\",\n                \"bitflags!\",\n                \"bytes!\",\n                \"cfg!\",\n                \"col!\",\n                \"concat!\",\n                \"concat_idents!\",\n                \"debug_assert!\",\n                \"debug_assert_eq!\",\n                \"env!\",\n                \"panic!\",\n                \"file!\",\n                \"format!\",\n                \"format_args!\",\n                \"include_bytes!\",\n                \"include_str!\",\n                \"line!\",\n                \"local_data_key!\",\n                \"module_path!\",\n                \"option_env!\",\n                \"print!\",\n                \"println!\",\n                \"select!\",\n                \"stringify!\",\n                \"try!\",\n                \"unimplemented!\",\n                \"unreachable!\",\n                \"vec!\",\n                \"write!\",\n                \"writeln!\",\n                \"macro_rules!\",\n                \"assert_ne!\",\n                \"debug_assert_ne!\"\n            ], r = [\n                \"i8\",\n                \"i16\",\n                \"i32\",\n                \"i64\",\n                \"i128\",\n                \"isize\",\n                \"u8\",\n                \"u16\",\n                \"u32\",\n                \"u64\",\n                \"u128\",\n                \"usize\",\n                \"f32\",\n                \"f64\",\n                \"str\",\n                \"char\",\n                \"bool\",\n                \"Box\",\n                \"Option\",\n                \"Result\",\n                \"String\",\n                \"Vec\"\n            ];\n            return {\n                name: \"Rust\",\n                aliases: [\n                    \"rs\"\n                ],\n                keywords: {\n                    $pattern: e.IDENT_RE + \"!?\",\n                    type: r,\n                    keyword: [\n                        \"abstract\",\n                        \"as\",\n                        \"async\",\n                        \"await\",\n                        \"become\",\n                        \"box\",\n                        \"break\",\n                        \"const\",\n                        \"continue\",\n                        \"crate\",\n                        \"do\",\n                        \"dyn\",\n                        \"else\",\n                        \"enum\",\n                        \"extern\",\n                        \"false\",\n                        \"final\",\n                        \"fn\",\n                        \"for\",\n                        \"if\",\n                        \"impl\",\n                        \"in\",\n                        \"let\",\n                        \"loop\",\n                        \"macro\",\n                        \"match\",\n                        \"mod\",\n                        \"move\",\n                        \"mut\",\n                        \"override\",\n                        \"priv\",\n                        \"pub\",\n                        \"ref\",\n                        \"return\",\n                        \"self\",\n                        \"Self\",\n                        \"static\",\n                        \"struct\",\n                        \"super\",\n                        \"trait\",\n                        \"true\",\n                        \"try\",\n                        \"type\",\n                        \"typeof\",\n                        \"unsafe\",\n                        \"unsized\",\n                        \"use\",\n                        \"virtual\",\n                        \"where\",\n                        \"while\",\n                        \"yield\"\n                    ],\n                    literal: [\n                        \"true\",\n                        \"false\",\n                        \"Some\",\n                        \"None\",\n                        \"Ok\",\n                        \"Err\"\n                    ],\n                    built_in: i\n                },\n                illegal: \"</\",\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                        contains: [\n                            \"self\"\n                        ]\n                    }),\n                    e.inherit(e.QUOTE_STRING_MODE, {\n                        begin: /b?\"/,\n                        illegal: null\n                    }),\n                    {\n                        className: \"string\",\n                        variants: [\n                            {\n                                begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/\n                            },\n                            {\n                                begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"symbol\",\n                        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n                    },\n                    {\n                        className: \"number\",\n                        variants: [\n                            {\n                                begin: \"\\\\b0b([01_]+)\" + a\n                            },\n                            {\n                                begin: \"\\\\b0o([0-7_]+)\" + a\n                            },\n                            {\n                                begin: \"\\\\b0x([A-Fa-f0-9_]+)\" + a\n                            },\n                            {\n                                begin: \"\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)\" + a\n                            }\n                        ],\n                        relevance: 0\n                    },\n                    {\n                        begin: [\n                            /fn/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.function\"\n                        }\n                    },\n                    {\n                        className: \"meta\",\n                        begin: \"#!?\\\\[\",\n                        end: \"\\\\]\",\n                        contains: [\n                            {\n                                className: \"string\",\n                                begin: /\"/,\n                                end: /\"/\n                            }\n                        ]\n                    },\n                    {\n                        begin: [\n                            /let/,\n                            /\\s+/,\n                            /(?:mut\\s+)?/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"keyword\",\n                            4: \"variable\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /for/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE,\n                            /\\s+/,\n                            /in/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"variable\",\n                            5: \"keyword\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /type/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /(?:trait|enum|struct|union|impl|for)/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    },\n                    {\n                        begin: e.IDENT_RE + \"::\",\n                        keywords: {\n                            keyword: \"Self\",\n                            built_in: i,\n                            type: r\n                        }\n                    },\n                    {\n                        className: \"punctuation\",\n                        begin: \"->\"\n                    },\n                    t\n                ]\n            };\n        },\n        grmr_scss: (e)=>{\n            const n = te(e), t = se, a = re, i = \"@[a-z-]+\", r = {\n                className: \"variable\",\n                begin: \"(\\\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\\\b\",\n                relevance: 0\n            };\n            return {\n                name: \"SCSS\",\n                case_insensitive: !0,\n                illegal: \"[=/|']\",\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    n.CSS_NUMBER_MODE,\n                    {\n                        className: \"selector-id\",\n                        begin: \"#[A-Za-z0-9_-]+\",\n                        relevance: 0\n                    },\n                    {\n                        className: \"selector-class\",\n                        begin: \"\\\\.[A-Za-z0-9_-]+\",\n                        relevance: 0\n                    },\n                    n.ATTRIBUTE_SELECTOR_MODE,\n                    {\n                        className: \"selector-tag\",\n                        begin: \"\\\\b(\" + ae.join(\"|\") + \")\\\\b\",\n                        relevance: 0\n                    },\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(\" + a.join(\"|\") + \")\"\n                    },\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(:)?(\" + t.join(\"|\") + \")\"\n                    },\n                    r,\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            n.CSS_NUMBER_MODE\n                        ]\n                    },\n                    n.CSS_VARIABLE,\n                    {\n                        className: \"attribute\",\n                        begin: \"\\\\b(\" + oe.join(\"|\") + \")\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b\"\n                    },\n                    {\n                        begin: /:/,\n                        end: /[;}{]/,\n                        relevance: 0,\n                        contains: [\n                            n.BLOCK_COMMENT,\n                            r,\n                            n.HEXCOLOR,\n                            n.CSS_NUMBER_MODE,\n                            e.QUOTE_STRING_MODE,\n                            e.APOS_STRING_MODE,\n                            n.IMPORTANT,\n                            n.FUNCTION_DISPATCH\n                        ]\n                    },\n                    {\n                        begin: \"@(page|font-face)\",\n                        keywords: {\n                            $pattern: i,\n                            keyword: \"@page @font-face\"\n                        }\n                    },\n                    {\n                        begin: \"@\",\n                        end: \"[{;]\",\n                        returnBegin: !0,\n                        keywords: {\n                            $pattern: /[a-z-]+/,\n                            keyword: \"and or not only\",\n                            attribute: ie.join(\" \")\n                        },\n                        contains: [\n                            {\n                                begin: i,\n                                className: \"keyword\"\n                            },\n                            {\n                                begin: /[a-z-]+(?=:)/,\n                                className: \"attribute\"\n                            },\n                            r,\n                            e.QUOTE_STRING_MODE,\n                            e.APOS_STRING_MODE,\n                            n.HEXCOLOR,\n                            n.CSS_NUMBER_MODE\n                        ]\n                    },\n                    n.FUNCTION_DISPATCH\n                ]\n            };\n        },\n        grmr_shell: (e)=>({\n                name: \"Shell Session\",\n                aliases: [\n                    \"console\",\n                    \"shellsession\"\n                ],\n                contains: [\n                    {\n                        className: \"meta.prompt\",\n                        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,\n                        starts: {\n                            end: /[^\\\\](?=\\s*$)/,\n                            subLanguage: \"bash\"\n                        }\n                    }\n                ]\n            }),\n        grmr_sql: (e)=>{\n            const n = e.regex, t = e.COMMENT(\"--\", \"$\"), a = [\n                \"true\",\n                \"false\",\n                \"unknown\"\n            ], i = [\n                \"bigint\",\n                \"binary\",\n                \"blob\",\n                \"boolean\",\n                \"char\",\n                \"character\",\n                \"clob\",\n                \"date\",\n                \"dec\",\n                \"decfloat\",\n                \"decimal\",\n                \"float\",\n                \"int\",\n                \"integer\",\n                \"interval\",\n                \"nchar\",\n                \"nclob\",\n                \"national\",\n                \"numeric\",\n                \"real\",\n                \"row\",\n                \"smallint\",\n                \"time\",\n                \"timestamp\",\n                \"varchar\",\n                \"varying\",\n                \"varbinary\"\n            ], r = [\n                \"abs\",\n                \"acos\",\n                \"array_agg\",\n                \"asin\",\n                \"atan\",\n                \"avg\",\n                \"cast\",\n                \"ceil\",\n                \"ceiling\",\n                \"coalesce\",\n                \"corr\",\n                \"cos\",\n                \"cosh\",\n                \"count\",\n                \"covar_pop\",\n                \"covar_samp\",\n                \"cume_dist\",\n                \"dense_rank\",\n                \"deref\",\n                \"element\",\n                \"exp\",\n                \"extract\",\n                \"first_value\",\n                \"floor\",\n                \"json_array\",\n                \"json_arrayagg\",\n                \"json_exists\",\n                \"json_object\",\n                \"json_objectagg\",\n                \"json_query\",\n                \"json_table\",\n                \"json_table_primitive\",\n                \"json_value\",\n                \"lag\",\n                \"last_value\",\n                \"lead\",\n                \"listagg\",\n                \"ln\",\n                \"log\",\n                \"log10\",\n                \"lower\",\n                \"max\",\n                \"min\",\n                \"mod\",\n                \"nth_value\",\n                \"ntile\",\n                \"nullif\",\n                \"percent_rank\",\n                \"percentile_cont\",\n                \"percentile_disc\",\n                \"position\",\n                \"position_regex\",\n                \"power\",\n                \"rank\",\n                \"regr_avgx\",\n                \"regr_avgy\",\n                \"regr_count\",\n                \"regr_intercept\",\n                \"regr_r2\",\n                \"regr_slope\",\n                \"regr_sxx\",\n                \"regr_sxy\",\n                \"regr_syy\",\n                \"row_number\",\n                \"sin\",\n                \"sinh\",\n                \"sqrt\",\n                \"stddev_pop\",\n                \"stddev_samp\",\n                \"substring\",\n                \"substring_regex\",\n                \"sum\",\n                \"tan\",\n                \"tanh\",\n                \"translate\",\n                \"translate_regex\",\n                \"treat\",\n                \"trim\",\n                \"trim_array\",\n                \"unnest\",\n                \"upper\",\n                \"value_of\",\n                \"var_pop\",\n                \"var_samp\",\n                \"width_bucket\"\n            ], s = [\n                \"create table\",\n                \"insert into\",\n                \"primary key\",\n                \"foreign key\",\n                \"not null\",\n                \"alter table\",\n                \"add constraint\",\n                \"grouping sets\",\n                \"on overflow\",\n                \"character set\",\n                \"respect nulls\",\n                \"ignore nulls\",\n                \"nulls first\",\n                \"nulls last\",\n                \"depth first\",\n                \"breadth first\"\n            ], o = r, l = [\n                \"abs\",\n                \"acos\",\n                \"all\",\n                \"allocate\",\n                \"alter\",\n                \"and\",\n                \"any\",\n                \"are\",\n                \"array\",\n                \"array_agg\",\n                \"array_max_cardinality\",\n                \"as\",\n                \"asensitive\",\n                \"asin\",\n                \"asymmetric\",\n                \"at\",\n                \"atan\",\n                \"atomic\",\n                \"authorization\",\n                \"avg\",\n                \"begin\",\n                \"begin_frame\",\n                \"begin_partition\",\n                \"between\",\n                \"bigint\",\n                \"binary\",\n                \"blob\",\n                \"boolean\",\n                \"both\",\n                \"by\",\n                \"call\",\n                \"called\",\n                \"cardinality\",\n                \"cascaded\",\n                \"case\",\n                \"cast\",\n                \"ceil\",\n                \"ceiling\",\n                \"char\",\n                \"char_length\",\n                \"character\",\n                \"character_length\",\n                \"check\",\n                \"classifier\",\n                \"clob\",\n                \"close\",\n                \"coalesce\",\n                \"collate\",\n                \"collect\",\n                \"column\",\n                \"commit\",\n                \"condition\",\n                \"connect\",\n                \"constraint\",\n                \"contains\",\n                \"convert\",\n                \"copy\",\n                \"corr\",\n                \"corresponding\",\n                \"cos\",\n                \"cosh\",\n                \"count\",\n                \"covar_pop\",\n                \"covar_samp\",\n                \"create\",\n                \"cross\",\n                \"cube\",\n                \"cume_dist\",\n                \"current\",\n                \"current_catalog\",\n                \"current_date\",\n                \"current_default_transform_group\",\n                \"current_path\",\n                \"current_role\",\n                \"current_row\",\n                \"current_schema\",\n                \"current_time\",\n                \"current_timestamp\",\n                \"current_path\",\n                \"current_role\",\n                \"current_transform_group_for_type\",\n                \"current_user\",\n                \"cursor\",\n                \"cycle\",\n                \"date\",\n                \"day\",\n                \"deallocate\",\n                \"dec\",\n                \"decimal\",\n                \"decfloat\",\n                \"declare\",\n                \"default\",\n                \"define\",\n                \"delete\",\n                \"dense_rank\",\n                \"deref\",\n                \"describe\",\n                \"deterministic\",\n                \"disconnect\",\n                \"distinct\",\n                \"double\",\n                \"drop\",\n                \"dynamic\",\n                \"each\",\n                \"element\",\n                \"else\",\n                \"empty\",\n                \"end\",\n                \"end_frame\",\n                \"end_partition\",\n                \"end-exec\",\n                \"equals\",\n                \"escape\",\n                \"every\",\n                \"except\",\n                \"exec\",\n                \"execute\",\n                \"exists\",\n                \"exp\",\n                \"external\",\n                \"extract\",\n                \"false\",\n                \"fetch\",\n                \"filter\",\n                \"first_value\",\n                \"float\",\n                \"floor\",\n                \"for\",\n                \"foreign\",\n                \"frame_row\",\n                \"free\",\n                \"from\",\n                \"full\",\n                \"function\",\n                \"fusion\",\n                \"get\",\n                \"global\",\n                \"grant\",\n                \"group\",\n                \"grouping\",\n                \"groups\",\n                \"having\",\n                \"hold\",\n                \"hour\",\n                \"identity\",\n                \"in\",\n                \"indicator\",\n                \"initial\",\n                \"inner\",\n                \"inout\",\n                \"insensitive\",\n                \"insert\",\n                \"int\",\n                \"integer\",\n                \"intersect\",\n                \"intersection\",\n                \"interval\",\n                \"into\",\n                \"is\",\n                \"join\",\n                \"json_array\",\n                \"json_arrayagg\",\n                \"json_exists\",\n                \"json_object\",\n                \"json_objectagg\",\n                \"json_query\",\n                \"json_table\",\n                \"json_table_primitive\",\n                \"json_value\",\n                \"lag\",\n                \"language\",\n                \"large\",\n                \"last_value\",\n                \"lateral\",\n                \"lead\",\n                \"leading\",\n                \"left\",\n                \"like\",\n                \"like_regex\",\n                \"listagg\",\n                \"ln\",\n                \"local\",\n                \"localtime\",\n                \"localtimestamp\",\n                \"log\",\n                \"log10\",\n                \"lower\",\n                \"match\",\n                \"match_number\",\n                \"match_recognize\",\n                \"matches\",\n                \"max\",\n                \"member\",\n                \"merge\",\n                \"method\",\n                \"min\",\n                \"minute\",\n                \"mod\",\n                \"modifies\",\n                \"module\",\n                \"month\",\n                \"multiset\",\n                \"national\",\n                \"natural\",\n                \"nchar\",\n                \"nclob\",\n                \"new\",\n                \"no\",\n                \"none\",\n                \"normalize\",\n                \"not\",\n                \"nth_value\",\n                \"ntile\",\n                \"null\",\n                \"nullif\",\n                \"numeric\",\n                \"octet_length\",\n                \"occurrences_regex\",\n                \"of\",\n                \"offset\",\n                \"old\",\n                \"omit\",\n                \"on\",\n                \"one\",\n                \"only\",\n                \"open\",\n                \"or\",\n                \"order\",\n                \"out\",\n                \"outer\",\n                \"over\",\n                \"overlaps\",\n                \"overlay\",\n                \"parameter\",\n                \"partition\",\n                \"pattern\",\n                \"per\",\n                \"percent\",\n                \"percent_rank\",\n                \"percentile_cont\",\n                \"percentile_disc\",\n                \"period\",\n                \"portion\",\n                \"position\",\n                \"position_regex\",\n                \"power\",\n                \"precedes\",\n                \"precision\",\n                \"prepare\",\n                \"primary\",\n                \"procedure\",\n                \"ptf\",\n                \"range\",\n                \"rank\",\n                \"reads\",\n                \"real\",\n                \"recursive\",\n                \"ref\",\n                \"references\",\n                \"referencing\",\n                \"regr_avgx\",\n                \"regr_avgy\",\n                \"regr_count\",\n                \"regr_intercept\",\n                \"regr_r2\",\n                \"regr_slope\",\n                \"regr_sxx\",\n                \"regr_sxy\",\n                \"regr_syy\",\n                \"release\",\n                \"result\",\n                \"return\",\n                \"returns\",\n                \"revoke\",\n                \"right\",\n                \"rollback\",\n                \"rollup\",\n                \"row\",\n                \"row_number\",\n                \"rows\",\n                \"running\",\n                \"savepoint\",\n                \"scope\",\n                \"scroll\",\n                \"search\",\n                \"second\",\n                \"seek\",\n                \"select\",\n                \"sensitive\",\n                \"session_user\",\n                \"set\",\n                \"show\",\n                \"similar\",\n                \"sin\",\n                \"sinh\",\n                \"skip\",\n                \"smallint\",\n                \"some\",\n                \"specific\",\n                \"specifictype\",\n                \"sql\",\n                \"sqlexception\",\n                \"sqlstate\",\n                \"sqlwarning\",\n                \"sqrt\",\n                \"start\",\n                \"static\",\n                \"stddev_pop\",\n                \"stddev_samp\",\n                \"submultiset\",\n                \"subset\",\n                \"substring\",\n                \"substring_regex\",\n                \"succeeds\",\n                \"sum\",\n                \"symmetric\",\n                \"system\",\n                \"system_time\",\n                \"system_user\",\n                \"table\",\n                \"tablesample\",\n                \"tan\",\n                \"tanh\",\n                \"then\",\n                \"time\",\n                \"timestamp\",\n                \"timezone_hour\",\n                \"timezone_minute\",\n                \"to\",\n                \"trailing\",\n                \"translate\",\n                \"translate_regex\",\n                \"translation\",\n                \"treat\",\n                \"trigger\",\n                \"trim\",\n                \"trim_array\",\n                \"true\",\n                \"truncate\",\n                \"uescape\",\n                \"union\",\n                \"unique\",\n                \"unknown\",\n                \"unnest\",\n                \"update\",\n                \"upper\",\n                \"user\",\n                \"using\",\n                \"value\",\n                \"values\",\n                \"value_of\",\n                \"var_pop\",\n                \"var_samp\",\n                \"varbinary\",\n                \"varchar\",\n                \"varying\",\n                \"versioning\",\n                \"when\",\n                \"whenever\",\n                \"where\",\n                \"width_bucket\",\n                \"window\",\n                \"with\",\n                \"within\",\n                \"without\",\n                \"year\",\n                \"add\",\n                \"asc\",\n                \"collation\",\n                \"desc\",\n                \"final\",\n                \"first\",\n                \"last\",\n                \"view\"\n            ].filter((e)=>!r.includes(e)), c = {\n                begin: n.concat(/\\b/, n.either(...o), /\\s*\\(/),\n                relevance: 0,\n                keywords: {\n                    built_in: o\n                }\n            };\n            return {\n                name: \"SQL\",\n                case_insensitive: !0,\n                illegal: /[{}]|<\\//,\n                keywords: {\n                    $pattern: /\\b[\\w\\.]+/,\n                    keyword: ((e, { exceptions: n, when: t } = {})=>{\n                        const a = t;\n                        return n = n || [], e.map((e)=>e.match(/\\|\\d+$/) || n.includes(e) ? e : a(e) ? e + \"|0\" : e);\n                    })(l, {\n                        when: (e)=>e.length < 3\n                    }),\n                    literal: a,\n                    type: i,\n                    built_in: [\n                        \"current_catalog\",\n                        \"current_date\",\n                        \"current_default_transform_group\",\n                        \"current_path\",\n                        \"current_role\",\n                        \"current_schema\",\n                        \"current_transform_group_for_type\",\n                        \"current_user\",\n                        \"session_user\",\n                        \"system_time\",\n                        \"system_user\",\n                        \"current_time\",\n                        \"localtime\",\n                        \"current_timestamp\",\n                        \"localtimestamp\"\n                    ]\n                },\n                contains: [\n                    {\n                        begin: n.either(...s),\n                        relevance: 0,\n                        keywords: {\n                            $pattern: /[\\w\\.]+/,\n                            keyword: l.concat(s),\n                            literal: a,\n                            type: i\n                        }\n                    },\n                    {\n                        className: \"type\",\n                        begin: n.either(\"double precision\", \"large object\", \"with timezone\", \"without timezone\")\n                    },\n                    c,\n                    {\n                        className: \"variable\",\n                        begin: /@[a-z0-9]+/\n                    },\n                    {\n                        className: \"string\",\n                        variants: [\n                            {\n                                begin: /'/,\n                                end: /'/,\n                                contains: [\n                                    {\n                                        begin: /''/\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/,\n                        contains: [\n                            {\n                                begin: /\"\"/\n                            }\n                        ]\n                    },\n                    e.C_NUMBER_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    t,\n                    {\n                        className: \"operator\",\n                        begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n                        relevance: 0\n                    }\n                ]\n            };\n        },\n        grmr_swift: (e)=>{\n            const n = {\n                match: /\\s+/,\n                relevance: 0\n            }, t = e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                contains: [\n                    \"self\"\n                ]\n            }), a = [\n                e.C_LINE_COMMENT_MODE,\n                t\n            ], i = {\n                match: [\n                    /\\./,\n                    p(...ve, ...Oe)\n                ],\n                className: {\n                    2: \"keyword\"\n                }\n            }, r = {\n                match: m(/\\./, p(...xe)),\n                relevance: 0\n            }, s = xe.filter((e)=>\"string\" == typeof e).concat([\n                \"_|0\"\n            ]), o = {\n                variants: [\n                    {\n                        className: \"keyword\",\n                        match: p(...xe.filter((e)=>\"string\" != typeof e).concat(ke).map(Ne), ...Oe)\n                    }\n                ]\n            }, l = {\n                $pattern: p(/\\b\\w+/, /#\\w+/),\n                keyword: s.concat(Ae),\n                literal: Me\n            }, c = [\n                i,\n                r,\n                o\n            ], d = [\n                {\n                    match: m(/\\./, p(...Ce)),\n                    relevance: 0\n                },\n                {\n                    className: \"built_in\",\n                    match: m(/\\b/, p(...Ce), /(?=\\()/)\n                }\n            ], u = {\n                match: /->/,\n                relevance: 0\n            }, b = [\n                u,\n                {\n                    className: \"operator\",\n                    relevance: 0,\n                    variants: [\n                        {\n                            match: De\n                        },\n                        {\n                            match: `\\\\.(\\\\.|${Re})+`\n                        }\n                    ]\n                }\n            ], _ = \"([0-9a-fA-F]_*)+\", h = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        match: \"\\\\b(([0-9]_*)+)(\\\\.(([0-9]_*)+))?([eE][+-]?(([0-9]_*)+))?\\\\b\"\n                    },\n                    {\n                        match: `\\\\b0x(${_})(\\\\.(${_}))?([pP][+-]?(([0-9]_*)+))?\\\\b`\n                    },\n                    {\n                        match: /\\b0o([0-7]_*)+\\b/\n                    },\n                    {\n                        match: /\\b0b([01]_*)+\\b/\n                    }\n                ]\n            }, f = (e = \"\")=>({\n                    className: \"subst\",\n                    variants: [\n                        {\n                            match: m(/\\\\/, e, /[0\\\\tnr\"']/)\n                        },\n                        {\n                            match: m(/\\\\/, e, /u\\{[0-9a-fA-F]{1,8}\\}/)\n                        }\n                    ]\n                }), E = (e = \"\")=>({\n                    className: \"subst\",\n                    match: m(/\\\\/, e, /[\\t ]*(?:[\\r\\n]|\\r\\n)/)\n                }), y = (e = \"\")=>({\n                    className: \"subst\",\n                    label: \"interpol\",\n                    begin: m(/\\\\/, e, /\\(/),\n                    end: /\\)/\n                }), w = (e = \"\")=>({\n                    begin: m(e, /\"\"\"/),\n                    end: m(/\"\"\"/, e),\n                    contains: [\n                        f(e),\n                        E(e),\n                        y(e)\n                    ]\n                }), N = (e = \"\")=>({\n                    begin: m(e, /\"/),\n                    end: m(/\"/, e),\n                    contains: [\n                        f(e),\n                        y(e)\n                    ]\n                }), v = {\n                className: \"string\",\n                variants: [\n                    w(),\n                    w(\"#\"),\n                    w(\"##\"),\n                    w(\"###\"),\n                    N(),\n                    N(\"#\"),\n                    N(\"##\"),\n                    N(\"###\")\n                ]\n            }, O = {\n                match: m(/`/, Be, /`/)\n            }, k = [\n                O,\n                {\n                    className: \"variable\",\n                    match: /\\$\\d+/\n                },\n                {\n                    className: \"variable\",\n                    match: `\\\\$${Le}+`\n                }\n            ], x = [\n                {\n                    match: /(@|#(un)?)available/,\n                    className: \"keyword\",\n                    starts: {\n                        contains: [\n                            {\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: Fe,\n                                contains: [\n                                    ...b,\n                                    h,\n                                    v\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    className: \"keyword\",\n                    match: m(/@/, p(...ze))\n                },\n                {\n                    className: \"meta\",\n                    match: m(/@/, Be)\n                }\n            ], M = {\n                match: g(/\\b[A-Z]/),\n                relevance: 0,\n                contains: [\n                    {\n                        className: \"type\",\n                        match: m(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, Le, \"+\")\n                    },\n                    {\n                        className: \"type\",\n                        match: $e,\n                        relevance: 0\n                    },\n                    {\n                        match: /[?!]+/,\n                        relevance: 0\n                    },\n                    {\n                        match: /\\.\\.\\./,\n                        relevance: 0\n                    },\n                    {\n                        match: m(/\\s+&\\s+/, g($e)),\n                        relevance: 0\n                    }\n                ]\n            }, S = {\n                begin: /</,\n                end: />/,\n                keywords: l,\n                contains: [\n                    ...a,\n                    ...c,\n                    ...x,\n                    u,\n                    M\n                ]\n            };\n            M.contains.push(S);\n            const A = {\n                begin: /\\(/,\n                end: /\\)/,\n                relevance: 0,\n                keywords: l,\n                contains: [\n                    \"self\",\n                    {\n                        match: m(Be, /\\s*:/),\n                        keywords: \"_|0\",\n                        relevance: 0\n                    },\n                    ...a,\n                    ...c,\n                    ...d,\n                    ...b,\n                    h,\n                    v,\n                    ...k,\n                    ...x,\n                    M\n                ]\n            }, C = {\n                begin: /</,\n                end: />/,\n                contains: [\n                    ...a,\n                    M\n                ]\n            }, T = {\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: l,\n                contains: [\n                    {\n                        begin: p(g(m(Be, /\\s*:/)), g(m(Be, /\\s+/, Be, /\\s*:/))),\n                        end: /:/,\n                        relevance: 0,\n                        contains: [\n                            {\n                                className: \"keyword\",\n                                match: /\\b_\\b/\n                            },\n                            {\n                                className: \"params\",\n                                match: Be\n                            }\n                        ]\n                    },\n                    ...a,\n                    ...c,\n                    ...b,\n                    h,\n                    v,\n                    ...x,\n                    M,\n                    A\n                ],\n                endsParent: !0,\n                illegal: /[\"']/\n            }, R = {\n                match: [\n                    /func/,\n                    /\\s+/,\n                    p(O.match, Be, De)\n                ],\n                className: {\n                    1: \"keyword\",\n                    3: \"title.function\"\n                },\n                contains: [\n                    C,\n                    T,\n                    n\n                ],\n                illegal: [\n                    /\\[/,\n                    /%/\n                ]\n            }, D = {\n                match: [\n                    /\\b(?:subscript|init[?!]?)/,\n                    /\\s*(?=[<(])/\n                ],\n                className: {\n                    1: \"keyword\"\n                },\n                contains: [\n                    C,\n                    T,\n                    n\n                ],\n                illegal: /\\[|%/\n            }, I = {\n                match: [\n                    /operator/,\n                    /\\s+/,\n                    De\n                ],\n                className: {\n                    1: \"keyword\",\n                    3: \"title\"\n                }\n            }, L = {\n                begin: [\n                    /precedencegroup/,\n                    /\\s+/,\n                    $e\n                ],\n                className: {\n                    1: \"keyword\",\n                    3: \"title\"\n                },\n                contains: [\n                    M\n                ],\n                keywords: [\n                    ...Se,\n                    ...Me\n                ],\n                end: /}/\n            };\n            for (const e of v.variants){\n                const n = e.contains.find((e)=>\"interpol\" === e.label);\n                n.keywords = l;\n                const t = [\n                    ...c,\n                    ...d,\n                    ...b,\n                    h,\n                    v,\n                    ...k\n                ];\n                n.contains = [\n                    ...t,\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            \"self\",\n                            ...t\n                        ]\n                    }\n                ];\n            }\n            return {\n                name: \"Swift\",\n                keywords: l,\n                contains: [\n                    ...a,\n                    R,\n                    D,\n                    {\n                        beginKeywords: \"struct protocol class extension enum actor\",\n                        end: \"\\\\{\",\n                        excludeEnd: !0,\n                        keywords: l,\n                        contains: [\n                            e.inherit(e.TITLE_MODE, {\n                                className: \"title.class\",\n                                begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/\n                            }),\n                            ...c\n                        ]\n                    },\n                    I,\n                    L,\n                    {\n                        beginKeywords: \"import\",\n                        end: /$/,\n                        contains: [\n                            ...a\n                        ],\n                        relevance: 0\n                    },\n                    ...c,\n                    ...d,\n                    ...b,\n                    h,\n                    v,\n                    ...k,\n                    ...x,\n                    M,\n                    A\n                ]\n            };\n        },\n        grmr_typescript: (e)=>{\n            const n = we(e), t = [\n                \"any\",\n                \"void\",\n                \"number\",\n                \"boolean\",\n                \"string\",\n                \"object\",\n                \"never\",\n                \"symbol\",\n                \"bigint\",\n                \"unknown\"\n            ], a = {\n                beginKeywords: \"namespace\",\n                end: /\\{/,\n                excludeEnd: !0,\n                contains: [\n                    n.exports.CLASS_REFERENCE\n                ]\n            }, i = {\n                beginKeywords: \"interface\",\n                end: /\\{/,\n                excludeEnd: !0,\n                keywords: {\n                    keyword: \"interface extends\",\n                    built_in: t\n                },\n                contains: [\n                    n.exports.CLASS_REFERENCE\n                ]\n            }, r = {\n                $pattern: be,\n                keyword: me.concat([\n                    \"type\",\n                    \"namespace\",\n                    \"interface\",\n                    \"public\",\n                    \"private\",\n                    \"protected\",\n                    \"implements\",\n                    \"declare\",\n                    \"abstract\",\n                    \"readonly\",\n                    \"enum\",\n                    \"override\"\n                ]),\n                literal: pe,\n                built_in: ye.concat(t),\n                \"variable.language\": Ee\n            }, s = {\n                className: \"meta\",\n                begin: \"@[A-Za-z$_][0-9A-Za-z$_]*\"\n            }, o = (e, n, t)=>{\n                const a = e.contains.findIndex((e)=>e.label === n);\n                if (-1 === a) throw Error(\"can not find mode to replace\");\n                e.contains.splice(a, 1, t);\n            };\n            return Object.assign(n.keywords, r), n.exports.PARAMS_CONTAINS.push(s), n.contains = n.contains.concat([\n                s,\n                a,\n                i\n            ]), o(n, \"shebang\", e.SHEBANG()), o(n, \"use_strict\", {\n                className: \"meta\",\n                relevance: 10,\n                begin: /^\\s*['\"]use strict['\"]/\n            }), n.contains.find((e)=>\"func.def\" === e.label).relevance = 0, Object.assign(n, {\n                name: \"TypeScript\",\n                aliases: [\n                    \"ts\",\n                    \"tsx\"\n                ]\n            }), n;\n        },\n        grmr_vbnet: (e)=>{\n            const n = e.regex, t = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/, a = /\\d{4}-\\d{1,2}-\\d{1,2}/, i = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/, r = /\\d{1,2}(:\\d{1,2}){1,2}/, s = {\n                className: \"literal\",\n                variants: [\n                    {\n                        begin: n.concat(/# */, n.either(a, t), / *#/)\n                    },\n                    {\n                        begin: n.concat(/# */, r, / *#/)\n                    },\n                    {\n                        begin: n.concat(/# */, i, / *#/)\n                    },\n                    {\n                        begin: n.concat(/# */, n.either(a, t), / +/, n.either(i, r), / *#/)\n                    }\n                ]\n            }, o = e.COMMENT(/'''/, /$/, {\n                contains: [\n                    {\n                        className: \"doctag\",\n                        begin: /<\\/?/,\n                        end: />/\n                    }\n                ]\n            }), l = e.COMMENT(null, /$/, {\n                variants: [\n                    {\n                        begin: /'/\n                    },\n                    {\n                        begin: /([\\t ]|^)REM(?=\\s)/\n                    }\n                ]\n            });\n            return {\n                name: \"Visual Basic .NET\",\n                aliases: [\n                    \"vb\"\n                ],\n                case_insensitive: !0,\n                classNameAliases: {\n                    label: \"symbol\"\n                },\n                keywords: {\n                    keyword: \"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield\",\n                    built_in: \"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort\",\n                    type: \"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort\",\n                    literal: \"true false nothing\"\n                },\n                illegal: \"//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ \",\n                contains: [\n                    {\n                        className: \"string\",\n                        begin: /\"(\"\"|[^/n])\"C\\b/\n                    },\n                    {\n                        className: \"string\",\n                        begin: /\"/,\n                        end: /\"/,\n                        illegal: /\\n/,\n                        contains: [\n                            {\n                                begin: /\"\"/\n                            }\n                        ]\n                    },\n                    s,\n                    {\n                        className: \"number\",\n                        relevance: 0,\n                        variants: [\n                            {\n                                begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/\n                            },\n                            {\n                                begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/\n                            },\n                            {\n                                begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/\n                            },\n                            {\n                                begin: /&O[0-7_]+((U?[SIL])|[%&])?/\n                            },\n                            {\n                                begin: /&B[01_]+((U?[SIL])|[%&])?/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"label\",\n                        begin: /^\\w+:/\n                    },\n                    o,\n                    l,\n                    {\n                        className: \"meta\",\n                        begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n                        end: /$/,\n                        keywords: {\n                            keyword: \"const disable else elseif enable end externalsource if region then\"\n                        },\n                        contains: [\n                            l\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_wasm: (e)=>{\n            e.regex;\n            const n = e.COMMENT(/\\(;/, /;\\)/);\n            return n.contains.push(\"self\"), {\n                name: \"WebAssembly\",\n                keywords: {\n                    $pattern: /[\\w.]+/,\n                    keyword: [\n                        \"anyfunc\",\n                        \"block\",\n                        \"br\",\n                        \"br_if\",\n                        \"br_table\",\n                        \"call\",\n                        \"call_indirect\",\n                        \"data\",\n                        \"drop\",\n                        \"elem\",\n                        \"else\",\n                        \"end\",\n                        \"export\",\n                        \"func\",\n                        \"global.get\",\n                        \"global.set\",\n                        \"local.get\",\n                        \"local.set\",\n                        \"local.tee\",\n                        \"get_global\",\n                        \"get_local\",\n                        \"global\",\n                        \"if\",\n                        \"import\",\n                        \"local\",\n                        \"loop\",\n                        \"memory\",\n                        \"memory.grow\",\n                        \"memory.size\",\n                        \"module\",\n                        \"mut\",\n                        \"nop\",\n                        \"offset\",\n                        \"param\",\n                        \"result\",\n                        \"return\",\n                        \"select\",\n                        \"set_global\",\n                        \"set_local\",\n                        \"start\",\n                        \"table\",\n                        \"tee_local\",\n                        \"then\",\n                        \"type\",\n                        \"unreachable\"\n                    ]\n                },\n                contains: [\n                    e.COMMENT(/;;/, /$/),\n                    n,\n                    {\n                        match: [\n                            /(?:offset|align)/,\n                            /\\s*/,\n                            /=/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"operator\"\n                        }\n                    },\n                    {\n                        className: \"variable\",\n                        begin: /\\$[\\w_]+/\n                    },\n                    {\n                        match: /(\\((?!;)|\\))+/,\n                        className: \"punctuation\",\n                        relevance: 0\n                    },\n                    {\n                        begin: [\n                            /(?:func|call|call_indirect)/,\n                            /\\s+/,\n                            /\\$[^\\s)]+/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.function\"\n                        }\n                    },\n                    e.QUOTE_STRING_MODE,\n                    {\n                        match: /(i32|i64|f32|f64)(?!\\.)/,\n                        className: \"type\"\n                    },\n                    {\n                        className: \"keyword\",\n                        match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n                    },\n                    {\n                        className: \"number\",\n                        relevance: 0,\n                        match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n                    }\n                ]\n            };\n        },\n        grmr_yaml: (e)=>{\n            const n = \"true false yes no null\", t = \"[\\\\w#;/?:@&=+$,.~*'()[\\\\]]+\", a = {\n                className: \"string\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: /'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /\\S+/\n                    }\n                ],\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    {\n                        className: \"template-variable\",\n                        variants: [\n                            {\n                                begin: /\\{\\{/,\n                                end: /\\}\\}/\n                            },\n                            {\n                                begin: /%\\{/,\n                                end: /\\}/\n                            }\n                        ]\n                    }\n                ]\n            }, i = e.inherit(a, {\n                variants: [\n                    {\n                        begin: /'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /[^\\s,{}[\\]]+/\n                    }\n                ]\n            }), r = {\n                end: \",\",\n                endsWithParent: !0,\n                excludeEnd: !0,\n                keywords: n,\n                relevance: 0\n            }, s = {\n                begin: /\\{/,\n                end: /\\}/,\n                contains: [\n                    r\n                ],\n                illegal: \"\\\\n\",\n                relevance: 0\n            }, o = {\n                begin: \"\\\\[\",\n                end: \"\\\\]\",\n                contains: [\n                    r\n                ],\n                illegal: \"\\\\n\",\n                relevance: 0\n            }, l = [\n                {\n                    className: \"attr\",\n                    variants: [\n                        {\n                            begin: \"\\\\w[\\\\w :\\\\/.-]*:(?=[ \t]|$)\"\n                        },\n                        {\n                            begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \t]|$)'\n                        },\n                        {\n                            begin: \"'\\\\w[\\\\w :\\\\/.-]*':(?=[ \t]|$)\"\n                        }\n                    ]\n                },\n                {\n                    className: \"meta\",\n                    begin: \"^---\\\\s*$\",\n                    relevance: 10\n                },\n                {\n                    className: \"string\",\n                    begin: \"[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"\n                },\n                {\n                    begin: \"<%[%=-]?\",\n                    end: \"[%-]?%>\",\n                    subLanguage: \"ruby\",\n                    excludeBegin: !0,\n                    excludeEnd: !0,\n                    relevance: 0\n                },\n                {\n                    className: \"type\",\n                    begin: \"!\\\\w+!\" + t\n                },\n                {\n                    className: \"type\",\n                    begin: \"!<\" + t + \">\"\n                },\n                {\n                    className: \"type\",\n                    begin: \"!\" + t\n                },\n                {\n                    className: \"type\",\n                    begin: \"!!\" + t\n                },\n                {\n                    className: \"meta\",\n                    begin: \"&\" + e.UNDERSCORE_IDENT_RE + \"$\"\n                },\n                {\n                    className: \"meta\",\n                    begin: \"\\\\*\" + e.UNDERSCORE_IDENT_RE + \"$\"\n                },\n                {\n                    className: \"bullet\",\n                    begin: \"-(?=[ ]|$)\",\n                    relevance: 0\n                },\n                e.HASH_COMMENT_MODE,\n                {\n                    beginKeywords: n,\n                    keywords: {\n                        literal: n\n                    }\n                },\n                {\n                    className: \"number\",\n                    begin: \"\\\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\\\.[0-9]*)?([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\\\b\"\n                },\n                {\n                    className: \"number\",\n                    begin: e.C_NUMBER_RE + \"\\\\b\",\n                    relevance: 0\n                },\n                s,\n                o,\n                a\n            ], c = [\n                ...l\n            ];\n            return c.pop(), c.push(i), r.contains = c, {\n                name: \"YAML\",\n                case_insensitive: !0,\n                aliases: [\n                    \"yml\"\n                ],\n                contains: l\n            };\n        }\n    });\n    const je = ne;\n    for (const e of Object.keys(Ue)){\n        const n = e.replace(\"grmr_\", \"\").replace(\"_\", \"-\");\n        je.registerLanguage(n, Ue[e]);\n    }\n    return je;\n}();\n\"object\" == typeof exports && \"undefined\" != typeof module && (module.exports = hljs);\n\n//# sourceMappingURL=chatpage.f519350e.js.map\n","/*!\n  Highlight.js v11.7.0 (git: 82688fad18)\n  (c) 2006-2022 undefined and other contributors\n  License: BSD-3-Clause\n */\n  var hljs=function(){\"use strict\";var e={exports:{}};function n(e){\n    return e instanceof Map?e.clear=e.delete=e.set=()=>{\n    throw Error(\"map is read-only\")}:e instanceof Set&&(e.add=e.clear=e.delete=()=>{\n    throw Error(\"set is read-only\")\n    }),Object.freeze(e),Object.getOwnPropertyNames(e).forEach((t=>{var a=e[t]\n    ;\"object\"!=typeof a||Object.isFrozen(a)||n(a)})),e}\n    e.exports=n,e.exports.default=n;class t{constructor(e){\n    void 0===e.data&&(e.data={}),this.data=e.data,this.isMatchIgnored=!1}\n    ignoreMatch(){this.isMatchIgnored=!0}}function a(e){\n    return e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\")\n    }function i(e,...n){const t=Object.create(null);for(const n in e)t[n]=e[n]\n    ;return n.forEach((e=>{for(const n in e)t[n]=e[n]})),t}\n    const r=e=>!!e.scope||e.sublanguage&&e.language;class s{constructor(e,n){\n    this.buffer=\"\",this.classPrefix=n.classPrefix,e.walk(this)}addText(e){\n    this.buffer+=a(e)}openNode(e){if(!r(e))return;let n=\"\"\n    ;n=e.sublanguage?\"language-\"+e.language:((e,{prefix:n})=>{if(e.includes(\".\")){\n    const t=e.split(\".\")\n    ;return[`${n}${t.shift()}`,...t.map(((e,n)=>`${e}${\"_\".repeat(n+1)}`))].join(\" \")\n    }return`${n}${e}`})(e.scope,{prefix:this.classPrefix}),this.span(n)}\n    closeNode(e){r(e)&&(this.buffer+=\"</span>\")}value(){return this.buffer}span(e){\n    this.buffer+=`<span class=\"${e}\">`}}const o=(e={})=>{const n={children:[]}\n    ;return Object.assign(n,e),n};class l{constructor(){\n    this.rootNode=o(),this.stack=[this.rootNode]}get top(){\n    return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(e){\n    this.top.children.push(e)}openNode(e){const n=o({scope:e})\n    ;this.add(n),this.stack.push(n)}closeNode(){\n    if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){\n    for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}\n    walk(e){return this.constructor._walk(e,this.rootNode)}static _walk(e,n){\n    return\"string\"==typeof n?e.addText(n):n.children&&(e.openNode(n),\n    n.children.forEach((n=>this._walk(e,n))),e.closeNode(n)),e}static _collapse(e){\n    \"string\"!=typeof e&&e.children&&(e.children.every((e=>\"string\"==typeof e))?e.children=[e.children.join(\"\")]:e.children.forEach((e=>{\n    l._collapse(e)})))}}class c extends l{constructor(e){super(),this.options=e}\n    addKeyword(e,n){\"\"!==e&&(this.openNode(n),this.addText(e),this.closeNode())}\n    addText(e){\"\"!==e&&this.add(e)}addSublanguage(e,n){const t=e.root\n    ;t.sublanguage=!0,t.language=n,this.add(t)}toHTML(){\n    return new s(this,this.options).value()}finalize(){return!0}}function d(e){\n    return e?\"string\"==typeof e?e:e.source:null}function g(e){return m(\"(?=\",e,\")\")}\n    function u(e){return m(\"(?:\",e,\")*\")}function b(e){return m(\"(?:\",e,\")?\")}\n    function m(...e){return e.map((e=>d(e))).join(\"\")}function p(...e){const n=(e=>{\n    const n=e[e.length-1]\n    ;return\"object\"==typeof n&&n.constructor===Object?(e.splice(e.length-1,1),n):{}\n    })(e);return\"(\"+(n.capture?\"\":\"?:\")+e.map((e=>d(e))).join(\"|\")+\")\"}\n    function _(e){return RegExp(e.toString()+\"|\").exec(\"\").length-1}\n    const h=/\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./\n    ;function f(e,{joinWith:n}){let t=0;return e.map((e=>{t+=1;const n=t\n    ;let a=d(e),i=\"\";for(;a.length>0;){const e=h.exec(a);if(!e){i+=a;break}\n    i+=a.substring(0,e.index),\n    a=a.substring(e.index+e[0].length),\"\\\\\"===e[0][0]&&e[1]?i+=\"\\\\\"+(Number(e[1])+n):(i+=e[0],\n    \"(\"===e[0]&&t++)}return i})).map((e=>`(${e})`)).join(n)}\n    const E=\"[a-zA-Z]\\\\w*\",y=\"[a-zA-Z_]\\\\w*\",w=\"\\\\b\\\\d+(\\\\.\\\\d+)?\",N=\"(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)\",v=\"\\\\b(0b[01]+)\",O={\n    begin:\"\\\\\\\\[\\\\s\\\\S]\",relevance:0},k={scope:\"string\",begin:\"'\",end:\"'\",\n    illegal:\"\\\\n\",contains:[O]},x={scope:\"string\",begin:'\"',end:'\"',illegal:\"\\\\n\",\n    contains:[O]},M=(e,n,t={})=>{const a=i({scope:\"comment\",begin:e,end:n,\n    contains:[]},t);a.contains.push({scope:\"doctag\",\n    begin:\"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)\",\n    end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0})\n    ;const r=p(\"I\",\"a\",\"is\",\"so\",\"us\",\"to\",\"at\",\"if\",\"in\",\"it\",\"on\",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/)\n    ;return a.contains.push({begin:m(/[ ]+/,\"(\",r,/[.]?[:]?([.][ ]|[ ])/,\"){3}\")}),a\n    },S=M(\"//\",\"$\"),A=M(\"/\\\\*\",\"\\\\*/\"),C=M(\"#\",\"$\");var T=Object.freeze({\n    __proto__:null,MATCH_NOTHING_RE:/\\b\\B/,IDENT_RE:E,UNDERSCORE_IDENT_RE:y,\n    NUMBER_RE:w,C_NUMBER_RE:N,BINARY_NUMBER_RE:v,\n    RE_STARTERS_RE:\"!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~\",\n    SHEBANG:(e={})=>{const n=/^#![ ]*\\//\n    ;return e.binary&&(e.begin=m(n,/.*\\b/,e.binary,/\\b.*/)),i({scope:\"meta\",begin:n,\n    end:/$/,relevance:0,\"on:begin\":(e,n)=>{0!==e.index&&n.ignoreMatch()}},e)},\n    BACKSLASH_ESCAPE:O,APOS_STRING_MODE:k,QUOTE_STRING_MODE:x,PHRASAL_WORDS_MODE:{\n    begin:/\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n    },COMMENT:M,C_LINE_COMMENT_MODE:S,C_BLOCK_COMMENT_MODE:A,HASH_COMMENT_MODE:C,\n    NUMBER_MODE:{scope:\"number\",begin:w,relevance:0},C_NUMBER_MODE:{scope:\"number\",\n    begin:N,relevance:0},BINARY_NUMBER_MODE:{scope:\"number\",begin:v,relevance:0},\n    REGEXP_MODE:{begin:/(?=\\/[^/\\n]*\\/)/,contains:[{scope:\"regexp\",begin:/\\//,\n    end:/\\/[gimuy]*/,illegal:/\\n/,contains:[O,{begin:/\\[/,end:/\\]/,relevance:0,\n    contains:[O]}]}]},TITLE_MODE:{scope:\"title\",begin:E,relevance:0},\n    UNDERSCORE_TITLE_MODE:{scope:\"title\",begin:y,relevance:0},METHOD_GUARD:{\n    begin:\"\\\\.\\\\s*[a-zA-Z_]\\\\w*\",relevance:0},END_SAME_AS_BEGIN:e=>Object.assign(e,{\n    \"on:begin\":(e,n)=>{n.data._beginMatch=e[1]},\"on:end\":(e,n)=>{\n    n.data._beginMatch!==e[1]&&n.ignoreMatch()}})});function R(e,n){\n    \".\"===e.input[e.index-1]&&n.ignoreMatch()}function D(e,n){\n    void 0!==e.className&&(e.scope=e.className,delete e.className)}function I(e,n){\n    n&&e.beginKeywords&&(e.begin=\"\\\\b(\"+e.beginKeywords.split(\" \").join(\"|\")+\")(?!\\\\.)(?=\\\\b|\\\\s)\",\n    e.__beforeBegin=R,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,\n    void 0===e.relevance&&(e.relevance=0))}function L(e,n){\n    Array.isArray(e.illegal)&&(e.illegal=p(...e.illegal))}function B(e,n){\n    if(e.match){\n    if(e.begin||e.end)throw Error(\"begin & end are not supported with match\")\n    ;e.begin=e.match,delete e.match}}function $(e,n){\n    void 0===e.relevance&&(e.relevance=1)}const z=(e,n)=>{if(!e.beforeMatch)return\n    ;if(e.starts)throw Error(\"beforeMatch cannot be used with starts\")\n    ;const t=Object.assign({},e);Object.keys(e).forEach((n=>{delete e[n]\n    })),e.keywords=t.keywords,e.begin=m(t.beforeMatch,g(t.begin)),e.starts={\n    relevance:0,contains:[Object.assign(t,{endsParent:!0})]\n    },e.relevance=0,delete t.beforeMatch\n    },F=[\"of\",\"and\",\"for\",\"in\",\"not\",\"or\",\"if\",\"then\",\"parent\",\"list\",\"value\"]\n    ;function U(e,n,t=\"keyword\"){const a=Object.create(null)\n    ;return\"string\"==typeof e?i(t,e.split(\" \")):Array.isArray(e)?i(t,e):Object.keys(e).forEach((t=>{\n    Object.assign(a,U(e[t],n,t))})),a;function i(e,t){\n    n&&(t=t.map((e=>e.toLowerCase()))),t.forEach((n=>{const t=n.split(\"|\")\n    ;a[t[0]]=[e,j(t[0],t[1])]}))}}function j(e,n){\n    return n?Number(n):(e=>F.includes(e.toLowerCase()))(e)?0:1}const P={},K=e=>{\n    console.error(e)},H=(e,...n)=>{console.log(\"WARN: \"+e,...n)},q=(e,n)=>{\n    P[`${e}/${n}`]||(console.log(`Deprecated as of ${e}. ${n}`),P[`${e}/${n}`]=!0)\n    },Z=Error();function G(e,n,{key:t}){let a=0;const i=e[t],r={},s={}\n    ;for(let e=1;e<=n.length;e++)s[e+a]=i[e],r[e+a]=!0,a+=_(n[e-1])\n    ;e[t]=s,e[t]._emit=r,e[t]._multi=!0}function W(e){(e=>{\n    e.scope&&\"object\"==typeof e.scope&&null!==e.scope&&(e.beginScope=e.scope,\n    delete e.scope)})(e),\"string\"==typeof e.beginScope&&(e.beginScope={\n    _wrap:e.beginScope}),\"string\"==typeof e.endScope&&(e.endScope={_wrap:e.endScope\n    }),(e=>{if(Array.isArray(e.begin)){\n    if(e.skip||e.excludeBegin||e.returnBegin)throw K(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\"),\n    Z\n    ;if(\"object\"!=typeof e.beginScope||null===e.beginScope)throw K(\"beginScope must be object\"),\n    Z;G(e,e.begin,{key:\"beginScope\"}),e.begin=f(e.begin,{joinWith:\"\"})}})(e),(e=>{\n    if(Array.isArray(e.end)){\n    if(e.skip||e.excludeEnd||e.returnEnd)throw K(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\"),\n    Z\n    ;if(\"object\"!=typeof e.endScope||null===e.endScope)throw K(\"endScope must be object\"),\n    Z;G(e,e.end,{key:\"endScope\"}),e.end=f(e.end,{joinWith:\"\"})}})(e)}function Q(e){\n    function n(n,t){\n    return RegExp(d(n),\"m\"+(e.case_insensitive?\"i\":\"\")+(e.unicodeRegex?\"u\":\"\")+(t?\"g\":\"\"))\n    }class t{constructor(){\n    this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}\n    addRule(e,n){\n    n.position=this.position++,this.matchIndexes[this.matchAt]=n,this.regexes.push([n,e]),\n    this.matchAt+=_(e)+1}compile(){0===this.regexes.length&&(this.exec=()=>null)\n    ;const e=this.regexes.map((e=>e[1]));this.matcherRe=n(f(e,{joinWith:\"|\"\n    }),!0),this.lastIndex=0}exec(e){this.matcherRe.lastIndex=this.lastIndex\n    ;const n=this.matcherRe.exec(e);if(!n)return null\n    ;const t=n.findIndex(((e,n)=>n>0&&void 0!==e)),a=this.matchIndexes[t]\n    ;return n.splice(0,t),Object.assign(n,a)}}class a{constructor(){\n    this.rules=[],this.multiRegexes=[],\n    this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(e){\n    if(this.multiRegexes[e])return this.multiRegexes[e];const n=new t\n    ;return this.rules.slice(e).forEach((([e,t])=>n.addRule(e,t))),\n    n.compile(),this.multiRegexes[e]=n,n}resumingScanAtSamePosition(){\n    return 0!==this.regexIndex}considerAll(){this.regexIndex=0}addRule(e,n){\n    this.rules.push([e,n]),\"begin\"===n.type&&this.count++}exec(e){\n    const n=this.getMatcher(this.regexIndex);n.lastIndex=this.lastIndex\n    ;let t=n.exec(e)\n    ;if(this.resumingScanAtSamePosition())if(t&&t.index===this.lastIndex);else{\n    const n=this.getMatcher(0);n.lastIndex=this.lastIndex+1,t=n.exec(e)}\n    return t&&(this.regexIndex+=t.position+1,\n    this.regexIndex===this.count&&this.considerAll()),t}}\n    if(e.compilerExtensions||(e.compilerExtensions=[]),\n    e.contains&&e.contains.includes(\"self\"))throw Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\")\n    ;return e.classNameAliases=i(e.classNameAliases||{}),function t(r,s){const o=r\n    ;if(r.isCompiled)return o\n    ;[D,B,W,z].forEach((e=>e(r,s))),e.compilerExtensions.forEach((e=>e(r,s))),\n    r.__beforeBegin=null,[I,L,$].forEach((e=>e(r,s))),r.isCompiled=!0;let l=null\n    ;return\"object\"==typeof r.keywords&&r.keywords.$pattern&&(r.keywords=Object.assign({},r.keywords),\n    l=r.keywords.$pattern,\n    delete r.keywords.$pattern),l=l||/\\w+/,r.keywords&&(r.keywords=U(r.keywords,e.case_insensitive)),\n    o.keywordPatternRe=n(l,!0),\n    s&&(r.begin||(r.begin=/\\B|\\b/),o.beginRe=n(o.begin),r.end||r.endsWithParent||(r.end=/\\B|\\b/),\n    r.end&&(o.endRe=n(o.end)),\n    o.terminatorEnd=d(o.end)||\"\",r.endsWithParent&&s.terminatorEnd&&(o.terminatorEnd+=(r.end?\"|\":\"\")+s.terminatorEnd)),\n    r.illegal&&(o.illegalRe=n(r.illegal)),\n    r.contains||(r.contains=[]),r.contains=[].concat(...r.contains.map((e=>(e=>(e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map((n=>i(e,{\n    variants:null},n)))),e.cachedVariants?e.cachedVariants:X(e)?i(e,{\n    starts:e.starts?i(e.starts):null\n    }):Object.isFrozen(e)?i(e):e))(\"self\"===e?r:e)))),r.contains.forEach((e=>{t(e,o)\n    })),r.starts&&t(r.starts,s),o.matcher=(e=>{const n=new a\n    ;return e.contains.forEach((e=>n.addRule(e.begin,{rule:e,type:\"begin\"\n    }))),e.terminatorEnd&&n.addRule(e.terminatorEnd,{type:\"end\"\n    }),e.illegal&&n.addRule(e.illegal,{type:\"illegal\"}),n})(o),o}(e)}function X(e){\n    return!!e&&(e.endsWithParent||X(e.starts))}class V extends Error{\n    constructor(e,n){super(e),this.name=\"HTMLInjectionError\",this.html=n}}\n    const J=a,Y=i,ee=Symbol(\"nomatch\");var ne=(n=>{\n    const a=Object.create(null),i=Object.create(null),r=[];let s=!0\n    ;const o=\"Could not find the language '{}', did you forget to load/include a language module?\",l={\n    disableAutodetect:!0,name:\"Plain text\",contains:[]};let d={\n    ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,\n    languageDetectRe:/\\blang(?:uage)?-([\\w-]+)\\b/i,classPrefix:\"hljs-\",\n    cssSelector:\"pre code\",languages:null,__emitter:c};function _(e){\n    return d.noHighlightRe.test(e)}function h(e,n,t){let a=\"\",i=\"\"\n    ;\"object\"==typeof n?(a=e,\n    t=n.ignoreIllegals,i=n.language):(q(\"10.7.0\",\"highlight(lang, code, ...args) has been deprecated.\"),\n    q(\"10.7.0\",\"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\"),\n    i=e,a=n),void 0===t&&(t=!0);const r={code:a,language:i};x(\"before:highlight\",r)\n    ;const s=r.result?r.result:f(r.language,r.code,t)\n    ;return s.code=r.code,x(\"after:highlight\",s),s}function f(e,n,i,r){\n    const l=Object.create(null);function c(){if(!k.keywords)return void M.addText(S)\n    ;let e=0;k.keywordPatternRe.lastIndex=0;let n=k.keywordPatternRe.exec(S),t=\"\"\n    ;for(;n;){t+=S.substring(e,n.index)\n    ;const i=w.case_insensitive?n[0].toLowerCase():n[0],r=(a=i,k.keywords[a]);if(r){\n    const[e,a]=r\n    ;if(M.addText(t),t=\"\",l[i]=(l[i]||0)+1,l[i]<=7&&(A+=a),e.startsWith(\"_\"))t+=n[0];else{\n    const t=w.classNameAliases[e]||e;M.addKeyword(n[0],t)}}else t+=n[0]\n    ;e=k.keywordPatternRe.lastIndex,n=k.keywordPatternRe.exec(S)}var a\n    ;t+=S.substring(e),M.addText(t)}function g(){null!=k.subLanguage?(()=>{\n    if(\"\"===S)return;let e=null;if(\"string\"==typeof k.subLanguage){\n    if(!a[k.subLanguage])return void M.addText(S)\n    ;e=f(k.subLanguage,S,!0,x[k.subLanguage]),x[k.subLanguage]=e._top\n    }else e=E(S,k.subLanguage.length?k.subLanguage:null)\n    ;k.relevance>0&&(A+=e.relevance),M.addSublanguage(e._emitter,e.language)\n    })():c(),S=\"\"}function u(e,n){let t=1;const a=n.length-1;for(;t<=a;){\n    if(!e._emit[t]){t++;continue}const a=w.classNameAliases[e[t]]||e[t],i=n[t]\n    ;a?M.addKeyword(i,a):(S=i,c(),S=\"\"),t++}}function b(e,n){\n    return e.scope&&\"string\"==typeof e.scope&&M.openNode(w.classNameAliases[e.scope]||e.scope),\n    e.beginScope&&(e.beginScope._wrap?(M.addKeyword(S,w.classNameAliases[e.beginScope._wrap]||e.beginScope._wrap),\n    S=\"\"):e.beginScope._multi&&(u(e.beginScope,n),S=\"\")),k=Object.create(e,{parent:{\n    value:k}}),k}function m(e,n,a){let i=((e,n)=>{const t=e&&e.exec(n)\n    ;return t&&0===t.index})(e.endRe,a);if(i){if(e[\"on:end\"]){const a=new t(e)\n    ;e[\"on:end\"](n,a),a.isMatchIgnored&&(i=!1)}if(i){\n    for(;e.endsParent&&e.parent;)e=e.parent;return e}}\n    if(e.endsWithParent)return m(e.parent,n,a)}function p(e){\n    return 0===k.matcher.regexIndex?(S+=e[0],1):(R=!0,0)}function _(e){\n    const t=e[0],a=n.substring(e.index),i=m(k,e,a);if(!i)return ee;const r=k\n    ;k.endScope&&k.endScope._wrap?(g(),\n    M.addKeyword(t,k.endScope._wrap)):k.endScope&&k.endScope._multi?(g(),\n    u(k.endScope,e)):r.skip?S+=t:(r.returnEnd||r.excludeEnd||(S+=t),\n    g(),r.excludeEnd&&(S=t));do{\n    k.scope&&M.closeNode(),k.skip||k.subLanguage||(A+=k.relevance),k=k.parent\n    }while(k!==i.parent);return i.starts&&b(i.starts,e),r.returnEnd?0:t.length}\n    let h={};function y(a,r){const o=r&&r[0];if(S+=a,null==o)return g(),0\n    ;if(\"begin\"===h.type&&\"end\"===r.type&&h.index===r.index&&\"\"===o){\n    if(S+=n.slice(r.index,r.index+1),!s){const n=Error(`0 width match regex (${e})`)\n    ;throw n.languageName=e,n.badRule=h.rule,n}return 1}\n    if(h=r,\"begin\"===r.type)return(e=>{\n    const n=e[0],a=e.rule,i=new t(a),r=[a.__beforeBegin,a[\"on:begin\"]]\n    ;for(const t of r)if(t&&(t(e,i),i.isMatchIgnored))return p(n)\n    ;return a.skip?S+=n:(a.excludeBegin&&(S+=n),\n    g(),a.returnBegin||a.excludeBegin||(S=n)),b(a,e),a.returnBegin?0:n.length})(r)\n    ;if(\"illegal\"===r.type&&!i){\n    const e=Error('Illegal lexeme \"'+o+'\" for mode \"'+(k.scope||\"<unnamed>\")+'\"')\n    ;throw e.mode=k,e}if(\"end\"===r.type){const e=_(r);if(e!==ee)return e}\n    if(\"illegal\"===r.type&&\"\"===o)return 1\n    ;if(T>1e5&&T>3*r.index)throw Error(\"potential infinite loop, way more iterations than matches\")\n    ;return S+=o,o.length}const w=v(e)\n    ;if(!w)throw K(o.replace(\"{}\",e)),Error('Unknown language: \"'+e+'\"')\n    ;const N=Q(w);let O=\"\",k=r||N;const x={},M=new d.__emitter(d);(()=>{const e=[]\n    ;for(let n=k;n!==w;n=n.parent)n.scope&&e.unshift(n.scope)\n    ;e.forEach((e=>M.openNode(e)))})();let S=\"\",A=0,C=0,T=0,R=!1;try{\n    for(k.matcher.considerAll();;){\n    T++,R?R=!1:k.matcher.considerAll(),k.matcher.lastIndex=C\n    ;const e=k.matcher.exec(n);if(!e)break;const t=y(n.substring(C,e.index),e)\n    ;C=e.index+t}\n    return y(n.substring(C)),M.closeAllNodes(),M.finalize(),O=M.toHTML(),{\n    language:e,value:O,relevance:A,illegal:!1,_emitter:M,_top:k}}catch(t){\n    if(t.message&&t.message.includes(\"Illegal\"))return{language:e,value:J(n),\n    illegal:!0,relevance:0,_illegalBy:{message:t.message,index:C,\n    context:n.slice(C-100,C+100),mode:t.mode,resultSoFar:O},_emitter:M};if(s)return{\n    language:e,value:J(n),illegal:!1,relevance:0,errorRaised:t,_emitter:M,_top:k}\n    ;throw t}}function E(e,n){n=n||d.languages||Object.keys(a);const t=(e=>{\n    const n={value:J(e),illegal:!1,relevance:0,_top:l,_emitter:new d.__emitter(d)}\n    ;return n._emitter.addText(e),n})(e),i=n.filter(v).filter(k).map((n=>f(n,e,!1)))\n    ;i.unshift(t);const r=i.sort(((e,n)=>{\n    if(e.relevance!==n.relevance)return n.relevance-e.relevance\n    ;if(e.language&&n.language){if(v(e.language).supersetOf===n.language)return 1\n    ;if(v(n.language).supersetOf===e.language)return-1}return 0})),[s,o]=r,c=s\n    ;return c.secondBest=o,c}function y(e){let n=null;const t=(e=>{\n    let n=e.className+\" \";n+=e.parentNode?e.parentNode.className:\"\"\n    ;const t=d.languageDetectRe.exec(n);if(t){const n=v(t[1])\n    ;return n||(H(o.replace(\"{}\",t[1])),\n    H(\"Falling back to no-highlight mode for this block.\",e)),n?t[1]:\"no-highlight\"}\n    return n.split(/\\s+/).find((e=>_(e)||v(e)))})(e);if(_(t))return\n    ;if(x(\"before:highlightElement\",{el:e,language:t\n    }),e.children.length>0&&(d.ignoreUnescapedHTML||(console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\"),\n    console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\"),\n    console.warn(\"The element with unescaped HTML:\"),\n    console.warn(e)),d.throwUnescapedHTML))throw new V(\"One of your code blocks includes unescaped HTML.\",e.innerHTML)\n    ;n=e;const a=n.textContent,r=t?h(a,{language:t,ignoreIllegals:!0}):E(a)\n    ;e.innerHTML=r.value,((e,n,t)=>{const a=n&&i[n]||t\n    ;e.classList.add(\"hljs\"),e.classList.add(\"language-\"+a)\n    })(e,t,r.language),e.result={language:r.language,re:r.relevance,\n    relevance:r.relevance},r.secondBest&&(e.secondBest={\n    language:r.secondBest.language,relevance:r.secondBest.relevance\n    }),x(\"after:highlightElement\",{el:e,result:r,text:a})}let w=!1;function N(){\n    \"loading\"!==document.readyState?document.querySelectorAll(d.cssSelector).forEach(y):w=!0\n    }function v(e){return e=(e||\"\").toLowerCase(),a[e]||a[i[e]]}\n    function O(e,{languageName:n}){\"string\"==typeof e&&(e=[e]),e.forEach((e=>{\n    i[e.toLowerCase()]=n}))}function k(e){const n=v(e)\n    ;return n&&!n.disableAutodetect}function x(e,n){const t=e;r.forEach((e=>{\n    e[t]&&e[t](n)}))}\n    \"undefined\"!=typeof window&&window.addEventListener&&window.addEventListener(\"DOMContentLoaded\",(()=>{\n    w&&N()}),!1),Object.assign(n,{highlight:h,highlightAuto:E,highlightAll:N,\n    highlightElement:y,\n    highlightBlock:e=>(q(\"10.7.0\",\"highlightBlock will be removed entirely in v12.0\"),\n    q(\"10.7.0\",\"Please use highlightElement now.\"),y(e)),configure:e=>{d=Y(d,e)},\n    initHighlighting:()=>{\n    N(),q(\"10.6.0\",\"initHighlighting() deprecated.  Use highlightAll() now.\")},\n    initHighlightingOnLoad:()=>{\n    N(),q(\"10.6.0\",\"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\")\n    },registerLanguage:(e,t)=>{let i=null;try{i=t(n)}catch(n){\n    if(K(\"Language definition for '{}' could not be registered.\".replace(\"{}\",e)),\n    !s)throw n;K(n),i=l}\n    i.name||(i.name=e),a[e]=i,i.rawDefinition=t.bind(null,n),i.aliases&&O(i.aliases,{\n    languageName:e})},unregisterLanguage:e=>{delete a[e]\n    ;for(const n of Object.keys(i))i[n]===e&&delete i[n]},\n    listLanguages:()=>Object.keys(a),getLanguage:v,registerAliases:O,\n    autoDetection:k,inherit:Y,addPlugin:e=>{(e=>{\n    e[\"before:highlightBlock\"]&&!e[\"before:highlightElement\"]&&(e[\"before:highlightElement\"]=n=>{\n    e[\"before:highlightBlock\"](Object.assign({block:n.el},n))\n    }),e[\"after:highlightBlock\"]&&!e[\"after:highlightElement\"]&&(e[\"after:highlightElement\"]=n=>{\n    e[\"after:highlightBlock\"](Object.assign({block:n.el},n))})})(e),r.push(e)}\n    }),n.debugMode=()=>{s=!1},n.safeMode=()=>{s=!0\n    },n.versionString=\"11.7.0\",n.regex={concat:m,lookahead:g,either:p,optional:b,\n    anyNumberOfTimes:u};for(const n in T)\"object\"==typeof T[n]&&e.exports(T[n])\n    ;return Object.assign(n,T),n})({});const te=e=>({IMPORTANT:{scope:\"meta\",\n    begin:\"!important\"},BLOCK_COMMENT:e.C_BLOCK_COMMENT_MODE,HEXCOLOR:{\n    scope:\"number\",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/},\n    FUNCTION_DISPATCH:{className:\"built_in\",begin:/[\\w-]+(?=\\()/},\n    ATTRIBUTE_SELECTOR_MODE:{scope:\"selector-attr\",begin:/\\[/,end:/\\]/,illegal:\"$\",\n    contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{\n    scope:\"number\",\n    begin:e.NUMBER_RE+\"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\",\n    relevance:0},CSS_VARIABLE:{className:\"attr\",begin:/--[A-Za-z][A-Za-z0-9_-]*/}\n    }),ae=[\"a\",\"abbr\",\"address\",\"article\",\"aside\",\"audio\",\"b\",\"blockquote\",\"body\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"dd\",\"del\",\"details\",\"dfn\",\"div\",\"dl\",\"dt\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"hgroup\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"label\",\"legend\",\"li\",\"main\",\"mark\",\"menu\",\"nav\",\"object\",\"ol\",\"p\",\"q\",\"quote\",\"samp\",\"section\",\"span\",\"strong\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"ul\",\"var\",\"video\"],ie=[\"any-hover\",\"any-pointer\",\"aspect-ratio\",\"color\",\"color-gamut\",\"color-index\",\"device-aspect-ratio\",\"device-height\",\"device-width\",\"display-mode\",\"forced-colors\",\"grid\",\"height\",\"hover\",\"inverted-colors\",\"monochrome\",\"orientation\",\"overflow-block\",\"overflow-inline\",\"pointer\",\"prefers-color-scheme\",\"prefers-contrast\",\"prefers-reduced-motion\",\"prefers-reduced-transparency\",\"resolution\",\"scan\",\"scripting\",\"update\",\"width\",\"min-width\",\"max-width\",\"min-height\",\"max-height\"],re=[\"active\",\"any-link\",\"blank\",\"checked\",\"current\",\"default\",\"defined\",\"dir\",\"disabled\",\"drop\",\"empty\",\"enabled\",\"first\",\"first-child\",\"first-of-type\",\"fullscreen\",\"future\",\"focus\",\"focus-visible\",\"focus-within\",\"has\",\"host\",\"host-context\",\"hover\",\"indeterminate\",\"in-range\",\"invalid\",\"is\",\"lang\",\"last-child\",\"last-of-type\",\"left\",\"link\",\"local-link\",\"not\",\"nth-child\",\"nth-col\",\"nth-last-child\",\"nth-last-col\",\"nth-last-of-type\",\"nth-of-type\",\"only-child\",\"only-of-type\",\"optional\",\"out-of-range\",\"past\",\"placeholder-shown\",\"read-only\",\"read-write\",\"required\",\"right\",\"root\",\"scope\",\"target\",\"target-within\",\"user-invalid\",\"valid\",\"visited\",\"where\"],se=[\"after\",\"backdrop\",\"before\",\"cue\",\"cue-region\",\"first-letter\",\"first-line\",\"grammar-error\",\"marker\",\"part\",\"placeholder\",\"selection\",\"slotted\",\"spelling-error\"],oe=[\"align-content\",\"align-items\",\"align-self\",\"all\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-blend-mode\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"block-size\",\"border\",\"border-block\",\"border-block-color\",\"border-block-end\",\"border-block-end-color\",\"border-block-end-style\",\"border-block-end-width\",\"border-block-start\",\"border-block-start-color\",\"border-block-start-style\",\"border-block-start-width\",\"border-block-style\",\"border-block-width\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-inline\",\"border-inline-color\",\"border-inline-end\",\"border-inline-end-color\",\"border-inline-end-style\",\"border-inline-end-width\",\"border-inline-start\",\"border-inline-start-color\",\"border-inline-start-style\",\"border-inline-start-width\",\"border-inline-style\",\"border-inline-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"caret-color\",\"clear\",\"clip\",\"clip-path\",\"clip-rule\",\"color\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"contain\",\"content\",\"content-visibility\",\"counter-increment\",\"counter-reset\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"empty-cells\",\"filter\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"flow\",\"font\",\"font-display\",\"font-family\",\"font-feature-settings\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-smoothing\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-variation-settings\",\"font-weight\",\"gap\",\"glyph-orientation-vertical\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-gap\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"ime-mode\",\"inline-size\",\"isolation\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-block\",\"margin-block-end\",\"margin-block-start\",\"margin-bottom\",\"margin-inline\",\"margin-inline-end\",\"margin-inline-start\",\"margin-left\",\"margin-right\",\"margin-top\",\"marks\",\"mask\",\"mask-border\",\"mask-border-mode\",\"mask-border-outset\",\"mask-border-repeat\",\"mask-border-slice\",\"mask-border-source\",\"mask-border-width\",\"mask-clip\",\"mask-composite\",\"mask-image\",\"mask-mode\",\"mask-origin\",\"mask-position\",\"mask-repeat\",\"mask-size\",\"mask-type\",\"max-block-size\",\"max-height\",\"max-inline-size\",\"max-width\",\"min-block-size\",\"min-height\",\"min-inline-size\",\"min-width\",\"mix-blend-mode\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"none\",\"normal\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-block\",\"padding-block-end\",\"padding-block-start\",\"padding-bottom\",\"padding-inline\",\"padding-inline-end\",\"padding-inline-start\",\"padding-left\",\"padding-right\",\"padding-top\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pointer-events\",\"position\",\"quotes\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"right\",\"row-gap\",\"scroll-margin\",\"scroll-margin-block\",\"scroll-margin-block-end\",\"scroll-margin-block-start\",\"scroll-margin-bottom\",\"scroll-margin-inline\",\"scroll-margin-inline-end\",\"scroll-margin-inline-start\",\"scroll-margin-left\",\"scroll-margin-right\",\"scroll-margin-top\",\"scroll-padding\",\"scroll-padding-block\",\"scroll-padding-block-end\",\"scroll-padding-block-start\",\"scroll-padding-bottom\",\"scroll-padding-inline\",\"scroll-padding-inline-end\",\"scroll-padding-inline-start\",\"scroll-padding-left\",\"scroll-padding-right\",\"scroll-padding-top\",\"scroll-snap-align\",\"scroll-snap-stop\",\"scroll-snap-type\",\"scrollbar-color\",\"scrollbar-gutter\",\"scrollbar-width\",\"shape-image-threshold\",\"shape-margin\",\"shape-outside\",\"speak\",\"speak-as\",\"src\",\"tab-size\",\"table-layout\",\"text-align\",\"text-align-all\",\"text-align-last\",\"text-combine-upright\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-indent\",\"text-justify\",\"text-orientation\",\"text-overflow\",\"text-rendering\",\"text-shadow\",\"text-transform\",\"text-underline-position\",\"top\",\"transform\",\"transform-box\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"writing-mode\",\"z-index\"].reverse(),le=re.concat(se)\n    ;var ce=\"\\\\.([0-9](_*[0-9])*)\",de=\"[0-9a-fA-F](_*[0-9a-fA-F])*\",ge={\n    className:\"number\",variants:[{\n    begin:`(\\\\b([0-9](_*[0-9])*)((${ce})|\\\\.)?|(${ce}))[eE][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b`\n    },{begin:`\\\\b([0-9](_*[0-9])*)((${ce})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`},{\n    begin:`(${ce})[fFdD]?\\\\b`},{begin:\"\\\\b([0-9](_*[0-9])*)[fFdD]\\\\b\"},{\n    begin:`\\\\b0[xX]((${de})\\\\.?|(${de})?\\\\.(${de}))[pP][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b`\n    },{begin:\"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\"},{begin:`\\\\b0[xX](${de})[lL]?\\\\b`},{\n    begin:\"\\\\b0(_*[0-7])*[lL]?\\\\b\"},{begin:\"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\"}],\n    relevance:0};function ue(e,n,t){return-1===t?\"\":e.replace(n,(a=>ue(e,n,t-1)))}\n    const be=\"[A-Za-z$_][0-9A-Za-z$_]*\",me=[\"as\",\"in\",\"of\",\"if\",\"for\",\"while\",\"finally\",\"var\",\"new\",\"function\",\"do\",\"return\",\"void\",\"else\",\"break\",\"catch\",\"instanceof\",\"with\",\"throw\",\"case\",\"default\",\"try\",\"switch\",\"continue\",\"typeof\",\"delete\",\"let\",\"yield\",\"const\",\"class\",\"debugger\",\"async\",\"await\",\"static\",\"import\",\"from\",\"export\",\"extends\"],pe=[\"true\",\"false\",\"null\",\"undefined\",\"NaN\",\"Infinity\"],_e=[\"Object\",\"Function\",\"Boolean\",\"Symbol\",\"Math\",\"Date\",\"Number\",\"BigInt\",\"String\",\"RegExp\",\"Array\",\"Float32Array\",\"Float64Array\",\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Int32Array\",\"Uint16Array\",\"Uint32Array\",\"BigInt64Array\",\"BigUint64Array\",\"Set\",\"Map\",\"WeakSet\",\"WeakMap\",\"ArrayBuffer\",\"SharedArrayBuffer\",\"Atomics\",\"DataView\",\"JSON\",\"Promise\",\"Generator\",\"GeneratorFunction\",\"AsyncFunction\",\"Reflect\",\"Proxy\",\"Intl\",\"WebAssembly\"],he=[\"Error\",\"EvalError\",\"InternalError\",\"RangeError\",\"ReferenceError\",\"SyntaxError\",\"TypeError\",\"URIError\"],fe=[\"setInterval\",\"setTimeout\",\"clearInterval\",\"clearTimeout\",\"require\",\"exports\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"unescape\"],Ee=[\"arguments\",\"this\",\"super\",\"console\",\"window\",\"document\",\"localStorage\",\"module\",\"global\"],ye=[].concat(fe,_e,he)\n    ;function we(e){const n=e.regex,t=be,a={begin:/<[A-Za-z0-9\\\\._:-]+/,\n    end:/\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,isTrulyOpeningTag:(e,n)=>{\n    const t=e[0].length+e.index,a=e.input[t]\n    ;if(\"<\"===a||\",\"===a)return void n.ignoreMatch();let i\n    ;\">\"===a&&(((e,{after:n})=>{const t=\"</\"+e[0].slice(1)\n    ;return-1!==e.input.indexOf(t,n)})(e,{after:t})||n.ignoreMatch())\n    ;const r=e.input.substring(t)\n    ;((i=r.match(/^\\s*=/))||(i=r.match(/^\\s+extends\\s+/))&&0===i.index)&&n.ignoreMatch()\n    }},i={$pattern:be,keyword:me,literal:pe,built_in:ye,\"variable.language\":Ee\n    },r=\"\\\\.([0-9](_?[0-9])*)\",s=\"0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*\",o={\n    className:\"number\",variants:[{\n    begin:`(\\\\b(${s})((${r})|\\\\.)?|(${r}))[eE][+-]?([0-9](_?[0-9])*)\\\\b`},{\n    begin:`\\\\b(${s})\\\\b((${r})\\\\b|\\\\.)?|(${r})\\\\b`},{\n    begin:\"\\\\b(0|[1-9](_?[0-9])*)n\\\\b\"},{\n    begin:\"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\"},{\n    begin:\"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\"},{begin:\"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\"},{\n    begin:\"\\\\b0[0-7]+n?\\\\b\"}],relevance:0},l={className:\"subst\",begin:\"\\\\$\\\\{\",\n    end:\"\\\\}\",keywords:i,contains:[]},c={begin:\"html`\",end:\"\",starts:{end:\"`\",\n    returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,l],subLanguage:\"xml\"}},d={\n    begin:\"css`\",end:\"\",starts:{end:\"`\",returnEnd:!1,\n    contains:[e.BACKSLASH_ESCAPE,l],subLanguage:\"css\"}},g={className:\"string\",\n    begin:\"`\",end:\"`\",contains:[e.BACKSLASH_ESCAPE,l]},u={className:\"comment\",\n    variants:[e.COMMENT(/\\/\\*\\*(?!\\/)/,\"\\\\*/\",{relevance:0,contains:[{\n    begin:\"(?=@[A-Za-z]+)\",relevance:0,contains:[{className:\"doctag\",\n    begin:\"@[A-Za-z]+\"},{className:\"type\",begin:\"\\\\{\",end:\"\\\\}\",excludeEnd:!0,\n    excludeBegin:!0,relevance:0},{className:\"variable\",begin:t+\"(?=\\\\s*(-)|$)\",\n    endsParent:!0,relevance:0},{begin:/(?=[^\\n])\\s/,relevance:0}]}]\n    }),e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]\n    },b=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,c,d,g,{match:/\\$\\d+/},o]\n    ;l.contains=b.concat({begin:/\\{/,end:/\\}/,keywords:i,contains:[\"self\"].concat(b)\n    });const m=[].concat(u,l.contains),p=m.concat([{begin:/\\(/,end:/\\)/,keywords:i,\n    contains:[\"self\"].concat(m)}]),_={className:\"params\",begin:/\\(/,end:/\\)/,\n    excludeBegin:!0,excludeEnd:!0,keywords:i,contains:p},h={variants:[{\n    match:[/class/,/\\s+/,t,/\\s+/,/extends/,/\\s+/,n.concat(t,\"(\",n.concat(/\\./,t),\")*\")],\n    scope:{1:\"keyword\",3:\"title.class\",5:\"keyword\",7:\"title.class.inherited\"}},{\n    match:[/class/,/\\s+/,t],scope:{1:\"keyword\",3:\"title.class\"}}]},f={relevance:0,\n    match:n.either(/\\bJSON/,/\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,/\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,/\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/),\n    className:\"title.class\",keywords:{_:[..._e,...he]}},E={variants:[{\n    match:[/function/,/\\s+/,t,/(?=\\s*\\()/]},{match:[/function/,/\\s*(?=\\()/]}],\n    className:{1:\"keyword\",3:\"title.function\"},label:\"func.def\",contains:[_],\n    illegal:/%/},y={\n    match:n.concat(/\\b/,(w=[...fe,\"super\",\"import\"],n.concat(\"(?!\",w.join(\"|\"),\")\")),t,n.lookahead(/\\(/)),\n    className:\"title.function\",relevance:0};var w;const N={\n    begin:n.concat(/\\./,n.lookahead(n.concat(t,/(?![0-9A-Za-z$_(])/))),end:t,\n    excludeBegin:!0,keywords:\"prototype\",className:\"property\",relevance:0},v={\n    match:[/get|set/,/\\s+/,t,/(?=\\()/],className:{1:\"keyword\",3:\"title.function\"},\n    contains:[{begin:/\\(\\)/},_]\n    },O=\"(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|\"+e.UNDERSCORE_IDENT_RE+\")\\\\s*=>\",k={\n    match:[/const|var|let/,/\\s+/,t,/\\s*/,/=\\s*/,/(async\\s*)?/,n.lookahead(O)],\n    keywords:\"async\",className:{1:\"keyword\",3:\"title.function\"},contains:[_]}\n    ;return{name:\"Javascript\",aliases:[\"js\",\"jsx\",\"mjs\",\"cjs\"],keywords:i,exports:{\n    PARAMS_CONTAINS:p,CLASS_REFERENCE:f},illegal:/#(?![$_A-z])/,\n    contains:[e.SHEBANG({label:\"shebang\",binary:\"node\",relevance:5}),{\n    label:\"use_strict\",className:\"meta\",relevance:10,\n    begin:/^\\s*['\"]use (strict|asm)['\"]/\n    },e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,c,d,g,u,{match:/\\$\\d+/},o,f,{\n    className:\"attr\",begin:t+n.lookahead(\":\"),relevance:0},k,{\n    begin:\"(\"+e.RE_STARTERS_RE+\"|\\\\b(case|return|throw)\\\\b)\\\\s*\",\n    keywords:\"return throw case\",relevance:0,contains:[u,e.REGEXP_MODE,{\n    className:\"function\",begin:O,returnBegin:!0,end:\"\\\\s*=>\",contains:[{\n    className:\"params\",variants:[{begin:e.UNDERSCORE_IDENT_RE,relevance:0},{\n    className:null,begin:/\\(\\s*\\)/,skip:!0},{begin:/\\(/,end:/\\)/,excludeBegin:!0,\n    excludeEnd:!0,keywords:i,contains:p}]}]},{begin:/,/,relevance:0},{match:/\\s+/,\n    relevance:0},{variants:[{begin:\"<>\",end:\"</>\"},{\n    match:/<[A-Za-z0-9\\\\._:-]+\\s*\\/>/},{begin:a.begin,\n    \"on:begin\":a.isTrulyOpeningTag,end:a.end}],subLanguage:\"xml\",contains:[{\n    begin:a.begin,end:a.end,skip:!0,contains:[\"self\"]}]}]},E,{\n    beginKeywords:\"while if switch catch for\"},{\n    begin:\"\\\\b(?!function)\"+e.UNDERSCORE_IDENT_RE+\"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\",\n    returnBegin:!0,label:\"func.def\",contains:[_,e.inherit(e.TITLE_MODE,{begin:t,\n    className:\"title.function\"})]},{match:/\\.\\.\\./,relevance:0},N,{match:\"\\\\$\"+t,\n    relevance:0},{match:[/\\bconstructor(?=\\s*\\()/],className:{1:\"title.function\"},\n    contains:[_]},y,{relevance:0,match:/\\b[A-Z][A-Z_0-9]+\\b/,\n    className:\"variable.constant\"},h,v,{match:/\\$[(.]/}]}}\n    const Ne=e=>m(/\\b/,e,/\\w$/.test(e)?/\\b/:/\\B/),ve=[\"Protocol\",\"Type\"].map(Ne),Oe=[\"init\",\"self\"].map(Ne),ke=[\"Any\",\"Self\"],xe=[\"actor\",\"any\",\"associatedtype\",\"async\",\"await\",/as\\?/,/as!/,\"as\",\"break\",\"case\",\"catch\",\"class\",\"continue\",\"convenience\",\"default\",\"defer\",\"deinit\",\"didSet\",\"distributed\",\"do\",\"dynamic\",\"else\",\"enum\",\"extension\",\"fallthrough\",/fileprivate\\(set\\)/,\"fileprivate\",\"final\",\"for\",\"func\",\"get\",\"guard\",\"if\",\"import\",\"indirect\",\"infix\",/init\\?/,/init!/,\"inout\",/internal\\(set\\)/,\"internal\",\"in\",\"is\",\"isolated\",\"nonisolated\",\"lazy\",\"let\",\"mutating\",\"nonmutating\",/open\\(set\\)/,\"open\",\"operator\",\"optional\",\"override\",\"postfix\",\"precedencegroup\",\"prefix\",/private\\(set\\)/,\"private\",\"protocol\",/public\\(set\\)/,\"public\",\"repeat\",\"required\",\"rethrows\",\"return\",\"set\",\"some\",\"static\",\"struct\",\"subscript\",\"super\",\"switch\",\"throws\",\"throw\",/try\\?/,/try!/,\"try\",\"typealias\",/unowned\\(safe\\)/,/unowned\\(unsafe\\)/,\"unowned\",\"var\",\"weak\",\"where\",\"while\",\"willSet\"],Me=[\"false\",\"nil\",\"true\"],Se=[\"assignment\",\"associativity\",\"higherThan\",\"left\",\"lowerThan\",\"none\",\"right\"],Ae=[\"#colorLiteral\",\"#column\",\"#dsohandle\",\"#else\",\"#elseif\",\"#endif\",\"#error\",\"#file\",\"#fileID\",\"#fileLiteral\",\"#filePath\",\"#function\",\"#if\",\"#imageLiteral\",\"#keyPath\",\"#line\",\"#selector\",\"#sourceLocation\",\"#warn_unqualified_access\",\"#warning\"],Ce=[\"abs\",\"all\",\"any\",\"assert\",\"assertionFailure\",\"debugPrint\",\"dump\",\"fatalError\",\"getVaList\",\"isKnownUniquelyReferenced\",\"max\",\"min\",\"numericCast\",\"pointwiseMax\",\"pointwiseMin\",\"precondition\",\"preconditionFailure\",\"print\",\"readLine\",\"repeatElement\",\"sequence\",\"stride\",\"swap\",\"swift_unboxFromSwiftValueWithType\",\"transcode\",\"type\",\"unsafeBitCast\",\"unsafeDowncast\",\"withExtendedLifetime\",\"withUnsafeMutablePointer\",\"withUnsafePointer\",\"withVaList\",\"withoutActuallyEscaping\",\"zip\"],Te=p(/[/=\\-+!*%<>&|^~?]/,/[\\u00A1-\\u00A7]/,/[\\u00A9\\u00AB]/,/[\\u00AC\\u00AE]/,/[\\u00B0\\u00B1]/,/[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,/[\\u2016-\\u2017]/,/[\\u2020-\\u2027]/,/[\\u2030-\\u203E]/,/[\\u2041-\\u2053]/,/[\\u2055-\\u205E]/,/[\\u2190-\\u23FF]/,/[\\u2500-\\u2775]/,/[\\u2794-\\u2BFF]/,/[\\u2E00-\\u2E7F]/,/[\\u3001-\\u3003]/,/[\\u3008-\\u3020]/,/[\\u3030]/),Re=p(Te,/[\\u0300-\\u036F]/,/[\\u1DC0-\\u1DFF]/,/[\\u20D0-\\u20FF]/,/[\\uFE00-\\uFE0F]/,/[\\uFE20-\\uFE2F]/),De=m(Te,Re,\"*\"),Ie=p(/[a-zA-Z_]/,/[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,/[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,/[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,/[\\u1E00-\\u1FFF]/,/[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,/[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,/[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,/[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,/[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,/[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/),Le=p(Ie,/\\d/,/[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/),Be=m(Ie,Le,\"*\"),$e=m(/[A-Z]/,Le,\"*\"),ze=[\"autoclosure\",m(/convention\\(/,p(\"swift\",\"block\",\"c\"),/\\)/),\"discardableResult\",\"dynamicCallable\",\"dynamicMemberLookup\",\"escaping\",\"frozen\",\"GKInspectable\",\"IBAction\",\"IBDesignable\",\"IBInspectable\",\"IBOutlet\",\"IBSegueAction\",\"inlinable\",\"main\",\"nonobjc\",\"NSApplicationMain\",\"NSCopying\",\"NSManaged\",m(/objc\\(/,Be,/\\)/),\"objc\",\"objcMembers\",\"propertyWrapper\",\"requires_stored_property_inits\",\"resultBuilder\",\"testable\",\"UIApplicationMain\",\"unknown\",\"usableFromInline\"],Fe=[\"iOS\",\"iOSApplicationExtension\",\"macOS\",\"macOSApplicationExtension\",\"macCatalyst\",\"macCatalystApplicationExtension\",\"watchOS\",\"watchOSApplicationExtension\",\"tvOS\",\"tvOSApplicationExtension\",\"swift\"]\n    ;var Ue=Object.freeze({__proto__:null,grmr_bash:e=>{const n=e.regex,t={},a={\n    begin:/\\$\\{/,end:/\\}/,contains:[\"self\",{begin:/:-/,contains:[t]}]}\n    ;Object.assign(t,{className:\"variable\",variants:[{\n    begin:n.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\"(?![\\\\w\\\\d])(?![$])\")},a]});const i={\n    className:\"subst\",begin:/\\$\\(/,end:/\\)/,contains:[e.BACKSLASH_ESCAPE]},r={\n    begin:/<<-?\\s*(?=\\w+)/,starts:{contains:[e.END_SAME_AS_BEGIN({begin:/(\\w+)/,\n    end:/(\\w+)/,className:\"string\"})]}},s={className:\"string\",begin:/\"/,end:/\"/,\n    contains:[e.BACKSLASH_ESCAPE,t,i]};i.contains.push(s);const o={begin:/\\$?\\(\\(/,\n    end:/\\)\\)/,contains:[{begin:/\\d+#[0-9a-f]+/,className:\"number\"},e.NUMBER_MODE,t]\n    },l=e.SHEBANG({binary:\"(fish|bash|zsh|sh|csh|ksh|tcsh|dash|scsh)\",relevance:10\n    }),c={className:\"function\",begin:/\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,returnBegin:!0,\n    contains:[e.inherit(e.TITLE_MODE,{begin:/\\w[\\w\\d_]*/})],relevance:0};return{\n    name:\"Bash\",aliases:[\"sh\"],keywords:{$pattern:/\\b[a-z][a-z0-9._-]+\\b/,\n    keyword:[\"if\",\"then\",\"else\",\"elif\",\"fi\",\"for\",\"while\",\"in\",\"do\",\"done\",\"case\",\"esac\",\"function\"],\n    literal:[\"true\",\"false\"],\n    built_in:[\"break\",\"cd\",\"continue\",\"eval\",\"exec\",\"exit\",\"export\",\"getopts\",\"hash\",\"pwd\",\"readonly\",\"return\",\"shift\",\"test\",\"times\",\"trap\",\"umask\",\"unset\",\"alias\",\"bind\",\"builtin\",\"caller\",\"command\",\"declare\",\"echo\",\"enable\",\"help\",\"let\",\"local\",\"logout\",\"mapfile\",\"printf\",\"read\",\"readarray\",\"source\",\"type\",\"typeset\",\"ulimit\",\"unalias\",\"set\",\"shopt\",\"autoload\",\"bg\",\"bindkey\",\"bye\",\"cap\",\"chdir\",\"clone\",\"comparguments\",\"compcall\",\"compctl\",\"compdescribe\",\"compfiles\",\"compgroups\",\"compquote\",\"comptags\",\"comptry\",\"compvalues\",\"dirs\",\"disable\",\"disown\",\"echotc\",\"echoti\",\"emulate\",\"fc\",\"fg\",\"float\",\"functions\",\"getcap\",\"getln\",\"history\",\"integer\",\"jobs\",\"kill\",\"limit\",\"log\",\"noglob\",\"popd\",\"print\",\"pushd\",\"pushln\",\"rehash\",\"sched\",\"setcap\",\"setopt\",\"stat\",\"suspend\",\"ttyctl\",\"unfunction\",\"unhash\",\"unlimit\",\"unsetopt\",\"vared\",\"wait\",\"whence\",\"where\",\"which\",\"zcompile\",\"zformat\",\"zftp\",\"zle\",\"zmodload\",\"zparseopts\",\"zprof\",\"zpty\",\"zregexparse\",\"zsocket\",\"zstyle\",\"ztcp\",\"chcon\",\"chgrp\",\"chown\",\"chmod\",\"cp\",\"dd\",\"df\",\"dir\",\"dircolors\",\"ln\",\"ls\",\"mkdir\",\"mkfifo\",\"mknod\",\"mktemp\",\"mv\",\"realpath\",\"rm\",\"rmdir\",\"shred\",\"sync\",\"touch\",\"truncate\",\"vdir\",\"b2sum\",\"base32\",\"base64\",\"cat\",\"cksum\",\"comm\",\"csplit\",\"cut\",\"expand\",\"fmt\",\"fold\",\"head\",\"join\",\"md5sum\",\"nl\",\"numfmt\",\"od\",\"paste\",\"ptx\",\"pr\",\"sha1sum\",\"sha224sum\",\"sha256sum\",\"sha384sum\",\"sha512sum\",\"shuf\",\"sort\",\"split\",\"sum\",\"tac\",\"tail\",\"tr\",\"tsort\",\"unexpand\",\"uniq\",\"wc\",\"arch\",\"basename\",\"chroot\",\"date\",\"dirname\",\"du\",\"echo\",\"env\",\"expr\",\"factor\",\"groups\",\"hostid\",\"id\",\"link\",\"logname\",\"nice\",\"nohup\",\"nproc\",\"pathchk\",\"pinky\",\"printenv\",\"printf\",\"pwd\",\"readlink\",\"runcon\",\"seq\",\"sleep\",\"stat\",\"stdbuf\",\"stty\",\"tee\",\"test\",\"timeout\",\"tty\",\"uname\",\"unlink\",\"uptime\",\"users\",\"who\",\"whoami\",\"yes\"]\n    },contains:[l,e.SHEBANG(),c,o,e.HASH_COMMENT_MODE,r,{match:/(\\/[a-z._-]+)+/},s,{\n    className:\"\",begin:/\\\\\"/},{className:\"string\",begin:/'/,end:/'/},t]}},\n    grmr_c:e=>{const n=e.regex,t=e.COMMENT(\"//\",\"$\",{contains:[{begin:/\\\\\\n/}]\n    }),a=\"[a-zA-Z_]\\\\w*::\",i=\"(decltype\\\\(auto\\\\)|\"+n.optional(a)+\"[a-zA-Z_]\\\\w*\"+n.optional(\"<[^<>]+>\")+\")\",r={\n    className:\"type\",variants:[{begin:\"\\\\b[a-z\\\\d_]*_t\\\\b\"},{\n    match:/\\batomic_[a-z]{3,6}\\b/}]},s={className:\"string\",variants:[{\n    begin:'(u8?|U|L)?\"',end:'\"',illegal:\"\\\\n\",contains:[e.BACKSLASH_ESCAPE]},{\n    begin:\"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\n    end:\"'\",illegal:\".\"},e.END_SAME_AS_BEGIN({\n    begin:/(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,end:/\\)([^()\\\\ ]{0,16})\"/})]},o={\n    className:\"number\",variants:[{begin:\"\\\\b(0b[01']+)\"},{\n    begin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n    },{\n    begin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n    }],relevance:0},l={className:\"meta\",begin:/#\\s*[a-z]+\\b/,end:/$/,keywords:{\n    keyword:\"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n    },contains:[{begin:/\\\\\\n/,relevance:0},e.inherit(s,{className:\"string\"}),{\n    className:\"string\",begin:/<.*?>/},t,e.C_BLOCK_COMMENT_MODE]},c={\n    className:\"title\",begin:n.optional(a)+e.IDENT_RE,relevance:0\n    },d=n.optional(a)+e.IDENT_RE+\"\\\\s*\\\\(\",g={\n    keyword:[\"asm\",\"auto\",\"break\",\"case\",\"continue\",\"default\",\"do\",\"else\",\"enum\",\"extern\",\"for\",\"fortran\",\"goto\",\"if\",\"inline\",\"register\",\"restrict\",\"return\",\"sizeof\",\"struct\",\"switch\",\"typedef\",\"union\",\"volatile\",\"while\",\"_Alignas\",\"_Alignof\",\"_Atomic\",\"_Generic\",\"_Noreturn\",\"_Static_assert\",\"_Thread_local\",\"alignas\",\"alignof\",\"noreturn\",\"static_assert\",\"thread_local\",\"_Pragma\"],\n    type:[\"float\",\"double\",\"signed\",\"unsigned\",\"int\",\"short\",\"long\",\"char\",\"void\",\"_Bool\",\"_Complex\",\"_Imaginary\",\"_Decimal32\",\"_Decimal64\",\"_Decimal128\",\"const\",\"static\",\"complex\",\"bool\",\"imaginary\"],\n    literal:\"true false NULL\",\n    built_in:\"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr\"\n    },u=[l,r,t,e.C_BLOCK_COMMENT_MODE,o,s],b={variants:[{begin:/=/,end:/;/},{\n    begin:/\\(/,end:/\\)/},{beginKeywords:\"new throw return else\",end:/;/}],\n    keywords:g,contains:u.concat([{begin:/\\(/,end:/\\)/,keywords:g,\n    contains:u.concat([\"self\"]),relevance:0}]),relevance:0},m={\n    begin:\"(\"+i+\"[\\\\*&\\\\s]+)+\"+d,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,\n    keywords:g,illegal:/[^\\w\\s\\*&:<>.]/,contains:[{begin:\"decltype\\\\(auto\\\\)\",\n    keywords:g,relevance:0},{begin:d,returnBegin:!0,contains:[e.inherit(c,{\n    className:\"title.function\"})],relevance:0},{relevance:0,match:/,/},{\n    className:\"params\",begin:/\\(/,end:/\\)/,keywords:g,relevance:0,\n    contains:[t,e.C_BLOCK_COMMENT_MODE,s,o,r,{begin:/\\(/,end:/\\)/,keywords:g,\n    relevance:0,contains:[\"self\",t,e.C_BLOCK_COMMENT_MODE,s,o,r]}]\n    },r,t,e.C_BLOCK_COMMENT_MODE,l]};return{name:\"C\",aliases:[\"h\"],keywords:g,\n    disableAutodetect:!0,illegal:\"</\",contains:[].concat(b,m,u,[l,{\n    begin:e.IDENT_RE+\"::\",keywords:g},{className:\"class\",\n    beginKeywords:\"enum class struct union\",end:/[{;:<>=]/,contains:[{\n    beginKeywords:\"final class struct\"},e.TITLE_MODE]}]),exports:{preprocessor:l,\n    strings:s,keywords:g}}},grmr_cpp:e=>{const n=e.regex,t=e.COMMENT(\"//\",\"$\",{\n    contains:[{begin:/\\\\\\n/}]\n    }),a=\"[a-zA-Z_]\\\\w*::\",i=\"(?!struct)(decltype\\\\(auto\\\\)|\"+n.optional(a)+\"[a-zA-Z_]\\\\w*\"+n.optional(\"<[^<>]+>\")+\")\",r={\n    className:\"type\",begin:\"\\\\b[a-z\\\\d_]*_t\\\\b\"},s={className:\"string\",variants:[{\n    begin:'(u8?|U|L)?\"',end:'\"',illegal:\"\\\\n\",contains:[e.BACKSLASH_ESCAPE]},{\n    begin:\"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\n    end:\"'\",illegal:\".\"},e.END_SAME_AS_BEGIN({\n    begin:/(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,end:/\\)([^()\\\\ ]{0,16})\"/})]},o={\n    className:\"number\",variants:[{begin:\"\\\\b(0b[01']+)\"},{\n    begin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n    },{\n    begin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n    }],relevance:0},l={className:\"meta\",begin:/#\\s*[a-z]+\\b/,end:/$/,keywords:{\n    keyword:\"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n    },contains:[{begin:/\\\\\\n/,relevance:0},e.inherit(s,{className:\"string\"}),{\n    className:\"string\",begin:/<.*?>/},t,e.C_BLOCK_COMMENT_MODE]},c={\n    className:\"title\",begin:n.optional(a)+e.IDENT_RE,relevance:0\n    },d=n.optional(a)+e.IDENT_RE+\"\\\\s*\\\\(\",g={\n    type:[\"bool\",\"char\",\"char16_t\",\"char32_t\",\"char8_t\",\"double\",\"float\",\"int\",\"long\",\"short\",\"void\",\"wchar_t\",\"unsigned\",\"signed\",\"const\",\"static\"],\n    keyword:[\"alignas\",\"alignof\",\"and\",\"and_eq\",\"asm\",\"atomic_cancel\",\"atomic_commit\",\"atomic_noexcept\",\"auto\",\"bitand\",\"bitor\",\"break\",\"case\",\"catch\",\"class\",\"co_await\",\"co_return\",\"co_yield\",\"compl\",\"concept\",\"const_cast|10\",\"consteval\",\"constexpr\",\"constinit\",\"continue\",\"decltype\",\"default\",\"delete\",\"do\",\"dynamic_cast|10\",\"else\",\"enum\",\"explicit\",\"export\",\"extern\",\"false\",\"final\",\"for\",\"friend\",\"goto\",\"if\",\"import\",\"inline\",\"module\",\"mutable\",\"namespace\",\"new\",\"noexcept\",\"not\",\"not_eq\",\"nullptr\",\"operator\",\"or\",\"or_eq\",\"override\",\"private\",\"protected\",\"public\",\"reflexpr\",\"register\",\"reinterpret_cast|10\",\"requires\",\"return\",\"sizeof\",\"static_assert\",\"static_cast|10\",\"struct\",\"switch\",\"synchronized\",\"template\",\"this\",\"thread_local\",\"throw\",\"transaction_safe\",\"transaction_safe_dynamic\",\"true\",\"try\",\"typedef\",\"typeid\",\"typename\",\"union\",\"using\",\"virtual\",\"volatile\",\"while\",\"xor\",\"xor_eq\"],\n    literal:[\"NULL\",\"false\",\"nullopt\",\"nullptr\",\"true\"],built_in:[\"_Pragma\"],\n    _type_hints:[\"any\",\"auto_ptr\",\"barrier\",\"binary_semaphore\",\"bitset\",\"complex\",\"condition_variable\",\"condition_variable_any\",\"counting_semaphore\",\"deque\",\"false_type\",\"future\",\"imaginary\",\"initializer_list\",\"istringstream\",\"jthread\",\"latch\",\"lock_guard\",\"multimap\",\"multiset\",\"mutex\",\"optional\",\"ostringstream\",\"packaged_task\",\"pair\",\"promise\",\"priority_queue\",\"queue\",\"recursive_mutex\",\"recursive_timed_mutex\",\"scoped_lock\",\"set\",\"shared_future\",\"shared_lock\",\"shared_mutex\",\"shared_timed_mutex\",\"shared_ptr\",\"stack\",\"string_view\",\"stringstream\",\"timed_mutex\",\"thread\",\"true_type\",\"tuple\",\"unique_lock\",\"unique_ptr\",\"unordered_map\",\"unordered_multimap\",\"unordered_multiset\",\"unordered_set\",\"variant\",\"vector\",\"weak_ptr\",\"wstring\",\"wstring_view\"]\n    },u={className:\"function.dispatch\",relevance:0,keywords:{\n    _hint:[\"abort\",\"abs\",\"acos\",\"apply\",\"as_const\",\"asin\",\"atan\",\"atan2\",\"calloc\",\"ceil\",\"cerr\",\"cin\",\"clog\",\"cos\",\"cosh\",\"cout\",\"declval\",\"endl\",\"exchange\",\"exit\",\"exp\",\"fabs\",\"floor\",\"fmod\",\"forward\",\"fprintf\",\"fputs\",\"free\",\"frexp\",\"fscanf\",\"future\",\"invoke\",\"isalnum\",\"isalpha\",\"iscntrl\",\"isdigit\",\"isgraph\",\"islower\",\"isprint\",\"ispunct\",\"isspace\",\"isupper\",\"isxdigit\",\"labs\",\"launder\",\"ldexp\",\"log\",\"log10\",\"make_pair\",\"make_shared\",\"make_shared_for_overwrite\",\"make_tuple\",\"make_unique\",\"malloc\",\"memchr\",\"memcmp\",\"memcpy\",\"memset\",\"modf\",\"move\",\"pow\",\"printf\",\"putchar\",\"puts\",\"realloc\",\"scanf\",\"sin\",\"sinh\",\"snprintf\",\"sprintf\",\"sqrt\",\"sscanf\",\"std\",\"stderr\",\"stdin\",\"stdout\",\"strcat\",\"strchr\",\"strcmp\",\"strcpy\",\"strcspn\",\"strlen\",\"strncat\",\"strncmp\",\"strncpy\",\"strpbrk\",\"strrchr\",\"strspn\",\"strstr\",\"swap\",\"tan\",\"tanh\",\"terminate\",\"to_underlying\",\"tolower\",\"toupper\",\"vfprintf\",\"visit\",\"vprintf\",\"vsprintf\"]\n    },\n    begin:n.concat(/\\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!switch)/,/(?!while)/,e.IDENT_RE,n.lookahead(/(<[^<>]+>|)\\s*\\(/))\n    },b=[u,l,r,t,e.C_BLOCK_COMMENT_MODE,o,s],m={variants:[{begin:/=/,end:/;/},{\n    begin:/\\(/,end:/\\)/},{beginKeywords:\"new throw return else\",end:/;/}],\n    keywords:g,contains:b.concat([{begin:/\\(/,end:/\\)/,keywords:g,\n    contains:b.concat([\"self\"]),relevance:0}]),relevance:0},p={className:\"function\",\n    begin:\"(\"+i+\"[\\\\*&\\\\s]+)+\"+d,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,\n    keywords:g,illegal:/[^\\w\\s\\*&:<>.]/,contains:[{begin:\"decltype\\\\(auto\\\\)\",\n    keywords:g,relevance:0},{begin:d,returnBegin:!0,contains:[c],relevance:0},{\n    begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[s,o]},{\n    relevance:0,match:/,/},{className:\"params\",begin:/\\(/,end:/\\)/,keywords:g,\n    relevance:0,contains:[t,e.C_BLOCK_COMMENT_MODE,s,o,r,{begin:/\\(/,end:/\\)/,\n    keywords:g,relevance:0,contains:[\"self\",t,e.C_BLOCK_COMMENT_MODE,s,o,r]}]\n    },r,t,e.C_BLOCK_COMMENT_MODE,l]};return{name:\"C++\",\n    aliases:[\"cc\",\"c++\",\"h++\",\"hpp\",\"hh\",\"hxx\",\"cxx\"],keywords:g,illegal:\"</\",\n    classNameAliases:{\"function.dispatch\":\"built_in\"},\n    contains:[].concat(m,p,u,b,[l,{\n    begin:\"\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)\",\n    end:\">\",keywords:g,contains:[\"self\",r]},{begin:e.IDENT_RE+\"::\",keywords:g},{\n    match:[/\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,/\\s+/,/\\w+/],\n    className:{1:\"keyword\",3:\"title.class\"}}])}},grmr_csharp:e=>{const n={\n    keyword:[\"abstract\",\"as\",\"base\",\"break\",\"case\",\"catch\",\"class\",\"const\",\"continue\",\"do\",\"else\",\"event\",\"explicit\",\"extern\",\"finally\",\"fixed\",\"for\",\"foreach\",\"goto\",\"if\",\"implicit\",\"in\",\"interface\",\"internal\",\"is\",\"lock\",\"namespace\",\"new\",\"operator\",\"out\",\"override\",\"params\",\"private\",\"protected\",\"public\",\"readonly\",\"record\",\"ref\",\"return\",\"scoped\",\"sealed\",\"sizeof\",\"stackalloc\",\"static\",\"struct\",\"switch\",\"this\",\"throw\",\"try\",\"typeof\",\"unchecked\",\"unsafe\",\"using\",\"virtual\",\"void\",\"volatile\",\"while\"].concat([\"add\",\"alias\",\"and\",\"ascending\",\"async\",\"await\",\"by\",\"descending\",\"equals\",\"from\",\"get\",\"global\",\"group\",\"init\",\"into\",\"join\",\"let\",\"nameof\",\"not\",\"notnull\",\"on\",\"or\",\"orderby\",\"partial\",\"remove\",\"select\",\"set\",\"unmanaged\",\"value|0\",\"var\",\"when\",\"where\",\"with\",\"yield\"]),\n    built_in:[\"bool\",\"byte\",\"char\",\"decimal\",\"delegate\",\"double\",\"dynamic\",\"enum\",\"float\",\"int\",\"long\",\"nint\",\"nuint\",\"object\",\"sbyte\",\"short\",\"string\",\"ulong\",\"uint\",\"ushort\"],\n    literal:[\"default\",\"false\",\"null\",\"true\"]},t=e.inherit(e.TITLE_MODE,{\n    begin:\"[a-zA-Z](\\\\.?\\\\w)*\"}),a={className:\"number\",variants:[{\n    begin:\"\\\\b(0b[01']+)\"},{\n    begin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)(u|U|l|L|ul|UL|f|F|b|B)\"},{\n    begin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n    }],relevance:0},i={className:\"string\",begin:'@\"',end:'\"',contains:[{begin:'\"\"'}]\n    },r=e.inherit(i,{illegal:/\\n/}),s={className:\"subst\",begin:/\\{/,end:/\\}/,\n    keywords:n},o=e.inherit(s,{illegal:/\\n/}),l={className:\"string\",begin:/\\$\"/,\n    end:'\"',illegal:/\\n/,contains:[{begin:/\\{\\{/},{begin:/\\}\\}/\n    },e.BACKSLASH_ESCAPE,o]},c={className:\"string\",begin:/\\$@\"/,end:'\"',contains:[{\n    begin:/\\{\\{/},{begin:/\\}\\}/},{begin:'\"\"'},s]},d=e.inherit(c,{illegal:/\\n/,\n    contains:[{begin:/\\{\\{/},{begin:/\\}\\}/},{begin:'\"\"'},o]})\n    ;s.contains=[c,l,i,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.C_BLOCK_COMMENT_MODE],\n    o.contains=[d,l,r,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.inherit(e.C_BLOCK_COMMENT_MODE,{\n    illegal:/\\n/})];const g={variants:[c,l,i,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]\n    },u={begin:\"<\",end:\">\",contains:[{beginKeywords:\"in out\"},t]\n    },b=e.IDENT_RE+\"(<\"+e.IDENT_RE+\"(\\\\s*,\\\\s*\"+e.IDENT_RE+\")*>)?(\\\\[\\\\])?\",m={\n    begin:\"@\"+e.IDENT_RE,relevance:0};return{name:\"C#\",aliases:[\"cs\",\"c#\"],\n    keywords:n,illegal:/::/,contains:[e.COMMENT(\"///\",\"$\",{returnBegin:!0,\n    contains:[{className:\"doctag\",variants:[{begin:\"///\",relevance:0},{\n    begin:\"\\x3c!--|--\\x3e\"},{begin:\"</?\",end:\">\"}]}]\n    }),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:\"meta\",begin:\"#\",\n    end:\"$\",keywords:{\n    keyword:\"if else elif endif define undef warning error line region endregion pragma checksum\"\n    }},g,a,{beginKeywords:\"class interface\",relevance:0,end:/[{;=]/,\n    illegal:/[^\\s:,]/,contains:[{beginKeywords:\"where class\"\n    },t,u,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{beginKeywords:\"namespace\",\n    relevance:0,end:/[{;=]/,illegal:/[^\\s:]/,\n    contains:[t,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{\n    beginKeywords:\"record\",relevance:0,end:/[{;=]/,illegal:/[^\\s:]/,\n    contains:[t,u,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:\"meta\",\n    begin:\"^\\\\s*\\\\[(?=[\\\\w])\",excludeBegin:!0,end:\"\\\\]\",excludeEnd:!0,contains:[{\n    className:\"string\",begin:/\"/,end:/\"/}]},{\n    beginKeywords:\"new return throw await else\",relevance:0},{className:\"function\",\n    begin:\"(\"+b+\"\\\\s+)+\"+e.IDENT_RE+\"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",returnBegin:!0,\n    end:/\\s*[{;=]/,excludeEnd:!0,keywords:n,contains:[{\n    beginKeywords:\"public private protected static internal protected abstract async extern override unsafe virtual new sealed partial\",\n    relevance:0},{begin:e.IDENT_RE+\"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",returnBegin:!0,\n    contains:[e.TITLE_MODE,u],relevance:0},{match:/\\(\\)/},{className:\"params\",\n    begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:n,relevance:0,\n    contains:[g,a,e.C_BLOCK_COMMENT_MODE]\n    },e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},m]}},grmr_css:e=>{\n    const n=e.regex,t=te(e),a=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE];return{\n    name:\"CSS\",case_insensitive:!0,illegal:/[=|'\\$]/,keywords:{\n    keyframePosition:\"from to\"},classNameAliases:{keyframePosition:\"selector-tag\"},\n    contains:[t.BLOCK_COMMENT,{begin:/-(webkit|moz|ms|o)-(?=[a-z])/\n    },t.CSS_NUMBER_MODE,{className:\"selector-id\",begin:/#[A-Za-z0-9_-]+/,relevance:0\n    },{className:\"selector-class\",begin:\"\\\\.[a-zA-Z-][a-zA-Z0-9_-]*\",relevance:0\n    },t.ATTRIBUTE_SELECTOR_MODE,{className:\"selector-pseudo\",variants:[{\n    begin:\":(\"+re.join(\"|\")+\")\"},{begin:\":(:)?(\"+se.join(\"|\")+\")\"}]\n    },t.CSS_VARIABLE,{className:\"attribute\",begin:\"\\\\b(\"+oe.join(\"|\")+\")\\\\b\"},{\n    begin:/:/,end:/[;}{]/,\n    contains:[t.BLOCK_COMMENT,t.HEXCOLOR,t.IMPORTANT,t.CSS_NUMBER_MODE,...a,{\n    begin:/(url|data-uri)\\(/,end:/\\)/,relevance:0,keywords:{built_in:\"url data-uri\"\n    },contains:[...a,{className:\"string\",begin:/[^)]/,endsWithParent:!0,\n    excludeEnd:!0}]},t.FUNCTION_DISPATCH]},{begin:n.lookahead(/@/),end:\"[{;]\",\n    relevance:0,illegal:/:/,contains:[{className:\"keyword\",begin:/@-?\\w[\\w]*(-\\w+)*/\n    },{begin:/\\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:{\n    $pattern:/[a-z-]+/,keyword:\"and or not only\",attribute:ie.join(\" \")},contains:[{\n    begin:/[a-z-]+(?=:)/,className:\"attribute\"},...a,t.CSS_NUMBER_MODE]}]},{\n    className:\"selector-tag\",begin:\"\\\\b(\"+ae.join(\"|\")+\")\\\\b\"}]}},grmr_diff:e=>{\n    const n=e.regex;return{name:\"Diff\",aliases:[\"patch\"],contains:[{\n    className:\"meta\",relevance:10,\n    match:n.either(/^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,/^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,/^--- +\\d+,\\d+ +----$/)\n    },{className:\"comment\",variants:[{\n    begin:n.either(/Index: /,/^index/,/={3,}/,/^-{3}/,/^\\*{3} /,/^\\+{3}/,/^diff --git/),\n    end:/$/},{match:/^\\*{15}$/}]},{className:\"addition\",begin:/^\\+/,end:/$/},{\n    className:\"deletion\",begin:/^-/,end:/$/},{className:\"addition\",begin:/^!/,\n    end:/$/}]}},grmr_go:e=>{const n={\n    keyword:[\"break\",\"case\",\"chan\",\"const\",\"continue\",\"default\",\"defer\",\"else\",\"fallthrough\",\"for\",\"func\",\"go\",\"goto\",\"if\",\"import\",\"interface\",\"map\",\"package\",\"range\",\"return\",\"select\",\"struct\",\"switch\",\"type\",\"var\"],\n    type:[\"bool\",\"byte\",\"complex64\",\"complex128\",\"error\",\"float32\",\"float64\",\"int8\",\"int16\",\"int32\",\"int64\",\"string\",\"uint8\",\"uint16\",\"uint32\",\"uint64\",\"int\",\"uint\",\"uintptr\",\"rune\"],\n    literal:[\"true\",\"false\",\"iota\",\"nil\"],\n    built_in:[\"append\",\"cap\",\"close\",\"complex\",\"copy\",\"imag\",\"len\",\"make\",\"new\",\"panic\",\"print\",\"println\",\"real\",\"recover\",\"delete\"]\n    };return{name:\"Go\",aliases:[\"golang\"],keywords:n,illegal:\"</\",\n    contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:\"string\",\n    variants:[e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:\"`\",end:\"`\"}]},{\n    className:\"number\",variants:[{begin:e.C_NUMBER_RE+\"[i]\",relevance:1\n    },e.C_NUMBER_MODE]},{begin:/:=/},{className:\"function\",beginKeywords:\"func\",\n    end:\"\\\\s*(\\\\{|$)\",excludeEnd:!0,contains:[e.TITLE_MODE,{className:\"params\",\n    begin:/\\(/,end:/\\)/,endsParent:!0,keywords:n,illegal:/[\"']/}]}]}},\n    grmr_graphql:e=>{const n=e.regex;return{name:\"GraphQL\",aliases:[\"gql\"],\n    case_insensitive:!0,disableAutodetect:!1,keywords:{\n    keyword:[\"query\",\"mutation\",\"subscription\",\"type\",\"input\",\"schema\",\"directive\",\"interface\",\"union\",\"scalar\",\"fragment\",\"enum\",\"on\"],\n    literal:[\"true\",\"false\",\"null\"]},\n    contains:[e.HASH_COMMENT_MODE,e.QUOTE_STRING_MODE,e.NUMBER_MODE,{\n    scope:\"punctuation\",match:/[.]{3}/,relevance:0},{scope:\"punctuation\",\n    begin:/[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,relevance:0},{scope:\"variable\",begin:/\\$/,\n    end:/\\W/,excludeEnd:!0,relevance:0},{scope:\"meta\",match:/@\\w+/,excludeEnd:!0},{\n    scope:\"symbol\",begin:n.concat(/[_A-Za-z][_0-9A-Za-z]*/,n.lookahead(/\\s*:/)),\n    relevance:0}],illegal:[/[;<']/,/BEGIN/]}},grmr_ini:e=>{const n=e.regex,t={\n    className:\"number\",relevance:0,variants:[{begin:/([+-]+)?[\\d]+_[\\d_]+/},{\n    begin:e.NUMBER_RE}]},a=e.COMMENT();a.variants=[{begin:/;/,end:/$/},{begin:/#/,\n    end:/$/}];const i={className:\"variable\",variants:[{begin:/\\$[\\w\\d\"][\\w\\d_]*/},{\n    begin:/\\$\\{(.*?)\\}/}]},r={className:\"literal\",\n    begin:/\\bon|off|true|false|yes|no\\b/},s={className:\"string\",\n    contains:[e.BACKSLASH_ESCAPE],variants:[{begin:\"'''\",end:\"'''\",relevance:10},{\n    begin:'\"\"\"',end:'\"\"\"',relevance:10},{begin:'\"',end:'\"'},{begin:\"'\",end:\"'\"}]\n    },o={begin:/\\[/,end:/\\]/,contains:[a,r,i,s,t,\"self\"],relevance:0\n    },l=n.either(/[A-Za-z0-9_-]+/,/\"(\\\\\"|[^\"])*\"/,/'[^']*'/);return{\n    name:\"TOML, also INI\",aliases:[\"toml\"],case_insensitive:!0,illegal:/\\S/,\n    contains:[a,{className:\"section\",begin:/\\[+/,end:/\\]+/},{\n    begin:n.concat(l,\"(\\\\s*\\\\.\\\\s*\",l,\")*\",n.lookahead(/\\s*=\\s*[^#\\s]/)),\n    className:\"attr\",starts:{end:/$/,contains:[a,o,r,i,s,t]}}]}},grmr_java:e=>{\n    const n=e.regex,t=\"[\\xc0-\\u02b8a-zA-Z_$][\\xc0-\\u02b8a-zA-Z_$0-9]*\",a=t+ue(\"(?:<\"+t+\"~~~(?:\\\\s*,\\\\s*\"+t+\"~~~)*>)?\",/~~~/g,2),i={\n    keyword:[\"synchronized\",\"abstract\",\"private\",\"var\",\"static\",\"if\",\"const \",\"for\",\"while\",\"strictfp\",\"finally\",\"protected\",\"import\",\"native\",\"final\",\"void\",\"enum\",\"else\",\"break\",\"transient\",\"catch\",\"instanceof\",\"volatile\",\"case\",\"assert\",\"package\",\"default\",\"public\",\"try\",\"switch\",\"continue\",\"throws\",\"protected\",\"public\",\"private\",\"module\",\"requires\",\"exports\",\"do\",\"sealed\",\"yield\",\"permits\"],\n    literal:[\"false\",\"true\",\"null\"],\n    type:[\"char\",\"boolean\",\"long\",\"float\",\"int\",\"byte\",\"short\",\"double\"],\n    built_in:[\"super\",\"this\"]},r={className:\"meta\",begin:\"@\"+t,contains:[{\n    begin:/\\(/,end:/\\)/,contains:[\"self\"]}]},s={className:\"params\",begin:/\\(/,\n    end:/\\)/,keywords:i,relevance:0,contains:[e.C_BLOCK_COMMENT_MODE],endsParent:!0}\n    ;return{name:\"Java\",aliases:[\"jsp\"],keywords:i,illegal:/<\\/|#/,\n    contains:[e.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{begin:/\\w+@/,\n    relevance:0},{className:\"doctag\",begin:\"@[A-Za-z]+\"}]}),{\n    begin:/import java\\.[a-z]+\\./,keywords:\"import\",relevance:2\n    },e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{begin:/\"\"\"/,end:/\"\"\"/,\n    className:\"string\",contains:[e.BACKSLASH_ESCAPE]\n    },e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{\n    match:[/\\b(?:class|interface|enum|extends|implements|new)/,/\\s+/,t],className:{\n    1:\"keyword\",3:\"title.class\"}},{match:/non-sealed/,scope:\"keyword\"},{\n    begin:[n.concat(/(?!else)/,t),/\\s+/,t,/\\s+/,/=(?!=)/],className:{1:\"type\",\n    3:\"variable\",5:\"operator\"}},{begin:[/record/,/\\s+/,t],className:{1:\"keyword\",\n    3:\"title.class\"},contains:[s,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{\n    beginKeywords:\"new throw return else\",relevance:0},{\n    begin:[\"(?:\"+a+\"\\\\s+)\",e.UNDERSCORE_IDENT_RE,/\\s*(?=\\()/],className:{\n    2:\"title.function\"},keywords:i,contains:[{className:\"params\",begin:/\\(/,\n    end:/\\)/,keywords:i,relevance:0,\n    contains:[r,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,ge,e.C_BLOCK_COMMENT_MODE]\n    },e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},ge,r]}},grmr_javascript:we,\n    grmr_json:e=>{const n=[\"true\",\"false\",\"null\"],t={scope:\"literal\",\n    beginKeywords:n.join(\" \")};return{name:\"JSON\",keywords:{literal:n},contains:[{\n    className:\"attr\",begin:/\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,relevance:1.01},{\n    match:/[{}[\\],:]/,className:\"punctuation\",relevance:0\n    },e.QUOTE_STRING_MODE,t,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],\n    illegal:\"\\\\S\"}},grmr_kotlin:e=>{const n={\n    keyword:\"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual\",\n    built_in:\"Byte Short Char Int Long Boolean Float Double Void Unit Nothing\",\n    literal:\"true false null\"},t={className:\"symbol\",begin:e.UNDERSCORE_IDENT_RE+\"@\"\n    },a={className:\"subst\",begin:/\\$\\{/,end:/\\}/,contains:[e.C_NUMBER_MODE]},i={\n    className:\"variable\",begin:\"\\\\$\"+e.UNDERSCORE_IDENT_RE},r={className:\"string\",\n    variants:[{begin:'\"\"\"',end:'\"\"\"(?=[^\"])',contains:[i,a]},{begin:\"'\",end:\"'\",\n    illegal:/\\n/,contains:[e.BACKSLASH_ESCAPE]},{begin:'\"',end:'\"',illegal:/\\n/,\n    contains:[e.BACKSLASH_ESCAPE,i,a]}]};a.contains.push(r);const s={\n    className:\"meta\",\n    begin:\"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*\"+e.UNDERSCORE_IDENT_RE+\")?\"\n    },o={className:\"meta\",begin:\"@\"+e.UNDERSCORE_IDENT_RE,contains:[{begin:/\\(/,\n    end:/\\)/,contains:[e.inherit(r,{className:\"string\"}),\"self\"]}]\n    },l=ge,c=e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[e.C_BLOCK_COMMENT_MODE]}),d={\n    variants:[{className:\"type\",begin:e.UNDERSCORE_IDENT_RE},{begin:/\\(/,end:/\\)/,\n    contains:[]}]},g=d;return g.variants[1].contains=[d],d.variants[1].contains=[g],\n    {name:\"Kotlin\",aliases:[\"kt\",\"kts\"],keywords:n,\n    contains:[e.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{className:\"doctag\",\n    begin:\"@[A-Za-z]+\"}]}),e.C_LINE_COMMENT_MODE,c,{className:\"keyword\",\n    begin:/\\b(break|continue|return|this)\\b/,starts:{contains:[{className:\"symbol\",\n    begin:/@\\w+/}]}},t,s,o,{className:\"function\",beginKeywords:\"fun\",end:\"[(]|$\",\n    returnBegin:!0,excludeEnd:!0,keywords:n,relevance:5,contains:[{\n    begin:e.UNDERSCORE_IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,relevance:0,\n    contains:[e.UNDERSCORE_TITLE_MODE]},{className:\"type\",begin:/</,end:/>/,\n    keywords:\"reified\",relevance:0},{className:\"params\",begin:/\\(/,end:/\\)/,\n    endsParent:!0,keywords:n,relevance:0,contains:[{begin:/:/,end:/[=,\\/]/,\n    endsWithParent:!0,contains:[d,e.C_LINE_COMMENT_MODE,c],relevance:0\n    },e.C_LINE_COMMENT_MODE,c,s,o,r,e.C_NUMBER_MODE]},c]},{\n    begin:[/class|interface|trait/,/\\s+/,e.UNDERSCORE_IDENT_RE],beginScope:{\n    3:\"title.class\"},keywords:\"class interface trait\",end:/[:\\{(]|$/,excludeEnd:!0,\n    illegal:\"extends implements\",contains:[{\n    beginKeywords:\"public protected internal private constructor\"\n    },e.UNDERSCORE_TITLE_MODE,{className:\"type\",begin:/</,end:/>/,excludeBegin:!0,\n    excludeEnd:!0,relevance:0},{className:\"type\",begin:/[,:]\\s*/,end:/[<\\(,){\\s]|$/,\n    excludeBegin:!0,returnEnd:!0},s,o]},r,{className:\"meta\",begin:\"^#!/usr/bin/env\",\n    end:\"$\",illegal:\"\\n\"},l]}},grmr_less:e=>{\n    const n=te(e),t=le,a=\"([\\\\w-]+|@\\\\{[\\\\w-]+\\\\})\",i=[],r=[],s=e=>({\n    className:\"string\",begin:\"~?\"+e+\".*?\"+e}),o=(e,n,t)=>({className:e,begin:n,\n    relevance:t}),l={$pattern:/[a-z-]+/,keyword:\"and or not only\",\n    attribute:ie.join(\" \")},c={begin:\"\\\\(\",end:\"\\\\)\",contains:r,keywords:l,\n    relevance:0}\n    ;r.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,s(\"'\"),s('\"'),n.CSS_NUMBER_MODE,{\n    begin:\"(url|data-uri)\\\\(\",starts:{className:\"string\",end:\"[\\\\)\\\\n]\",\n    excludeEnd:!0}\n    },n.HEXCOLOR,c,o(\"variable\",\"@@?[\\\\w-]+\",10),o(\"variable\",\"@\\\\{[\\\\w-]+\\\\}\"),o(\"built_in\",\"~?`[^`]*?`\"),{\n    className:\"attribute\",begin:\"[\\\\w-]+\\\\s*:\",end:\":\",returnBegin:!0,excludeEnd:!0\n    },n.IMPORTANT,{beginKeywords:\"and not\"},n.FUNCTION_DISPATCH);const d=r.concat({\n    begin:/\\{/,end:/\\}/,contains:i}),g={beginKeywords:\"when\",endsWithParent:!0,\n    contains:[{beginKeywords:\"and not\"}].concat(r)},u={begin:a+\"\\\\s*:\",\n    returnBegin:!0,end:/[;}]/,relevance:0,contains:[{begin:/-(webkit|moz|ms|o)-/\n    },n.CSS_VARIABLE,{className:\"attribute\",begin:\"\\\\b(\"+oe.join(\"|\")+\")\\\\b\",\n    end:/(?=:)/,starts:{endsWithParent:!0,illegal:\"[<=$]\",relevance:0,contains:r}}]\n    },b={className:\"keyword\",\n    begin:\"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b\",\n    starts:{end:\"[;{}]\",keywords:l,returnEnd:!0,contains:r,relevance:0}},m={\n    className:\"variable\",variants:[{begin:\"@[\\\\w-]+\\\\s*:\",relevance:15},{\n    begin:\"@[\\\\w-]+\"}],starts:{end:\"[;}]\",returnEnd:!0,contains:d}},p={variants:[{\n    begin:\"[\\\\.#:&\\\\[>]\",end:\"[;{}]\"},{begin:a,end:/\\{/}],returnBegin:!0,\n    returnEnd:!0,illegal:\"[<='$\\\"]\",relevance:0,\n    contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,g,o(\"keyword\",\"all\\\\b\"),o(\"variable\",\"@\\\\{[\\\\w-]+\\\\}\"),{\n    begin:\"\\\\b(\"+ae.join(\"|\")+\")\\\\b\",className:\"selector-tag\"\n    },n.CSS_NUMBER_MODE,o(\"selector-tag\",a,0),o(\"selector-id\",\"#\"+a),o(\"selector-class\",\"\\\\.\"+a,0),o(\"selector-tag\",\"&\",0),n.ATTRIBUTE_SELECTOR_MODE,{\n    className:\"selector-pseudo\",begin:\":(\"+re.join(\"|\")+\")\"},{\n    className:\"selector-pseudo\",begin:\":(:)?(\"+se.join(\"|\")+\")\"},{begin:/\\(/,\n    end:/\\)/,relevance:0,contains:d},{begin:\"!important\"},n.FUNCTION_DISPATCH]},_={\n    begin:`[\\\\w-]+:(:)?(${t.join(\"|\")})`,returnBegin:!0,contains:[p]}\n    ;return i.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,b,m,_,u,p,g,n.FUNCTION_DISPATCH),\n    {name:\"Less\",case_insensitive:!0,illegal:\"[=>'/<($\\\"]\",contains:i}},\n    grmr_lua:e=>{const n=\"\\\\[=*\\\\[\",t=\"\\\\]=*\\\\]\",a={begin:n,end:t,contains:[\"self\"]\n    },i=[e.COMMENT(\"--(?!\\\\[=*\\\\[)\",\"$\"),e.COMMENT(\"--\\\\[=*\\\\[\",t,{contains:[a],\n    relevance:10})];return{name:\"Lua\",keywords:{$pattern:e.UNDERSCORE_IDENT_RE,\n    literal:\"true false nil\",\n    keyword:\"and break do else elseif end for goto if in local not or repeat return then until while\",\n    built_in:\"_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove\"\n    },contains:i.concat([{className:\"function\",beginKeywords:\"function\",end:\"\\\\)\",\n    contains:[e.inherit(e.TITLE_MODE,{\n    begin:\"([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*\"}),{className:\"params\",\n    begin:\"\\\\(\",endsWithParent:!0,contains:i}].concat(i)\n    },e.C_NUMBER_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:\"string\",\n    begin:n,end:t,contains:[a],relevance:5}])}},grmr_makefile:e=>{const n={\n    className:\"variable\",variants:[{begin:\"\\\\$\\\\(\"+e.UNDERSCORE_IDENT_RE+\"\\\\)\",\n    contains:[e.BACKSLASH_ESCAPE]},{begin:/\\$[@%<?\\^\\+\\*]/}]},t={className:\"string\",\n    begin:/\"/,end:/\"/,contains:[e.BACKSLASH_ESCAPE,n]},a={className:\"variable\",\n    begin:/\\$\\([\\w-]+\\s/,end:/\\)/,keywords:{\n    built_in:\"subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value\"\n    },contains:[n]},i={begin:\"^\"+e.UNDERSCORE_IDENT_RE+\"\\\\s*(?=[:+?]?=)\"},r={\n    className:\"section\",begin:/^[^\\s]+:/,end:/$/,contains:[n]};return{\n    name:\"Makefile\",aliases:[\"mk\",\"mak\",\"make\"],keywords:{$pattern:/[\\w-]+/,\n    keyword:\"define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath\"\n    },contains:[e.HASH_COMMENT_MODE,n,t,a,i,{className:\"meta\",begin:/^\\.PHONY:/,\n    end:/$/,keywords:{$pattern:/[\\.\\w]+/,keyword:\".PHONY\"}},r]}},grmr_xml:e=>{\n    const n=e.regex,t=n.concat(/[\\p{L}_]/u,n.optional(/[\\p{L}0-9_.-]*:/u),/[\\p{L}0-9_.-]*/u),a={\n    className:\"symbol\",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},i={begin:/\\s/,\n    contains:[{className:\"keyword\",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\\n/}]\n    },r=e.inherit(i,{begin:/\\(/,end:/\\)/}),s=e.inherit(e.APOS_STRING_MODE,{\n    className:\"string\"}),o=e.inherit(e.QUOTE_STRING_MODE,{className:\"string\"}),l={\n    endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:\"attr\",\n    begin:/[\\p{L}0-9._:-]+/u,relevance:0},{begin:/=\\s*/,relevance:0,contains:[{\n    className:\"string\",endsParent:!0,variants:[{begin:/\"/,end:/\"/,contains:[a]},{\n    begin:/'/,end:/'/,contains:[a]},{begin:/[^\\s\"'=<>`]+/}]}]}]};return{\n    name:\"HTML, XML\",\n    aliases:[\"html\",\"xhtml\",\"rss\",\"atom\",\"xjb\",\"xsd\",\"xsl\",\"plist\",\"wsf\",\"svg\"],\n    case_insensitive:!0,unicodeRegex:!0,contains:[{className:\"meta\",begin:/<![a-z]/,\n    end:/>/,relevance:10,contains:[i,o,s,r,{begin:/\\[/,end:/\\]/,contains:[{\n    className:\"meta\",begin:/<![a-z]/,end:/>/,contains:[i,r,o,s]}]}]\n    },e.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\\[CDATA\\[/,end:/\\]\\]>/,\n    relevance:10},a,{className:\"meta\",end:/\\?>/,variants:[{begin:/<\\?xml/,\n    relevance:10,contains:[o]},{begin:/<\\?[a-z][a-z0-9]+/}]},{className:\"tag\",\n    begin:/<style(?=\\s|>)/,end:/>/,keywords:{name:\"style\"},contains:[l],starts:{\n    end:/<\\/style>/,returnEnd:!0,subLanguage:[\"css\",\"xml\"]}},{className:\"tag\",\n    begin:/<script(?=\\s|>)/,end:/>/,keywords:{name:\"script\"},contains:[l],starts:{\n    end:/<\\/script>/,returnEnd:!0,subLanguage:[\"javascript\",\"handlebars\",\"xml\"]}},{\n    className:\"tag\",begin:/<>|<\\/>/},{className:\"tag\",\n    begin:n.concat(/</,n.lookahead(n.concat(t,n.either(/\\/>/,/>/,/\\s/)))),\n    end:/\\/?>/,contains:[{className:\"name\",begin:t,relevance:0,starts:l}]},{\n    className:\"tag\",begin:n.concat(/<\\//,n.lookahead(n.concat(t,/>/))),contains:[{\n    className:\"name\",begin:t,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}\n    },grmr_markdown:e=>{const n={begin:/<\\/?[A-Za-z_]/,end:\">\",subLanguage:\"xml\",\n    relevance:0},t={variants:[{begin:/\\[.+?\\]\\[.*?\\]/,relevance:0},{\n    begin:/\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n    relevance:2},{\n    begin:e.regex.concat(/\\[.+?\\]\\(/,/[A-Za-z][A-Za-z0-9+.-]*/,/:\\/\\/.*?\\)/),\n    relevance:2},{begin:/\\[.+?\\]\\([./?&#].*?\\)/,relevance:1},{\n    begin:/\\[.*?\\]\\(.*?\\)/,relevance:0}],returnBegin:!0,contains:[{match:/\\[(?=\\])/\n    },{className:\"string\",relevance:0,begin:\"\\\\[\",end:\"\\\\]\",excludeBegin:!0,\n    returnEnd:!0},{className:\"link\",relevance:0,begin:\"\\\\]\\\\(\",end:\"\\\\)\",\n    excludeBegin:!0,excludeEnd:!0},{className:\"symbol\",relevance:0,begin:\"\\\\]\\\\[\",\n    end:\"\\\\]\",excludeBegin:!0,excludeEnd:!0}]},a={className:\"strong\",contains:[],\n    variants:[{begin:/_{2}(?!\\s)/,end:/_{2}/},{begin:/\\*{2}(?!\\s)/,end:/\\*{2}/}]\n    },i={className:\"emphasis\",contains:[],variants:[{begin:/\\*(?![*\\s])/,end:/\\*/},{\n    begin:/_(?![_\\s])/,end:/_/,relevance:0}]},r=e.inherit(a,{contains:[]\n    }),s=e.inherit(i,{contains:[]});a.contains.push(s),i.contains.push(r)\n    ;let o=[n,t];return[a,i,r,s].forEach((e=>{e.contains=e.contains.concat(o)\n    })),o=o.concat(a,i),{name:\"Markdown\",aliases:[\"md\",\"mkdown\",\"mkd\"],contains:[{\n    className:\"section\",variants:[{begin:\"^#{1,6}\",end:\"$\",contains:o},{\n    begin:\"(?=^.+?\\\\n[=-]{2,}$)\",contains:[{begin:\"^[=-]*$\"},{begin:\"^\",end:\"\\\\n\",\n    contains:o}]}]},n,{className:\"bullet\",begin:\"^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)\",\n    end:\"\\\\s+\",excludeEnd:!0},a,i,{className:\"quote\",begin:\"^>\\\\s+\",contains:o,\n    end:\"$\"},{className:\"code\",variants:[{begin:\"(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*\"},{\n    begin:\"(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*\"},{begin:\"```\",end:\"```+[ ]*$\"},{\n    begin:\"~~~\",end:\"~~~+[ ]*$\"},{begin:\"`.+?`\"},{begin:\"(?=^( {4}|\\\\t))\",\n    contains:[{begin:\"^( {4}|\\\\t)\",end:\"(\\\\n)$\"}],relevance:0}]},{\n    begin:\"^[-\\\\*]{3,}\",end:\"$\"},t,{begin:/^\\[[^\\n]+\\]:/,returnBegin:!0,contains:[{\n    className:\"symbol\",begin:/\\[/,end:/\\]/,excludeBegin:!0,excludeEnd:!0},{\n    className:\"link\",begin:/:\\s*/,end:/$/,excludeBegin:!0}]}]}},grmr_objectivec:e=>{\n    const n=/[a-zA-Z@][a-zA-Z0-9_]*/,t={$pattern:n,\n    keyword:[\"@interface\",\"@class\",\"@protocol\",\"@implementation\"]};return{\n    name:\"Objective-C\",aliases:[\"mm\",\"objc\",\"obj-c\",\"obj-c++\",\"objective-c++\"],\n    keywords:{\"variable.language\":[\"this\",\"super\"],$pattern:n,\n    keyword:[\"while\",\"export\",\"sizeof\",\"typedef\",\"const\",\"struct\",\"for\",\"union\",\"volatile\",\"static\",\"mutable\",\"if\",\"do\",\"return\",\"goto\",\"enum\",\"else\",\"break\",\"extern\",\"asm\",\"case\",\"default\",\"register\",\"explicit\",\"typename\",\"switch\",\"continue\",\"inline\",\"readonly\",\"assign\",\"readwrite\",\"self\",\"@synchronized\",\"id\",\"typeof\",\"nonatomic\",\"IBOutlet\",\"IBAction\",\"strong\",\"weak\",\"copy\",\"in\",\"out\",\"inout\",\"bycopy\",\"byref\",\"oneway\",\"__strong\",\"__weak\",\"__block\",\"__autoreleasing\",\"@private\",\"@protected\",\"@public\",\"@try\",\"@property\",\"@end\",\"@throw\",\"@catch\",\"@finally\",\"@autoreleasepool\",\"@synthesize\",\"@dynamic\",\"@selector\",\"@optional\",\"@required\",\"@encode\",\"@package\",\"@import\",\"@defs\",\"@compatibility_alias\",\"__bridge\",\"__bridge_transfer\",\"__bridge_retained\",\"__bridge_retain\",\"__covariant\",\"__contravariant\",\"__kindof\",\"_Nonnull\",\"_Nullable\",\"_Null_unspecified\",\"__FUNCTION__\",\"__PRETTY_FUNCTION__\",\"__attribute__\",\"getter\",\"setter\",\"retain\",\"unsafe_unretained\",\"nonnull\",\"nullable\",\"null_unspecified\",\"null_resettable\",\"class\",\"instancetype\",\"NS_DESIGNATED_INITIALIZER\",\"NS_UNAVAILABLE\",\"NS_REQUIRES_SUPER\",\"NS_RETURNS_INNER_POINTER\",\"NS_INLINE\",\"NS_AVAILABLE\",\"NS_DEPRECATED\",\"NS_ENUM\",\"NS_OPTIONS\",\"NS_SWIFT_UNAVAILABLE\",\"NS_ASSUME_NONNULL_BEGIN\",\"NS_ASSUME_NONNULL_END\",\"NS_REFINED_FOR_SWIFT\",\"NS_SWIFT_NAME\",\"NS_SWIFT_NOTHROW\",\"NS_DURING\",\"NS_HANDLER\",\"NS_ENDHANDLER\",\"NS_VALUERETURN\",\"NS_VOIDRETURN\"],\n    literal:[\"false\",\"true\",\"FALSE\",\"TRUE\",\"nil\",\"YES\",\"NO\",\"NULL\"],\n    built_in:[\"dispatch_once_t\",\"dispatch_queue_t\",\"dispatch_sync\",\"dispatch_async\",\"dispatch_once\"],\n    type:[\"int\",\"float\",\"char\",\"unsigned\",\"signed\",\"short\",\"long\",\"double\",\"wchar_t\",\"unichar\",\"void\",\"bool\",\"BOOL\",\"id|0\",\"_Bool\"]\n    },illegal:\"</\",contains:[{className:\"built_in\",\n    begin:\"\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+\"\n    },e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.C_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{\n    className:\"string\",variants:[{begin:'@\"',end:'\"',illegal:\"\\\\n\",\n    contains:[e.BACKSLASH_ESCAPE]}]},{className:\"meta\",begin:/#\\s*[a-z]+\\b/,end:/$/,\n    keywords:{\n    keyword:\"if else elif endif define undef warning error line pragma ifdef ifndef include\"\n    },contains:[{begin:/\\\\\\n/,relevance:0},e.inherit(e.QUOTE_STRING_MODE,{\n    className:\"string\"}),{className:\"string\",begin:/<.*?>/,end:/$/,illegal:\"\\\\n\"\n    },e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:\"class\",\n    begin:\"(\"+t.keyword.join(\"|\")+\")\\\\b\",end:/(\\{|$)/,excludeEnd:!0,keywords:t,\n    contains:[e.UNDERSCORE_TITLE_MODE]},{begin:\"\\\\.\"+e.UNDERSCORE_IDENT_RE,\n    relevance:0}]}},grmr_perl:e=>{const n=e.regex,t=/[dualxmsipngr]{0,12}/,a={\n    $pattern:/[\\w.]+/,\n    keyword:\"abs accept alarm and atan2 bind binmode bless break caller chdir chmod chomp chop chown chr chroot close closedir connect continue cos crypt dbmclose dbmopen defined delete die do dump each else elsif endgrent endhostent endnetent endprotoent endpwent endservent eof eval exec exists exit exp fcntl fileno flock for foreach fork format formline getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername getpgrp getpriority getprotobyname getprotobynumber getprotoent getpwent getpwnam getpwuid getservbyname getservbyport getservent getsockname getsockopt given glob gmtime goto grep gt hex if index int ioctl join keys kill last lc lcfirst length link listen local localtime log lstat lt ma map mkdir msgctl msgget msgrcv msgsnd my ne next no not oct open opendir or ord our pack package pipe pop pos print printf prototype push q|0 qq quotemeta qw qx rand read readdir readline readlink readpipe recv redo ref rename require reset return reverse rewinddir rindex rmdir say scalar seek seekdir select semctl semget semop send setgrent sethostent setnetent setpgrp setpriority setprotoent setpwent setservent setsockopt shift shmctl shmget shmread shmwrite shutdown sin sleep socket socketpair sort splice split sprintf sqrt srand stat state study sub substr symlink syscall sysopen sysread sysseek system syswrite tell telldir tie tied time times tr truncate uc ucfirst umask undef unless unlink unpack unshift untie until use utime values vec wait waitpid wantarray warn when while write x|0 xor y|0\"\n    },i={className:\"subst\",begin:\"[$@]\\\\{\",end:\"\\\\}\",keywords:a},r={begin:/->\\{/,\n    end:/\\}/},s={variants:[{begin:/\\$\\d/},{\n    begin:n.concat(/[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\"(?![A-Za-z])(?![@$%])\")\n    },{begin:/[$%@][^\\s\\w{]/,relevance:0}]\n    },o=[e.BACKSLASH_ESCAPE,i,s],l=[/!/,/\\//,/\\|/,/\\?/,/'/,/\"/,/#/],c=(e,a,i=\"\\\\1\")=>{\n    const r=\"\\\\1\"===i?i:n.concat(i,a)\n    ;return n.concat(n.concat(\"(?:\",e,\")\"),a,/(?:\\\\.|[^\\\\\\/])*?/,r,/(?:\\\\.|[^\\\\\\/])*?/,i,t)\n    },d=(e,a,i)=>n.concat(n.concat(\"(?:\",e,\")\"),a,/(?:\\\\.|[^\\\\\\/])*?/,i,t),g=[s,e.HASH_COMMENT_MODE,e.COMMENT(/^=\\w/,/=cut/,{\n    endsWithParent:!0}),r,{className:\"string\",contains:o,variants:[{\n    begin:\"q[qwxr]?\\\\s*\\\\(\",end:\"\\\\)\",relevance:5},{begin:\"q[qwxr]?\\\\s*\\\\[\",\n    end:\"\\\\]\",relevance:5},{begin:\"q[qwxr]?\\\\s*\\\\{\",end:\"\\\\}\",relevance:5},{\n    begin:\"q[qwxr]?\\\\s*\\\\|\",end:\"\\\\|\",relevance:5},{begin:\"q[qwxr]?\\\\s*<\",end:\">\",\n    relevance:5},{begin:\"qw\\\\s+q\",end:\"q\",relevance:5},{begin:\"'\",end:\"'\",\n    contains:[e.BACKSLASH_ESCAPE]},{begin:'\"',end:'\"'},{begin:\"`\",end:\"`\",\n    contains:[e.BACKSLASH_ESCAPE]},{begin:/\\{\\w+\\}/,relevance:0},{\n    begin:\"-?\\\\w+\\\\s*=>\",relevance:0}]},{className:\"number\",\n    begin:\"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\",\n    relevance:0},{\n    begin:\"(\\\\/\\\\/|\"+e.RE_STARTERS_RE+\"|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*\",\n    keywords:\"split return print reverse grep\",relevance:0,\n    contains:[e.HASH_COMMENT_MODE,{className:\"regexp\",variants:[{\n    begin:c(\"s|tr|y\",n.either(...l,{capture:!0}))},{begin:c(\"s|tr|y\",\"\\\\(\",\"\\\\)\")},{\n    begin:c(\"s|tr|y\",\"\\\\[\",\"\\\\]\")},{begin:c(\"s|tr|y\",\"\\\\{\",\"\\\\}\")}],relevance:2},{\n    className:\"regexp\",variants:[{begin:/(m|qr)\\/\\//,relevance:0},{\n    begin:d(\"(?:m|qr)?\",/\\//,/\\//)},{begin:d(\"m|qr\",n.either(...l,{capture:!0\n    }),/\\1/)},{begin:d(\"m|qr\",/\\(/,/\\)/)},{begin:d(\"m|qr\",/\\[/,/\\]/)},{\n    begin:d(\"m|qr\",/\\{/,/\\}/)}]}]},{className:\"function\",beginKeywords:\"sub\",\n    end:\"(\\\\s*\\\\(.*?\\\\))?[;{]\",excludeEnd:!0,relevance:5,contains:[e.TITLE_MODE]},{\n    begin:\"-\\\\w\\\\b\",relevance:0},{begin:\"^__DATA__$\",end:\"^__END__$\",\n    subLanguage:\"mojolicious\",contains:[{begin:\"^@@.*\",end:\"$\",className:\"comment\"}]\n    }];return i.contains=g,r.contains=g,{name:\"Perl\",aliases:[\"pl\",\"pm\"],keywords:a,\n    contains:g}},grmr_php:e=>{\n    const n=e.regex,t=/(?![A-Za-z0-9])(?![$])/,a=n.concat(/[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,t),i=n.concat(/(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,t),r={\n    scope:\"variable\",match:\"\\\\$+\"+a},s={scope:\"subst\",variants:[{begin:/\\$\\w+/},{\n    begin:/\\{\\$/,end:/\\}/}]},o=e.inherit(e.APOS_STRING_MODE,{illegal:null\n    }),l=\"[ \\t\\n]\",c={scope:\"string\",variants:[e.inherit(e.QUOTE_STRING_MODE,{\n    illegal:null,contains:e.QUOTE_STRING_MODE.contains.concat(s)\n    }),o,e.END_SAME_AS_BEGIN({begin:/<<<[ \\t]*(\\w+)\\n/,end:/[ \\t]*(\\w+)\\b/,\n    contains:e.QUOTE_STRING_MODE.contains.concat(s)})]},d={scope:\"number\",\n    variants:[{begin:\"\\\\b0[bB][01]+(?:_[01]+)*\\\\b\"},{\n    begin:\"\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b\"},{\n    begin:\"\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b\"},{\n    begin:\"(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?\"\n    }],relevance:0\n    },g=[\"false\",\"null\",\"true\"],u=[\"__CLASS__\",\"__DIR__\",\"__FILE__\",\"__FUNCTION__\",\"__COMPILER_HALT_OFFSET__\",\"__LINE__\",\"__METHOD__\",\"__NAMESPACE__\",\"__TRAIT__\",\"die\",\"echo\",\"exit\",\"include\",\"include_once\",\"print\",\"require\",\"require_once\",\"array\",\"abstract\",\"and\",\"as\",\"binary\",\"bool\",\"boolean\",\"break\",\"callable\",\"case\",\"catch\",\"class\",\"clone\",\"const\",\"continue\",\"declare\",\"default\",\"do\",\"double\",\"else\",\"elseif\",\"empty\",\"enddeclare\",\"endfor\",\"endforeach\",\"endif\",\"endswitch\",\"endwhile\",\"enum\",\"eval\",\"extends\",\"final\",\"finally\",\"float\",\"for\",\"foreach\",\"from\",\"global\",\"goto\",\"if\",\"implements\",\"instanceof\",\"insteadof\",\"int\",\"integer\",\"interface\",\"isset\",\"iterable\",\"list\",\"match|0\",\"mixed\",\"new\",\"never\",\"object\",\"or\",\"private\",\"protected\",\"public\",\"readonly\",\"real\",\"return\",\"string\",\"switch\",\"throw\",\"trait\",\"try\",\"unset\",\"use\",\"var\",\"void\",\"while\",\"xor\",\"yield\"],b=[\"Error|0\",\"AppendIterator\",\"ArgumentCountError\",\"ArithmeticError\",\"ArrayIterator\",\"ArrayObject\",\"AssertionError\",\"BadFunctionCallException\",\"BadMethodCallException\",\"CachingIterator\",\"CallbackFilterIterator\",\"CompileError\",\"Countable\",\"DirectoryIterator\",\"DivisionByZeroError\",\"DomainException\",\"EmptyIterator\",\"ErrorException\",\"Exception\",\"FilesystemIterator\",\"FilterIterator\",\"GlobIterator\",\"InfiniteIterator\",\"InvalidArgumentException\",\"IteratorIterator\",\"LengthException\",\"LimitIterator\",\"LogicException\",\"MultipleIterator\",\"NoRewindIterator\",\"OutOfBoundsException\",\"OutOfRangeException\",\"OuterIterator\",\"OverflowException\",\"ParentIterator\",\"ParseError\",\"RangeException\",\"RecursiveArrayIterator\",\"RecursiveCachingIterator\",\"RecursiveCallbackFilterIterator\",\"RecursiveDirectoryIterator\",\"RecursiveFilterIterator\",\"RecursiveIterator\",\"RecursiveIteratorIterator\",\"RecursiveRegexIterator\",\"RecursiveTreeIterator\",\"RegexIterator\",\"RuntimeException\",\"SeekableIterator\",\"SplDoublyLinkedList\",\"SplFileInfo\",\"SplFileObject\",\"SplFixedArray\",\"SplHeap\",\"SplMaxHeap\",\"SplMinHeap\",\"SplObjectStorage\",\"SplObserver\",\"SplPriorityQueue\",\"SplQueue\",\"SplStack\",\"SplSubject\",\"SplTempFileObject\",\"TypeError\",\"UnderflowException\",\"UnexpectedValueException\",\"UnhandledMatchError\",\"ArrayAccess\",\"BackedEnum\",\"Closure\",\"Fiber\",\"Generator\",\"Iterator\",\"IteratorAggregate\",\"Serializable\",\"Stringable\",\"Throwable\",\"Traversable\",\"UnitEnum\",\"WeakReference\",\"WeakMap\",\"Directory\",\"__PHP_Incomplete_Class\",\"parent\",\"php_user_filter\",\"self\",\"static\",\"stdClass\"],m={\n    keyword:u,literal:(e=>{const n=[];return e.forEach((e=>{\n    n.push(e),e.toLowerCase()===e?n.push(e.toUpperCase()):n.push(e.toLowerCase())\n    })),n})(g),built_in:b},p=e=>e.map((e=>e.replace(/\\|\\d+$/,\"\"))),_={variants:[{\n    match:[/new/,n.concat(l,\"+\"),n.concat(\"(?!\",p(b).join(\"\\\\b|\"),\"\\\\b)\"),i],scope:{\n    1:\"keyword\",4:\"title.class\"}}]},h=n.concat(a,\"\\\\b(?!\\\\()\"),f={variants:[{\n    match:[n.concat(/::/,n.lookahead(/(?!class\\b)/)),h],scope:{2:\"variable.constant\"\n    }},{match:[/::/,/class/],scope:{2:\"variable.language\"}},{\n    match:[i,n.concat(/::/,n.lookahead(/(?!class\\b)/)),h],scope:{1:\"title.class\",\n    3:\"variable.constant\"}},{match:[i,n.concat(\"::\",n.lookahead(/(?!class\\b)/))],\n    scope:{1:\"title.class\"}},{match:[i,/::/,/class/],scope:{1:\"title.class\",\n    3:\"variable.language\"}}]},E={scope:\"attr\",\n    match:n.concat(a,n.lookahead(\":\"),n.lookahead(/(?!::)/))},y={relevance:0,\n    begin:/\\(/,end:/\\)/,keywords:m,contains:[E,r,f,e.C_BLOCK_COMMENT_MODE,c,d,_]\n    },w={relevance:0,\n    match:[/\\b/,n.concat(\"(?!fn\\\\b|function\\\\b|\",p(u).join(\"\\\\b|\"),\"|\",p(b).join(\"\\\\b|\"),\"\\\\b)\"),a,n.concat(l,\"*\"),n.lookahead(/(?=\\()/)],\n    scope:{3:\"title.function.invoke\"},contains:[y]};y.contains.push(w)\n    ;const N=[E,f,e.C_BLOCK_COMMENT_MODE,c,d,_];return{case_insensitive:!1,\n    keywords:m,contains:[{begin:n.concat(/#\\[\\s*/,i),beginScope:\"meta\",end:/]/,\n    endScope:\"meta\",keywords:{literal:g,keyword:[\"new\",\"array\"]},contains:[{\n    begin:/\\[/,end:/]/,keywords:{literal:g,keyword:[\"new\",\"array\"]},\n    contains:[\"self\",...N]},...N,{scope:\"meta\",match:i}]\n    },e.HASH_COMMENT_MODE,e.COMMENT(\"//\",\"$\"),e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[{\n    scope:\"doctag\",match:\"@[A-Za-z]+\"}]}),{match:/__halt_compiler\\(\\);/,\n    keywords:\"__halt_compiler\",starts:{scope:\"comment\",end:e.MATCH_NOTHING_RE,\n    contains:[{match:/\\?>/,scope:\"meta\",endsParent:!0}]}},{scope:\"meta\",variants:[{\n    begin:/<\\?php/,relevance:10},{begin:/<\\?=/},{begin:/<\\?/,relevance:.1},{\n    begin:/\\?>/}]},{scope:\"variable.language\",match:/\\$this\\b/},r,w,f,{\n    match:[/const/,/\\s/,a],scope:{1:\"keyword\",3:\"variable.constant\"}},_,{\n    scope:\"function\",relevance:0,beginKeywords:\"fn function\",end:/[;{]/,\n    excludeEnd:!0,illegal:\"[$%\\\\[]\",contains:[{beginKeywords:\"use\"\n    },e.UNDERSCORE_TITLE_MODE,{begin:\"=>\",endsParent:!0},{scope:\"params\",\n    begin:\"\\\\(\",end:\"\\\\)\",excludeBegin:!0,excludeEnd:!0,keywords:m,\n    contains:[\"self\",r,f,e.C_BLOCK_COMMENT_MODE,c,d]}]},{scope:\"class\",variants:[{\n    beginKeywords:\"enum\",illegal:/[($\"]/},{beginKeywords:\"class interface trait\",\n    illegal:/[:($\"]/}],relevance:0,end:/\\{/,excludeEnd:!0,contains:[{\n    beginKeywords:\"extends implements\"},e.UNDERSCORE_TITLE_MODE]},{\n    beginKeywords:\"namespace\",relevance:0,end:\";\",illegal:/[.']/,\n    contains:[e.inherit(e.UNDERSCORE_TITLE_MODE,{scope:\"title.class\"})]},{\n    beginKeywords:\"use\",relevance:0,end:\";\",contains:[{\n    match:/\\b(as|const|function)\\b/,scope:\"keyword\"},e.UNDERSCORE_TITLE_MODE]},c,d]}\n    },grmr_php_template:e=>({name:\"PHP template\",subLanguage:\"xml\",contains:[{\n    begin:/<\\?(php|=)?/,end:/\\?>/,subLanguage:\"php\",contains:[{begin:\"/\\\\*\",\n    end:\"\\\\*/\",skip:!0},{begin:'b\"',end:'\"',skip:!0},{begin:\"b'\",end:\"'\",skip:!0\n    },e.inherit(e.APOS_STRING_MODE,{illegal:null,className:null,contains:null,\n    skip:!0}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null,className:null,\n    contains:null,skip:!0})]}]}),grmr_plaintext:e=>({name:\"Plain text\",\n    aliases:[\"text\",\"txt\"],disableAutodetect:!0}),grmr_python:e=>{\n    const n=e.regex,t=/[\\p{XID_Start}_]\\p{XID_Continue}*/u,a=[\"and\",\"as\",\"assert\",\"async\",\"await\",\"break\",\"case\",\"class\",\"continue\",\"def\",\"del\",\"elif\",\"else\",\"except\",\"finally\",\"for\",\"from\",\"global\",\"if\",\"import\",\"in\",\"is\",\"lambda\",\"match\",\"nonlocal|10\",\"not\",\"or\",\"pass\",\"raise\",\"return\",\"try\",\"while\",\"with\",\"yield\"],i={\n    $pattern:/[A-Za-z]\\w+|__\\w+__/,keyword:a,\n    built_in:[\"__import__\",\"abs\",\"all\",\"any\",\"ascii\",\"bin\",\"bool\",\"breakpoint\",\"bytearray\",\"bytes\",\"callable\",\"chr\",\"classmethod\",\"compile\",\"complex\",\"delattr\",\"dict\",\"dir\",\"divmod\",\"enumerate\",\"eval\",\"exec\",\"filter\",\"float\",\"format\",\"frozenset\",\"getattr\",\"globals\",\"hasattr\",\"hash\",\"help\",\"hex\",\"id\",\"input\",\"int\",\"isinstance\",\"issubclass\",\"iter\",\"len\",\"list\",\"locals\",\"map\",\"max\",\"memoryview\",\"min\",\"next\",\"object\",\"oct\",\"open\",\"ord\",\"pow\",\"print\",\"property\",\"range\",\"repr\",\"reversed\",\"round\",\"set\",\"setattr\",\"slice\",\"sorted\",\"staticmethod\",\"str\",\"sum\",\"super\",\"tuple\",\"type\",\"vars\",\"zip\"],\n    literal:[\"__debug__\",\"Ellipsis\",\"False\",\"None\",\"NotImplemented\",\"True\"],\n    type:[\"Any\",\"Callable\",\"Coroutine\",\"Dict\",\"List\",\"Literal\",\"Generic\",\"Optional\",\"Sequence\",\"Set\",\"Tuple\",\"Type\",\"Union\"]\n    },r={className:\"meta\",begin:/^(>>>|\\.\\.\\.) /},s={className:\"subst\",begin:/\\{/,\n    end:/\\}/,keywords:i,illegal:/#/},o={begin:/\\{\\{/,relevance:0},l={\n    className:\"string\",contains:[e.BACKSLASH_ESCAPE],variants:[{\n    begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,\n    contains:[e.BACKSLASH_ESCAPE,r],relevance:10},{\n    begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,end:/\"\"\"/,\n    contains:[e.BACKSLASH_ESCAPE,r],relevance:10},{\n    begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,\n    contains:[e.BACKSLASH_ESCAPE,r,o,s]},{begin:/([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n    end:/\"\"\"/,contains:[e.BACKSLASH_ESCAPE,r,o,s]},{begin:/([uU]|[rR])'/,end:/'/,\n    relevance:10},{begin:/([uU]|[rR])\"/,end:/\"/,relevance:10},{\n    begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])\"/,\n    end:/\"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,\n    contains:[e.BACKSLASH_ESCAPE,o,s]},{begin:/([fF][rR]|[rR][fF]|[fF])\"/,end:/\"/,\n    contains:[e.BACKSLASH_ESCAPE,o,s]},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]\n    },c=\"[0-9](_?[0-9])*\",d=`(\\\\b(${c}))?\\\\.(${c})|\\\\b(${c})\\\\.`,g=\"\\\\b|\"+a.join(\"|\"),u={\n    className:\"number\",relevance:0,variants:[{\n    begin:`(\\\\b(${c})|(${d}))[eE][+-]?(${c})[jJ]?(?=${g})`},{begin:`(${d})[jJ]?`},{\n    begin:`\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${g})`},{\n    begin:`\\\\b0[bB](_?[01])+[lL]?(?=${g})`},{begin:`\\\\b0[oO](_?[0-7])+[lL]?(?=${g})`\n    },{begin:`\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${g})`},{begin:`\\\\b(${c})[jJ](?=${g})`\n    }]},b={className:\"comment\",begin:n.lookahead(/# type:/),end:/$/,keywords:i,\n    contains:[{begin:/# type:/},{begin:/#/,end:/\\b\\B/,endsWithParent:!0}]},m={\n    className:\"params\",variants:[{className:\"\",begin:/\\(\\s*\\)/,skip:!0},{begin:/\\(/,\n    end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:i,\n    contains:[\"self\",r,u,l,e.HASH_COMMENT_MODE]}]};return s.contains=[l,u,r],{\n    name:\"Python\",aliases:[\"py\",\"gyp\",\"ipython\"],unicodeRegex:!0,keywords:i,\n    illegal:/(<\\/|->|\\?)|=>/,contains:[r,u,{begin:/\\bself\\b/},{beginKeywords:\"if\",\n    relevance:0},l,b,e.HASH_COMMENT_MODE,{match:[/\\bdef/,/\\s+/,t],scope:{\n    1:\"keyword\",3:\"title.function\"},contains:[m]},{variants:[{\n    match:[/\\bclass/,/\\s+/,t,/\\s*/,/\\(\\s*/,t,/\\s*\\)/]},{match:[/\\bclass/,/\\s+/,t]}],\n    scope:{1:\"keyword\",3:\"title.class\",6:\"title.class.inherited\"}},{\n    className:\"meta\",begin:/^[\\t ]*@/,end:/(?=#)|$/,contains:[u,m,l]}]}},\n    grmr_python_repl:e=>({aliases:[\"pycon\"],contains:[{className:\"meta.prompt\",\n    starts:{end:/ |$/,starts:{end:\"$\",subLanguage:\"python\"}},variants:[{\n    begin:/^>>>(?=[ ]|$)/},{begin:/^\\.\\.\\.(?=[ ]|$)/}]}]}),grmr_r:e=>{\n    const n=e.regex,t=/(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/,a=n.either(/0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,/0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/,/(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/),i=/[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/,r=n.either(/[()]/,/[{}]/,/\\[\\[/,/[[\\]]/,/\\\\/,/,/)\n    ;return{name:\"R\",keywords:{$pattern:t,\n    keyword:\"function if in break next repeat else for while\",\n    literal:\"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10\",\n    built_in:\"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm\"\n    },contains:[e.COMMENT(/#'/,/$/,{contains:[{scope:\"doctag\",match:/@examples/,\n    starts:{end:n.lookahead(n.either(/\\n^#'\\s*(?=@[a-zA-Z]+)/,/\\n^(?!#')/)),\n    endsParent:!0}},{scope:\"doctag\",begin:\"@param\",end:/$/,contains:[{\n    scope:\"variable\",variants:[{match:t},{match:/`(?:\\\\.|[^`\\\\])+`/}],endsParent:!0\n    }]},{scope:\"doctag\",match:/@[a-zA-Z]+/},{scope:\"keyword\",match:/\\\\[a-zA-Z]+/}]\n    }),e.HASH_COMMENT_MODE,{scope:\"string\",contains:[e.BACKSLASH_ESCAPE],\n    variants:[e.END_SAME_AS_BEGIN({begin:/[rR]\"(-*)\\(/,end:/\\)(-*)\"/\n    }),e.END_SAME_AS_BEGIN({begin:/[rR]\"(-*)\\{/,end:/\\}(-*)\"/\n    }),e.END_SAME_AS_BEGIN({begin:/[rR]\"(-*)\\[/,end:/\\](-*)\"/\n    }),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\\(/,end:/\\)(-*)'/\n    }),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\\{/,end:/\\}(-*)'/\n    }),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\\[/,end:/\\](-*)'/}),{begin:'\"',end:'\"',\n    relevance:0},{begin:\"'\",end:\"'\",relevance:0}]},{relevance:0,variants:[{scope:{\n    1:\"operator\",2:\"number\"},match:[i,a]},{scope:{1:\"operator\",2:\"number\"},\n    match:[/%[^%]*%/,a]},{scope:{1:\"punctuation\",2:\"number\"},match:[r,a]},{scope:{\n    2:\"number\"},match:[/[^a-zA-Z0-9._]|^/,a]}]},{scope:{3:\"operator\"},\n    match:[t,/\\s+/,/<-/,/\\s+/]},{scope:\"operator\",relevance:0,variants:[{match:i},{\n    match:/%[^%]*%/}]},{scope:\"punctuation\",relevance:0,match:r},{begin:\"`\",end:\"`\",\n    contains:[{begin:/\\\\./}]}]}},grmr_ruby:e=>{\n    const n=e.regex,t=\"([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)\",a=n.either(/\\b([A-Z]+[a-z0-9]+)+/,/\\b([A-Z]+[a-z0-9]+)+[A-Z]+/),i=n.concat(a,/(::\\w+)*/),r={\n    \"variable.constant\":[\"__FILE__\",\"__LINE__\",\"__ENCODING__\"],\n    \"variable.language\":[\"self\",\"super\"],\n    keyword:[\"alias\",\"and\",\"begin\",\"BEGIN\",\"break\",\"case\",\"class\",\"defined\",\"do\",\"else\",\"elsif\",\"end\",\"END\",\"ensure\",\"for\",\"if\",\"in\",\"module\",\"next\",\"not\",\"or\",\"redo\",\"require\",\"rescue\",\"retry\",\"return\",\"then\",\"undef\",\"unless\",\"until\",\"when\",\"while\",\"yield\",\"include\",\"extend\",\"prepend\",\"public\",\"private\",\"protected\",\"raise\",\"throw\"],\n    built_in:[\"proc\",\"lambda\",\"attr_accessor\",\"attr_reader\",\"attr_writer\",\"define_method\",\"private_constant\",\"module_function\"],\n    literal:[\"true\",\"false\",\"nil\"]},s={className:\"doctag\",begin:\"@[A-Za-z]+\"},o={\n    begin:\"#<\",end:\">\"},l=[e.COMMENT(\"#\",\"$\",{contains:[s]\n    }),e.COMMENT(\"^=begin\",\"^=end\",{contains:[s],relevance:10\n    }),e.COMMENT(\"^__END__\",e.MATCH_NOTHING_RE)],c={className:\"subst\",begin:/#\\{/,\n    end:/\\}/,keywords:r},d={className:\"string\",contains:[e.BACKSLASH_ESCAPE,c],\n    variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/`/,end:/`/},{\n    begin:/%[qQwWx]?\\(/,end:/\\)/},{begin:/%[qQwWx]?\\[/,end:/\\]/},{\n    begin:/%[qQwWx]?\\{/,end:/\\}/},{begin:/%[qQwWx]?</,end:/>/},{begin:/%[qQwWx]?\\//,\n    end:/\\//},{begin:/%[qQwWx]?%/,end:/%/},{begin:/%[qQwWx]?-/,end:/-/},{\n    begin:/%[qQwWx]?\\|/,end:/\\|/},{begin:/\\B\\?(\\\\\\d{1,3})/},{\n    begin:/\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/},{begin:/\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/},{\n    begin:/\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/},{\n    begin:/\\B\\?\\\\(c|C-)[\\x20-\\x7e]/},{begin:/\\B\\?\\\\?\\S/},{\n    begin:n.concat(/<<[-~]?'?/,n.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)),\n    contains:[e.END_SAME_AS_BEGIN({begin:/(\\w+)/,end:/(\\w+)/,\n    contains:[e.BACKSLASH_ESCAPE,c]})]}]},g=\"[0-9](_?[0-9])*\",u={className:\"number\",\n    relevance:0,variants:[{\n    begin:`\\\\b([1-9](_?[0-9])*|0)(\\\\.(${g}))?([eE][+-]?(${g})|r)?i?\\\\b`},{\n    begin:\"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"},{begin:\"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n    },{begin:\"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"},{\n    begin:\"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"},{\n    begin:\"\\\\b0(_?[0-7])+r?i?\\\\b\"}]},b={variants:[{match:/\\(\\)/},{\n    className:\"params\",begin:/\\(/,end:/(?=\\))/,excludeBegin:!0,endsParent:!0,\n    keywords:r}]},m=[d,{variants:[{match:[/class\\s+/,i,/\\s+<\\s+/,i]},{\n    match:[/\\b(class|module)\\s+/,i]}],scope:{2:\"title.class\",\n    4:\"title.class.inherited\"},keywords:r},{match:[/(include|extend)\\s+/,i],scope:{\n    2:\"title.class\"},keywords:r},{relevance:0,match:[i,/\\.new[. (]/],scope:{\n    1:\"title.class\"}},{relevance:0,match:/\\b[A-Z][A-Z_0-9]+\\b/,\n    className:\"variable.constant\"},{relevance:0,match:a,scope:\"title.class\"},{\n    match:[/def/,/\\s+/,t],scope:{1:\"keyword\",3:\"title.function\"},contains:[b]},{\n    begin:e.IDENT_RE+\"::\"},{className:\"symbol\",\n    begin:e.UNDERSCORE_IDENT_RE+\"(!|\\\\?)?:\",relevance:0},{className:\"symbol\",\n    begin:\":(?!\\\\s)\",contains:[d,{begin:t}],relevance:0},u,{className:\"variable\",\n    begin:\"(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])\"},{\n    className:\"params\",begin:/\\|/,end:/\\|/,excludeBegin:!0,excludeEnd:!0,\n    relevance:0,keywords:r},{begin:\"(\"+e.RE_STARTERS_RE+\"|unless)\\\\s*\",\n    keywords:\"unless\",contains:[{className:\"regexp\",contains:[e.BACKSLASH_ESCAPE,c],\n    illegal:/\\n/,variants:[{begin:\"/\",end:\"/[a-z]*\"},{begin:/%r\\{/,end:/\\}[a-z]*/},{\n    begin:\"%r\\\\(\",end:\"\\\\)[a-z]*\"},{begin:\"%r!\",end:\"![a-z]*\"},{begin:\"%r\\\\[\",\n    end:\"\\\\][a-z]*\"}]}].concat(o,l),relevance:0}].concat(o,l)\n    ;c.contains=m,b.contains=m;const p=[{begin:/^\\s*=>/,starts:{end:\"$\",contains:m}\n    },{className:\"meta.prompt\",\n    begin:\"^([>?]>|[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]|(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>)(?=[ ])\",\n    starts:{end:\"$\",keywords:r,contains:m}}];return l.unshift(o),{name:\"Ruby\",\n    aliases:[\"rb\",\"gemspec\",\"podspec\",\"thor\",\"irb\"],keywords:r,illegal:/\\/\\*/,\n    contains:[e.SHEBANG({binary:\"ruby\"})].concat(p).concat(l).concat(m)}},\n    grmr_rust:e=>{const n=e.regex,t={className:\"title.function.invoke\",relevance:0,\n    begin:n.concat(/\\b/,/(?!let\\b)/,e.IDENT_RE,n.lookahead(/\\s*\\(/))\n    },a=\"([ui](8|16|32|64|128|size)|f(32|64))?\",i=[\"drop \",\"Copy\",\"Send\",\"Sized\",\"Sync\",\"Drop\",\"Fn\",\"FnMut\",\"FnOnce\",\"ToOwned\",\"Clone\",\"Debug\",\"PartialEq\",\"PartialOrd\",\"Eq\",\"Ord\",\"AsRef\",\"AsMut\",\"Into\",\"From\",\"Default\",\"Iterator\",\"Extend\",\"IntoIterator\",\"DoubleEndedIterator\",\"ExactSizeIterator\",\"SliceConcatExt\",\"ToString\",\"assert!\",\"assert_eq!\",\"bitflags!\",\"bytes!\",\"cfg!\",\"col!\",\"concat!\",\"concat_idents!\",\"debug_assert!\",\"debug_assert_eq!\",\"env!\",\"panic!\",\"file!\",\"format!\",\"format_args!\",\"include_bytes!\",\"include_str!\",\"line!\",\"local_data_key!\",\"module_path!\",\"option_env!\",\"print!\",\"println!\",\"select!\",\"stringify!\",\"try!\",\"unimplemented!\",\"unreachable!\",\"vec!\",\"write!\",\"writeln!\",\"macro_rules!\",\"assert_ne!\",\"debug_assert_ne!\"],r=[\"i8\",\"i16\",\"i32\",\"i64\",\"i128\",\"isize\",\"u8\",\"u16\",\"u32\",\"u64\",\"u128\",\"usize\",\"f32\",\"f64\",\"str\",\"char\",\"bool\",\"Box\",\"Option\",\"Result\",\"String\",\"Vec\"]\n    ;return{name:\"Rust\",aliases:[\"rs\"],keywords:{$pattern:e.IDENT_RE+\"!?\",type:r,\n    keyword:[\"abstract\",\"as\",\"async\",\"await\",\"become\",\"box\",\"break\",\"const\",\"continue\",\"crate\",\"do\",\"dyn\",\"else\",\"enum\",\"extern\",\"false\",\"final\",\"fn\",\"for\",\"if\",\"impl\",\"in\",\"let\",\"loop\",\"macro\",\"match\",\"mod\",\"move\",\"mut\",\"override\",\"priv\",\"pub\",\"ref\",\"return\",\"self\",\"Self\",\"static\",\"struct\",\"super\",\"trait\",\"true\",\"try\",\"type\",\"typeof\",\"unsafe\",\"unsized\",\"use\",\"virtual\",\"where\",\"while\",\"yield\"],\n    literal:[\"true\",\"false\",\"Some\",\"None\",\"Ok\",\"Err\"],built_in:i},illegal:\"</\",\n    contains:[e.C_LINE_COMMENT_MODE,e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[\"self\"]\n    }),e.inherit(e.QUOTE_STRING_MODE,{begin:/b?\"/,illegal:null}),{\n    className:\"string\",variants:[{begin:/b?r(#*)\"(.|\\n)*?\"\\1(?!#)/},{\n    begin:/b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/}]},{className:\"symbol\",\n    begin:/'[a-zA-Z_][a-zA-Z0-9_]*/},{className:\"number\",variants:[{\n    begin:\"\\\\b0b([01_]+)\"+a},{begin:\"\\\\b0o([0-7_]+)\"+a},{\n    begin:\"\\\\b0x([A-Fa-f0-9_]+)\"+a},{\n    begin:\"\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)\"+a}],relevance:0},{\n    begin:[/fn/,/\\s+/,e.UNDERSCORE_IDENT_RE],className:{1:\"keyword\",\n    3:\"title.function\"}},{className:\"meta\",begin:\"#!?\\\\[\",end:\"\\\\]\",contains:[{\n    className:\"string\",begin:/\"/,end:/\"/}]},{\n    begin:[/let/,/\\s+/,/(?:mut\\s+)?/,e.UNDERSCORE_IDENT_RE],className:{1:\"keyword\",\n    3:\"keyword\",4:\"variable\"}},{\n    begin:[/for/,/\\s+/,e.UNDERSCORE_IDENT_RE,/\\s+/,/in/],className:{1:\"keyword\",\n    3:\"variable\",5:\"keyword\"}},{begin:[/type/,/\\s+/,e.UNDERSCORE_IDENT_RE],\n    className:{1:\"keyword\",3:\"title.class\"}},{\n    begin:[/(?:trait|enum|struct|union|impl|for)/,/\\s+/,e.UNDERSCORE_IDENT_RE],\n    className:{1:\"keyword\",3:\"title.class\"}},{begin:e.IDENT_RE+\"::\",keywords:{\n    keyword:\"Self\",built_in:i,type:r}},{className:\"punctuation\",begin:\"->\"},t]}},\n    grmr_scss:e=>{const n=te(e),t=se,a=re,i=\"@[a-z-]+\",r={className:\"variable\",\n    begin:\"(\\\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\\\b\",relevance:0};return{name:\"SCSS\",\n    case_insensitive:!0,illegal:\"[=/|']\",\n    contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n.CSS_NUMBER_MODE,{\n    className:\"selector-id\",begin:\"#[A-Za-z0-9_-]+\",relevance:0},{\n    className:\"selector-class\",begin:\"\\\\.[A-Za-z0-9_-]+\",relevance:0\n    },n.ATTRIBUTE_SELECTOR_MODE,{className:\"selector-tag\",\n    begin:\"\\\\b(\"+ae.join(\"|\")+\")\\\\b\",relevance:0},{className:\"selector-pseudo\",\n    begin:\":(\"+a.join(\"|\")+\")\"},{className:\"selector-pseudo\",\n    begin:\":(:)?(\"+t.join(\"|\")+\")\"},r,{begin:/\\(/,end:/\\)/,\n    contains:[n.CSS_NUMBER_MODE]},n.CSS_VARIABLE,{className:\"attribute\",\n    begin:\"\\\\b(\"+oe.join(\"|\")+\")\\\\b\"},{\n    begin:\"\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b\"\n    },{begin:/:/,end:/[;}{]/,relevance:0,\n    contains:[n.BLOCK_COMMENT,r,n.HEXCOLOR,n.CSS_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,n.IMPORTANT,n.FUNCTION_DISPATCH]\n    },{begin:\"@(page|font-face)\",keywords:{$pattern:i,keyword:\"@page @font-face\"}},{\n    begin:\"@\",end:\"[{;]\",returnBegin:!0,keywords:{$pattern:/[a-z-]+/,\n    keyword:\"and or not only\",attribute:ie.join(\" \")},contains:[{begin:i,\n    className:\"keyword\"},{begin:/[a-z-]+(?=:)/,className:\"attribute\"\n    },r,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,n.HEXCOLOR,n.CSS_NUMBER_MODE]\n    },n.FUNCTION_DISPATCH]}},grmr_shell:e=>({name:\"Shell Session\",\n    aliases:[\"console\",\"shellsession\"],contains:[{className:\"meta.prompt\",\n    begin:/^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,starts:{end:/[^\\\\](?=\\s*$)/,\n    subLanguage:\"bash\"}}]}),grmr_sql:e=>{\n    const n=e.regex,t=e.COMMENT(\"--\",\"$\"),a=[\"true\",\"false\",\"unknown\"],i=[\"bigint\",\"binary\",\"blob\",\"boolean\",\"char\",\"character\",\"clob\",\"date\",\"dec\",\"decfloat\",\"decimal\",\"float\",\"int\",\"integer\",\"interval\",\"nchar\",\"nclob\",\"national\",\"numeric\",\"real\",\"row\",\"smallint\",\"time\",\"timestamp\",\"varchar\",\"varying\",\"varbinary\"],r=[\"abs\",\"acos\",\"array_agg\",\"asin\",\"atan\",\"avg\",\"cast\",\"ceil\",\"ceiling\",\"coalesce\",\"corr\",\"cos\",\"cosh\",\"count\",\"covar_pop\",\"covar_samp\",\"cume_dist\",\"dense_rank\",\"deref\",\"element\",\"exp\",\"extract\",\"first_value\",\"floor\",\"json_array\",\"json_arrayagg\",\"json_exists\",\"json_object\",\"json_objectagg\",\"json_query\",\"json_table\",\"json_table_primitive\",\"json_value\",\"lag\",\"last_value\",\"lead\",\"listagg\",\"ln\",\"log\",\"log10\",\"lower\",\"max\",\"min\",\"mod\",\"nth_value\",\"ntile\",\"nullif\",\"percent_rank\",\"percentile_cont\",\"percentile_disc\",\"position\",\"position_regex\",\"power\",\"rank\",\"regr_avgx\",\"regr_avgy\",\"regr_count\",\"regr_intercept\",\"regr_r2\",\"regr_slope\",\"regr_sxx\",\"regr_sxy\",\"regr_syy\",\"row_number\",\"sin\",\"sinh\",\"sqrt\",\"stddev_pop\",\"stddev_samp\",\"substring\",\"substring_regex\",\"sum\",\"tan\",\"tanh\",\"translate\",\"translate_regex\",\"treat\",\"trim\",\"trim_array\",\"unnest\",\"upper\",\"value_of\",\"var_pop\",\"var_samp\",\"width_bucket\"],s=[\"create table\",\"insert into\",\"primary key\",\"foreign key\",\"not null\",\"alter table\",\"add constraint\",\"grouping sets\",\"on overflow\",\"character set\",\"respect nulls\",\"ignore nulls\",\"nulls first\",\"nulls last\",\"depth first\",\"breadth first\"],o=r,l=[\"abs\",\"acos\",\"all\",\"allocate\",\"alter\",\"and\",\"any\",\"are\",\"array\",\"array_agg\",\"array_max_cardinality\",\"as\",\"asensitive\",\"asin\",\"asymmetric\",\"at\",\"atan\",\"atomic\",\"authorization\",\"avg\",\"begin\",\"begin_frame\",\"begin_partition\",\"between\",\"bigint\",\"binary\",\"blob\",\"boolean\",\"both\",\"by\",\"call\",\"called\",\"cardinality\",\"cascaded\",\"case\",\"cast\",\"ceil\",\"ceiling\",\"char\",\"char_length\",\"character\",\"character_length\",\"check\",\"classifier\",\"clob\",\"close\",\"coalesce\",\"collate\",\"collect\",\"column\",\"commit\",\"condition\",\"connect\",\"constraint\",\"contains\",\"convert\",\"copy\",\"corr\",\"corresponding\",\"cos\",\"cosh\",\"count\",\"covar_pop\",\"covar_samp\",\"create\",\"cross\",\"cube\",\"cume_dist\",\"current\",\"current_catalog\",\"current_date\",\"current_default_transform_group\",\"current_path\",\"current_role\",\"current_row\",\"current_schema\",\"current_time\",\"current_timestamp\",\"current_path\",\"current_role\",\"current_transform_group_for_type\",\"current_user\",\"cursor\",\"cycle\",\"date\",\"day\",\"deallocate\",\"dec\",\"decimal\",\"decfloat\",\"declare\",\"default\",\"define\",\"delete\",\"dense_rank\",\"deref\",\"describe\",\"deterministic\",\"disconnect\",\"distinct\",\"double\",\"drop\",\"dynamic\",\"each\",\"element\",\"else\",\"empty\",\"end\",\"end_frame\",\"end_partition\",\"end-exec\",\"equals\",\"escape\",\"every\",\"except\",\"exec\",\"execute\",\"exists\",\"exp\",\"external\",\"extract\",\"false\",\"fetch\",\"filter\",\"first_value\",\"float\",\"floor\",\"for\",\"foreign\",\"frame_row\",\"free\",\"from\",\"full\",\"function\",\"fusion\",\"get\",\"global\",\"grant\",\"group\",\"grouping\",\"groups\",\"having\",\"hold\",\"hour\",\"identity\",\"in\",\"indicator\",\"initial\",\"inner\",\"inout\",\"insensitive\",\"insert\",\"int\",\"integer\",\"intersect\",\"intersection\",\"interval\",\"into\",\"is\",\"join\",\"json_array\",\"json_arrayagg\",\"json_exists\",\"json_object\",\"json_objectagg\",\"json_query\",\"json_table\",\"json_table_primitive\",\"json_value\",\"lag\",\"language\",\"large\",\"last_value\",\"lateral\",\"lead\",\"leading\",\"left\",\"like\",\"like_regex\",\"listagg\",\"ln\",\"local\",\"localtime\",\"localtimestamp\",\"log\",\"log10\",\"lower\",\"match\",\"match_number\",\"match_recognize\",\"matches\",\"max\",\"member\",\"merge\",\"method\",\"min\",\"minute\",\"mod\",\"modifies\",\"module\",\"month\",\"multiset\",\"national\",\"natural\",\"nchar\",\"nclob\",\"new\",\"no\",\"none\",\"normalize\",\"not\",\"nth_value\",\"ntile\",\"null\",\"nullif\",\"numeric\",\"octet_length\",\"occurrences_regex\",\"of\",\"offset\",\"old\",\"omit\",\"on\",\"one\",\"only\",\"open\",\"or\",\"order\",\"out\",\"outer\",\"over\",\"overlaps\",\"overlay\",\"parameter\",\"partition\",\"pattern\",\"per\",\"percent\",\"percent_rank\",\"percentile_cont\",\"percentile_disc\",\"period\",\"portion\",\"position\",\"position_regex\",\"power\",\"precedes\",\"precision\",\"prepare\",\"primary\",\"procedure\",\"ptf\",\"range\",\"rank\",\"reads\",\"real\",\"recursive\",\"ref\",\"references\",\"referencing\",\"regr_avgx\",\"regr_avgy\",\"regr_count\",\"regr_intercept\",\"regr_r2\",\"regr_slope\",\"regr_sxx\",\"regr_sxy\",\"regr_syy\",\"release\",\"result\",\"return\",\"returns\",\"revoke\",\"right\",\"rollback\",\"rollup\",\"row\",\"row_number\",\"rows\",\"running\",\"savepoint\",\"scope\",\"scroll\",\"search\",\"second\",\"seek\",\"select\",\"sensitive\",\"session_user\",\"set\",\"show\",\"similar\",\"sin\",\"sinh\",\"skip\",\"smallint\",\"some\",\"specific\",\"specifictype\",\"sql\",\"sqlexception\",\"sqlstate\",\"sqlwarning\",\"sqrt\",\"start\",\"static\",\"stddev_pop\",\"stddev_samp\",\"submultiset\",\"subset\",\"substring\",\"substring_regex\",\"succeeds\",\"sum\",\"symmetric\",\"system\",\"system_time\",\"system_user\",\"table\",\"tablesample\",\"tan\",\"tanh\",\"then\",\"time\",\"timestamp\",\"timezone_hour\",\"timezone_minute\",\"to\",\"trailing\",\"translate\",\"translate_regex\",\"translation\",\"treat\",\"trigger\",\"trim\",\"trim_array\",\"true\",\"truncate\",\"uescape\",\"union\",\"unique\",\"unknown\",\"unnest\",\"update\",\"upper\",\"user\",\"using\",\"value\",\"values\",\"value_of\",\"var_pop\",\"var_samp\",\"varbinary\",\"varchar\",\"varying\",\"versioning\",\"when\",\"whenever\",\"where\",\"width_bucket\",\"window\",\"with\",\"within\",\"without\",\"year\",\"add\",\"asc\",\"collation\",\"desc\",\"final\",\"first\",\"last\",\"view\"].filter((e=>!r.includes(e))),c={\n    begin:n.concat(/\\b/,n.either(...o),/\\s*\\(/),relevance:0,keywords:{built_in:o}}\n    ;return{name:\"SQL\",case_insensitive:!0,illegal:/[{}]|<\\//,keywords:{\n    $pattern:/\\b[\\w\\.]+/,keyword:((e,{exceptions:n,when:t}={})=>{const a=t\n    ;return n=n||[],e.map((e=>e.match(/\\|\\d+$/)||n.includes(e)?e:a(e)?e+\"|0\":e))\n    })(l,{when:e=>e.length<3}),literal:a,type:i,\n    built_in:[\"current_catalog\",\"current_date\",\"current_default_transform_group\",\"current_path\",\"current_role\",\"current_schema\",\"current_transform_group_for_type\",\"current_user\",\"session_user\",\"system_time\",\"system_user\",\"current_time\",\"localtime\",\"current_timestamp\",\"localtimestamp\"]\n    },contains:[{begin:n.either(...s),relevance:0,keywords:{$pattern:/[\\w\\.]+/,\n    keyword:l.concat(s),literal:a,type:i}},{className:\"type\",\n    begin:n.either(\"double precision\",\"large object\",\"with timezone\",\"without timezone\")\n    },c,{className:\"variable\",begin:/@[a-z0-9]+/},{className:\"string\",variants:[{\n    begin:/'/,end:/'/,contains:[{begin:/''/}]}]},{begin:/\"/,end:/\"/,contains:[{\n    begin:/\"\"/}]},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,{className:\"operator\",\n    begin:/[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0}]}},\n    grmr_swift:e=>{const n={match:/\\s+/,relevance:0},t=e.COMMENT(\"/\\\\*\",\"\\\\*/\",{\n    contains:[\"self\"]}),a=[e.C_LINE_COMMENT_MODE,t],i={match:[/\\./,p(...ve,...Oe)],\n    className:{2:\"keyword\"}},r={match:m(/\\./,p(...xe)),relevance:0\n    },s=xe.filter((e=>\"string\"==typeof e)).concat([\"_|0\"]),o={variants:[{\n    className:\"keyword\",\n    match:p(...xe.filter((e=>\"string\"!=typeof e)).concat(ke).map(Ne),...Oe)}]},l={\n    $pattern:p(/\\b\\w+/,/#\\w+/),keyword:s.concat(Ae),literal:Me},c=[i,r,o],d=[{\n    match:m(/\\./,p(...Ce)),relevance:0},{className:\"built_in\",\n    match:m(/\\b/,p(...Ce),/(?=\\()/)}],u={match:/->/,relevance:0},b=[u,{\n    className:\"operator\",relevance:0,variants:[{match:De},{match:`\\\\.(\\\\.|${Re})+`}]\n    }],_=\"([0-9a-fA-F]_*)+\",h={className:\"number\",relevance:0,variants:[{\n    match:\"\\\\b(([0-9]_*)+)(\\\\.(([0-9]_*)+))?([eE][+-]?(([0-9]_*)+))?\\\\b\"},{\n    match:`\\\\b0x(${_})(\\\\.(${_}))?([pP][+-]?(([0-9]_*)+))?\\\\b`},{\n    match:/\\b0o([0-7]_*)+\\b/},{match:/\\b0b([01]_*)+\\b/}]},f=(e=\"\")=>({\n    className:\"subst\",variants:[{match:m(/\\\\/,e,/[0\\\\tnr\"']/)},{\n    match:m(/\\\\/,e,/u\\{[0-9a-fA-F]{1,8}\\}/)}]}),E=(e=\"\")=>({className:\"subst\",\n    match:m(/\\\\/,e,/[\\t ]*(?:[\\r\\n]|\\r\\n)/)}),y=(e=\"\")=>({className:\"subst\",\n    label:\"interpol\",begin:m(/\\\\/,e,/\\(/),end:/\\)/}),w=(e=\"\")=>({begin:m(e,/\"\"\"/),\n    end:m(/\"\"\"/,e),contains:[f(e),E(e),y(e)]}),N=(e=\"\")=>({begin:m(e,/\"/),\n    end:m(/\"/,e),contains:[f(e),y(e)]}),v={className:\"string\",\n    variants:[w(),w(\"#\"),w(\"##\"),w(\"###\"),N(),N(\"#\"),N(\"##\"),N(\"###\")]},O={\n    match:m(/`/,Be,/`/)},k=[O,{className:\"variable\",match:/\\$\\d+/},{\n    className:\"variable\",match:`\\\\$${Le}+`}],x=[{match:/(@|#(un)?)available/,\n    className:\"keyword\",starts:{contains:[{begin:/\\(/,end:/\\)/,keywords:Fe,\n    contains:[...b,h,v]}]}},{className:\"keyword\",match:m(/@/,p(...ze))},{\n    className:\"meta\",match:m(/@/,Be)}],M={match:g(/\\b[A-Z]/),relevance:0,contains:[{\n    className:\"type\",\n    match:m(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/,Le,\"+\")\n    },{className:\"type\",match:$e,relevance:0},{match:/[?!]+/,relevance:0},{\n    match:/\\.\\.\\./,relevance:0},{match:m(/\\s+&\\s+/,g($e)),relevance:0}]},S={\n    begin:/</,end:/>/,keywords:l,contains:[...a,...c,...x,u,M]};M.contains.push(S)\n    ;const A={begin:/\\(/,end:/\\)/,relevance:0,keywords:l,contains:[\"self\",{\n    match:m(Be,/\\s*:/),keywords:\"_|0\",relevance:0\n    },...a,...c,...d,...b,h,v,...k,...x,M]},C={begin:/</,end:/>/,contains:[...a,M]\n    },T={begin:/\\(/,end:/\\)/,keywords:l,contains:[{\n    begin:p(g(m(Be,/\\s*:/)),g(m(Be,/\\s+/,Be,/\\s*:/))),end:/:/,relevance:0,\n    contains:[{className:\"keyword\",match:/\\b_\\b/},{className:\"params\",match:Be}]\n    },...a,...c,...b,h,v,...x,M,A],endsParent:!0,illegal:/[\"']/},R={\n    match:[/func/,/\\s+/,p(O.match,Be,De)],className:{1:\"keyword\",3:\"title.function\"\n    },contains:[C,T,n],illegal:[/\\[/,/%/]},D={\n    match:[/\\b(?:subscript|init[?!]?)/,/\\s*(?=[<(])/],className:{1:\"keyword\"},\n    contains:[C,T,n],illegal:/\\[|%/},I={match:[/operator/,/\\s+/,De],className:{\n    1:\"keyword\",3:\"title\"}},L={begin:[/precedencegroup/,/\\s+/,$e],className:{\n    1:\"keyword\",3:\"title\"},contains:[M],keywords:[...Se,...Me],end:/}/}\n    ;for(const e of v.variants){const n=e.contains.find((e=>\"interpol\"===e.label))\n    ;n.keywords=l;const t=[...c,...d,...b,h,v,...k];n.contains=[...t,{begin:/\\(/,\n    end:/\\)/,contains:[\"self\",...t]}]}return{name:\"Swift\",keywords:l,\n    contains:[...a,R,D,{beginKeywords:\"struct protocol class extension enum actor\",\n    end:\"\\\\{\",excludeEnd:!0,keywords:l,contains:[e.inherit(e.TITLE_MODE,{\n    className:\"title.class\",begin:/[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/}),...c]\n    },I,L,{beginKeywords:\"import\",end:/$/,contains:[...a],relevance:0\n    },...c,...d,...b,h,v,...k,...x,M,A]}},grmr_typescript:e=>{\n    const n=we(e),t=[\"any\",\"void\",\"number\",\"boolean\",\"string\",\"object\",\"never\",\"symbol\",\"bigint\",\"unknown\"],a={\n    beginKeywords:\"namespace\",end:/\\{/,excludeEnd:!0,\n    contains:[n.exports.CLASS_REFERENCE]},i={beginKeywords:\"interface\",end:/\\{/,\n    excludeEnd:!0,keywords:{keyword:\"interface extends\",built_in:t},\n    contains:[n.exports.CLASS_REFERENCE]},r={$pattern:be,\n    keyword:me.concat([\"type\",\"namespace\",\"interface\",\"public\",\"private\",\"protected\",\"implements\",\"declare\",\"abstract\",\"readonly\",\"enum\",\"override\"]),\n    literal:pe,built_in:ye.concat(t),\"variable.language\":Ee},s={className:\"meta\",\n    begin:\"@[A-Za-z$_][0-9A-Za-z$_]*\"},o=(e,n,t)=>{\n    const a=e.contains.findIndex((e=>e.label===n))\n    ;if(-1===a)throw Error(\"can not find mode to replace\");e.contains.splice(a,1,t)}\n    ;return Object.assign(n.keywords,r),\n    n.exports.PARAMS_CONTAINS.push(s),n.contains=n.contains.concat([s,a,i]),\n    o(n,\"shebang\",e.SHEBANG()),o(n,\"use_strict\",{className:\"meta\",relevance:10,\n    begin:/^\\s*['\"]use strict['\"]/\n    }),n.contains.find((e=>\"func.def\"===e.label)).relevance=0,Object.assign(n,{\n    name:\"TypeScript\",aliases:[\"ts\",\"tsx\"]}),n},grmr_vbnet:e=>{\n    const n=e.regex,t=/\\d{1,2}\\/\\d{1,2}\\/\\d{4}/,a=/\\d{4}-\\d{1,2}-\\d{1,2}/,i=/(\\d|1[012])(:\\d+){0,2} *(AM|PM)/,r=/\\d{1,2}(:\\d{1,2}){1,2}/,s={\n    className:\"literal\",variants:[{begin:n.concat(/# */,n.either(a,t),/ *#/)},{\n    begin:n.concat(/# */,r,/ *#/)},{begin:n.concat(/# */,i,/ *#/)},{\n    begin:n.concat(/# */,n.either(a,t),/ +/,n.either(i,r),/ *#/)}]\n    },o=e.COMMENT(/'''/,/$/,{contains:[{className:\"doctag\",begin:/<\\/?/,end:/>/}]\n    }),l=e.COMMENT(null,/$/,{variants:[{begin:/'/},{begin:/([\\t ]|^)REM(?=\\s)/}]})\n    ;return{name:\"Visual Basic .NET\",aliases:[\"vb\"],case_insensitive:!0,\n    classNameAliases:{label:\"symbol\"},keywords:{\n    keyword:\"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield\",\n    built_in:\"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort\",\n    type:\"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort\",\n    literal:\"true false nothing\"},\n    illegal:\"//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ \",contains:[{\n    className:\"string\",begin:/\"(\"\"|[^/n])\"C\\b/},{className:\"string\",begin:/\"/,\n    end:/\"/,illegal:/\\n/,contains:[{begin:/\"\"/}]},s,{className:\"number\",relevance:0,\n    variants:[{begin:/\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/\n    },{begin:/\\b\\d[\\d_]*((U?[SIL])|[%&])?/},{begin:/&H[\\dA-F_]+((U?[SIL])|[%&])?/},{\n    begin:/&O[0-7_]+((U?[SIL])|[%&])?/},{begin:/&B[01_]+((U?[SIL])|[%&])?/}]},{\n    className:\"label\",begin:/^\\w+:/},o,l,{className:\"meta\",\n    begin:/[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n    end:/$/,keywords:{\n    keyword:\"const disable else elseif enable end externalsource if region then\"},\n    contains:[l]}]}},grmr_wasm:e=>{e.regex;const n=e.COMMENT(/\\(;/,/;\\)/)\n    ;return n.contains.push(\"self\"),{name:\"WebAssembly\",keywords:{$pattern:/[\\w.]+/,\n    keyword:[\"anyfunc\",\"block\",\"br\",\"br_if\",\"br_table\",\"call\",\"call_indirect\",\"data\",\"drop\",\"elem\",\"else\",\"end\",\"export\",\"func\",\"global.get\",\"global.set\",\"local.get\",\"local.set\",\"local.tee\",\"get_global\",\"get_local\",\"global\",\"if\",\"import\",\"local\",\"loop\",\"memory\",\"memory.grow\",\"memory.size\",\"module\",\"mut\",\"nop\",\"offset\",\"param\",\"result\",\"return\",\"select\",\"set_global\",\"set_local\",\"start\",\"table\",\"tee_local\",\"then\",\"type\",\"unreachable\"]\n    },contains:[e.COMMENT(/;;/,/$/),n,{match:[/(?:offset|align)/,/\\s*/,/=/],\n    className:{1:\"keyword\",3:\"operator\"}},{className:\"variable\",begin:/\\$[\\w_]+/},{\n    match:/(\\((?!;)|\\))+/,className:\"punctuation\",relevance:0},{\n    begin:[/(?:func|call|call_indirect)/,/\\s+/,/\\$[^\\s)]+/],className:{1:\"keyword\",\n    3:\"title.function\"}},e.QUOTE_STRING_MODE,{match:/(i32|i64|f32|f64)(?!\\.)/,\n    className:\"type\"},{className:\"keyword\",\n    match:/\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n    },{className:\"number\",relevance:0,\n    match:/[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n    }]}},grmr_yaml:e=>{\n    const n=\"true false yes no null\",t=\"[\\\\w#;/?:@&=+$,.~*'()[\\\\]]+\",a={\n    className:\"string\",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/\n    },{begin:/\\S+/}],contains:[e.BACKSLASH_ESCAPE,{className:\"template-variable\",\n    variants:[{begin:/\\{\\{/,end:/\\}\\}/},{begin:/%\\{/,end:/\\}/}]}]},i=e.inherit(a,{\n    variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/[^\\s,{}[\\]]+/}]}),r={\n    end:\",\",endsWithParent:!0,excludeEnd:!0,keywords:n,relevance:0},s={begin:/\\{/,\n    end:/\\}/,contains:[r],illegal:\"\\\\n\",relevance:0},o={begin:\"\\\\[\",end:\"\\\\]\",\n    contains:[r],illegal:\"\\\\n\",relevance:0},l=[{className:\"attr\",variants:[{\n    begin:\"\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)\"},{begin:'\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)'},{\n    begin:\"'\\\\w[\\\\w :\\\\/.-]*':(?=[ \\t]|$)\"}]},{className:\"meta\",begin:\"^---\\\\s*$\",\n    relevance:10},{className:\"string\",\n    begin:\"[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"},{\n    begin:\"<%[%=-]?\",end:\"[%-]?%>\",subLanguage:\"ruby\",excludeBegin:!0,excludeEnd:!0,\n    relevance:0},{className:\"type\",begin:\"!\\\\w+!\"+t},{className:\"type\",\n    begin:\"!<\"+t+\">\"},{className:\"type\",begin:\"!\"+t},{className:\"type\",begin:\"!!\"+t\n    },{className:\"meta\",begin:\"&\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"meta\",\n    begin:\"\\\\*\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"bullet\",begin:\"-(?=[ ]|$)\",\n    relevance:0},e.HASH_COMMENT_MODE,{beginKeywords:n,keywords:{literal:n}},{\n    className:\"number\",\n    begin:\"\\\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\\\.[0-9]*)?([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\\\b\"\n    },{className:\"number\",begin:e.C_NUMBER_RE+\"\\\\b\",relevance:0},s,o,a],c=[...l]\n    ;return c.pop(),c.push(i),r.contains=c,{name:\"YAML\",case_insensitive:!0,\n    aliases:[\"yml\"],contains:l}}});const je=ne;for(const e of Object.keys(Ue)){\n    const n=e.replace(\"grmr_\",\"\").replace(\"_\",\"-\");je.registerLanguage(n,Ue[e])}\n    return je}()\n    ;\"object\"==typeof exports&&\"undefined\"!=typeof module&&(module.exports=hljs);"],"names":["hljs","e","exports","n","Map","clear","delete","set","Error","Set","add","Object","freeze","getOwnPropertyNames","forEach","t","a","isFrozen","default","constructor","data","isMatchIgnored","ignoreMatch","replace","i","create","r","scope","sublanguage","language","s","buffer","classPrefix","walk","addText","openNode","prefix","includes","split","shift","map","repeat","join","span","closeNode","value","o","children","assign","l","rootNode","stack","top","length","root","push","pop","closeAllNodes","toJSON","JSON","stringify","_walk","_collapse","every","c","options","addKeyword","addSublanguage","toHTML","finalize","d","source","g","m","u","b","p","splice","capture","_","RegExp","toString","exec","h","f","joinWith","substring","index","Number","E","y","w","N","v","O","begin","relevance","M","end","contains","excludeBegin","S","A","C","T","__proto__","MATCH_NOTHING_RE","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","SHEBANG","binary","BACKSLASH_ESCAPE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","END_SAME_AS_BEGIN","_beginMatch","R","input","D","className","I","beginKeywords","__beforeBegin","keywords","L","Array","isArray","B","match","$","z","beforeMatch","starts","keys","endsParent","F","P","K","console","error","H","log","q","Z","G","key","_emit","_multi","W","beginScope","_wrap","endScope","skip","returnBegin","excludeEnd","returnEnd","V","name","html","ee","Symbol","ne","disableAutodetect","ignoreUnescapedHTML","throwUnescapedHTML","noHighlightRe","languageDetectRe","cssSelector","languages","__emitter","test","ignoreIllegals","code","x","result","k","keywordPatternRe","lastIndex","case_insensitive","toLowerCase","startsWith","classNameAliases","subLanguage","_top","_emitter","parent","type","slice","languageName","badRule","rule","matcher","regexIndex","mode","endRe","endsWithParent","Q","unicodeRegex","matchIndexes","regexes","matchAt","position","addRule","compile","matcherRe","findIndex","rules","multiRegexes","count","getMatcher","resumingScanAtSamePosition","considerAll","compilerExtensions","isCompiled","$pattern","U","beginRe","terminatorEnd","illegalRe","concat","variants","cachedVariants","X","unshift","message","J","_illegalBy","context","resultSoFar","errorRaised","filter","sort","supersetOf","secondBest","parentNode","find","el","warn","innerHTML","textContent","classList","re","text","document","readyState","querySelectorAll","window","addEventListener","highlight","highlightAuto","highlightAll","highlightElement","highlightBlock","configure","Y","initHighlighting","initHighlightingOnLoad","registerLanguage","rawDefinition","bind","aliases","unregisterLanguage","listLanguages","getLanguage","registerAliases","autoDetection","inherit","addPlugin","block","debugMode","safeMode","versionString","regex","lookahead","either","optional","anyNumberOfTimes","te","IMPORTANT","BLOCK_COMMENT","HEXCOLOR","FUNCTION_DISPATCH","ATTRIBUTE_SELECTOR_MODE","CSS_NUMBER_MODE","CSS_VARIABLE","ae","ie","se","oe","reverse","le","ce","de","ge","be","me","pe","_e","he","fe","Ee","ye","we","isTrulyOpeningTag","after","indexOf","keyword","literal","built_in","PARAMS_CONTAINS","CLASS_REFERENCE","label","Ne","ve","Oe","ke","xe","Me","Se","Ae","Ce","Te","Re","De","Ie","Le","Be","$e","ze","Fe","Ue","grmr_bash","grmr_c","preprocessor","strings","grmr_cpp","_type_hints","_hint","grmr_csharp","grmr_css","keyframePosition","attribute","grmr_diff","grmr_go","grmr_graphql","grmr_ini","grmr_java","ue","grmr_javascript","grmr_json","grmr_kotlin","grmr_less","grmr_lua","grmr_makefile","grmr_xml","grmr_markdown","grmr_objectivec","grmr_perl","grmr_php","toUpperCase","grmr_php_template","grmr_plaintext","grmr_python","grmr_python_repl","grmr_r","grmr_ruby","grmr_rust","grmr_scss","grmr_shell","grmr_sql","exceptions","when","grmr_swift","grmr_typescript","grmr_vbnet","grmr_wasm","grmr_yaml","je","module"],"version":3,"file":"chatpage.f519350e.js.map"}