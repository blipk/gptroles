{"mappings":"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Q,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MA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QAAQC,KAAK,qBAAsBtR,GAC5B,IACR,CAED,OAAOiuE,CACR,CC5HM,IAAMC,EAAOnnC,EAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAIWonC,EAAMpnC,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGWqnC,EAAarnC,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWsnC,EAAgBtnC,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGWunC,EAASvnC,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,eAKWwnC,EAAmBxnC,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGW9hC,EAAO8hC,EAAO,CAAC,UCpRfmnC,EAAOnnC,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,SAGWonC,EAAMpnC,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,eAGWunC,EAASvnC,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,UAGWynC,EAAMznC,EAAO,CACxB,aACA,SACA,cACA,YACA,gBCrWW0nC,EAAgBjD,EAAK,6BACrBkD,GAAWlD,EAAK,yBAChBmD,GAAcnD,EAAK,iBACnBoD,GAAYpD,EAAK,8BACjBqD,GAAYrD,EAAK,kBACjBsD,GAAiBtD,EAC5B,yFAEWuD,GAAoBvD,EAAK,yBACzBwD,GAAkBxD,EAC7B,+DAEWyD,GAAezD,EAAK,WCO3B0D,GAAY,iBAAyB,oBAAXztE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","sources":["node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts","src/term.js","node_modules/dompurify/src/utils.js","node_modules/dompurify/src/tags.js","node_modules/dompurify/src/attrs.js","node_modules/dompurify/src/regexp.js","node_modules/dompurify/src/purify.js","src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityTreeRoot.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const oldEvent = this._currentLink ? this._lastMouseEvent : undefined;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n          if (oldEvent && this._element) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(oldEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { DebouncedIdleTask, IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","import { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\n\nconst $ = (params) => document.querySelector(params)\nconst $$ = (params) => document.querySelectorAll(params)\n\nconst term = new Terminal();\nconst fitAddon = new FitAddon();\nexport const globalTermEl = document.createElement(\"div\")\n\nexport function initTerm() {\n    window.term = term\n    term.loadAddon(fitAddon);\n\n    globalTermEl.setAttribute(\"id\", \"terminal\")\n    globalTermEl.setAttribute(\"style\", \"display: none;\")\n    document.body.appendChild(globalTermEl)\n    window.globalTermEl = globalTermEl\n\n\n    term.onResize(function (evt) {\n        const terminal_size = {\n            Width: evt.cols,\n            Height: evt.rows,\n        };\n        console.log(terminal_size)\n        // websocket.send(\"\\x04\" + JSON.stringify(terminal_size));\n    });\n\n    resizewatch(globalTermEl)\n\n    term.write('Hello from \\x1B[1;3;31mxterm.js\\x1B[0m $ ')\n    openTerm(globalTermEl)\n}\n\nfunction resizewatch(element) {\n    const xterm_resize_ob = new ResizeObserver(function (entries) {\n        try {\n            fitAddon && fitAddon.fit();\n        } catch (err) {\n            console.log(err);\n        }\n    });\n    xterm_resize_ob.observe(element);\n}\n\nexport function openTerm(element) {\n    term.open(element);\n    fitAddon.fit()\n}\n\nexport function placeTerm(element) {\n    // window.globalTermEl.parentNode.removeChild(window.globalTermEl)\n    // element.appendChild(element)\n    // element.insertBefore(globalTermEl, elment.firstChild)\n    if (globalTermEl.parentElement === element)\n        return\n    element.prepend(globalTermEl)\n    fitAddon.fit()\n    // term.write('Hello from \\x1B[1;3;31mxterm.js\\x1B[0m $ ')\n}","const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined';\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get noscript mXSS */\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","import { initTerm, openTerm, placeTerm, globalTermEl } from \"./term.js\"\nimport * as DOMPurify from 'dompurify';\n\nconst $ = (params) => document.querySelector(params)\nconst $$ = (params) => document.querySelectorAll(params)\nconst element = (type, attributes = [], options = null) => {\n    const el = document.createElement(type, options)\n    for (const attribute of attributes) {\n        const [attr, val] = attribute\n        el.setAttribute(attr, val)\n    }\n    return el\n}\n\nclass ChatPage {\n    constructor() {\n        this.username = \"You\"\n        this.chatLog = $(\".chat-container\")\n    }\n\n    copyText(text) {\n        const copyText = element(\"textarea\", [[\"style\", \"width:1px;border:0;opacity:0;\"]])\n        document.body.appendChild(copyText)\n        // copyText.innerHTML = text.trim()\n        copyText.value = text.trim()\n        copyText.select()\n        copyText.setSelectionRange(0, 99999)\n        // navigator.clipboard.writeText(copyText.value)\n        document.execCommand(\"copy\")\n        document.body.removeChild(copyText)\n    }\n\n    clear() {\n        this.chatLog.innerHTML = \"\"\n    }\n\n    notification(message, parent) {\n        const notification = element(\"div\", [[\"class\", \"notification\"]])\n        notification.innerText = message\n        parent.appendChild(notification)\n        setTimeout(() => {\n            notification.style.animation = \"fadeout 1s\"\n            setTimeout(() => parent.removeChild(notification), 1000)\n        }, 1500)\n    }\n\n    addMessage(username, text, time, id) {\n        const chatMessageClasses = username === this.username ? [\"chat-message-self\"] : []\n        const chatNameClasses = username === this.username ? [\"chat-message-username-self\"] : []\n        const msg = marked.parse(DOMPurify.sanitize(text.replaceAll(\"|TICK|\", \"`\").replaceAll('$|{', '${')))\n        const newMsgEl = `<div class=\"chat-message-msg\" x-msg-id=\"${id}\" x-msg-time=\"${time}\" x-msg-user=\"${username}\">${msg}</div>`\n        if (username === this.lastMessage?.username) {\n            this.lastMessage.lastMessageEl.innerHTML += newMsgEl\n            this.lastMessage.timeEl.innerHTML = time\n        } else {\n            this.chatLog.innerHTML += `<div class=\"chat-message ${chatMessageClasses}\">\n                <span class=\"chat-message-username ${chatNameClasses}\">${username}</span>\n                ${newMsgEl}\n                <span class=\"chat-message-time chat-message-time-self\">${time}</span>\n            </div>`\n        }\n        this.applyMarkdownButtons()\n        this.applyMessageButtons()\n        this.chatLog.scrollTo(0, this.chatLog.scrollHeight);\n    }\n\n    updateBlockOutput(msgid, text, blockIndex, time = (Date.now() / 1000)) {\n        const msg = $(`.chat-message-msg[x-msg-id=\"${msgid}\"]`)\n        if (!msg)\n            return\n        const block = msg.querySelectorAll(\"pre code\")[parseInt(blockIndex, 10)]\n        const blockOutput = block.querySelector(\".output-container\")\n        blockOutput.setAttribute(\"x-output-updated\", time)\n        blockOutput.textContent = text\n        blockOutput.style.display = \"block\"\n    }\n\n    updateMessage(msgid, text, blockIndex = null, time = (Date.now() / 1000)) {\n        const msg = $(`.chat-message-msg[x-msg-id=\"${msgid}\"]`)\n        if (!msg)\n            return\n        if (blockIndex !== null) {\n            const block = msg.querySelectorAll(\"pre code\")[parseInt(blockIndex, 10)]\n            block.textContent = text\n        } else {\n            msg.innerHTML = marked.parse(DOMPurify.sanitize(text))\n        }\n        msg.setAttribute(\"x-msg-updated\", time)\n    }\n\n    get lastMessage() {\n        const lastMessageEl = this.chatLog.querySelector(\".chat-message:last-child\")\n        if (!lastMessageEl)\n            return lastMessageEl\n        const usernameEl = lastMessageEl.querySelector(\".chat-message-username\")\n        const msgEl = lastMessageEl.querySelector(\".chat-message-msg:last-child\")\n        const timeEl = lastMessageEl.querySelector(\".chat-message-time\")\n        return {\n            username: usernameEl.textContent,\n            msg: msgEl?.textContent,\n            time: timeEl.textContent,\n            lastMessageEl, msgEl, timeEl\n        }\n    }\n\n    applyMessageButtons() {\n        [...$$(\".chat-message\")].forEach(el => {\n            const buttons = el.querySelector(\".message-buttons\")\n            if (buttons)\n                buttons.parentNode.removeChild(buttons)\n            const newButtons = element(\"div\", [[\"class\", \"message-buttons\"]])\n            newButtons.innerHTML = `<input type=\"button\" class=\"message-button\" value=\"⚙️\"/>`\n            el.prepend(newButtons)\n        })\n    }\n\n    applyMarkdownButtons() {\n        [...$$(\".chat-message-msg\")].forEach(chatMessageEl => {\n            [...chatMessageEl.querySelectorAll(\"pre code\")].forEach((el, i) => {\n\n                // Overlay/Terminal container\n                // const termContainer = el.querySelector(\".inline-container\") || element(\"div\", [[\"class\", \"inline-container\"]])\n                // if (termContainer.parentElement !== el)\n                //     el.prepend(newContainer)\n                //\n                // termContainer.addEventListener(\"mouseenter\", (e) => {\n                //     placeTerm(currContainer)\n                //     globalTermEl.style.display = \"block\"\n                //     termContainer.style.display = \"block\"\n                // })\n                // termContainer.addEventListener(\"mouseleave\", (e) => {\n                //     globalTermEl.style.display = \"none\"\n                //     termContainer.style.display = \"none\"\n                // })\n\n                // Run output container\n                const outputContainer = el.querySelector(\".output-container\") || element(\"div\", [[\"class\", \"output-container\"]])\n                if (outputContainer.parentElement !== el)\n                    el.appendChild(outputContainer)\n\n                // Buttons container\n                const codeButtons = el.querySelector(\".code-buttons\")\n                const msg = el.parentElement.parentElement\n                const msgId = msg.getAttribute(\"x-msg-id\")\n                el.setAttribute(\"x-block-index\", i)\n                if (codeButtons)\n                    codeButtons.parentNode.removeChild(codeButtons)\n                const lang = [...el.classList].find(c => c.includes(\"language\"))?.replace(\"language-\", \"\")\n                const newButtons = element(\"div\", [[\"class\", \"code-buttons\"]])\n                if ([\"python\", \"shell\", \"sh\", \"bash\", \"js\", \"javascript\"].includes(lang)) {\n                    newButtons.innerHTML = `<input type=\"button\" class=\"code-button play-button\" value=\"▶️\"/>`\n                    newButtons.innerHTML += `<input type=\"button\" class=\"code-button edit-button\" value=\"✏️\"/>`\n                }\n\n                newButtons.innerHTML += `<input type=\"button\" class=\"code-button save-button\" value=\"💾\"/>`\n                newButtons.innerHTML += `<input type=\"button\" class=\"code-button copy-button\" value=\"📋\"/>`\n                el.prepend(newButtons)\n                const playButton = el.querySelector(\".play-button\")\n                const editButton = el.querySelector(\".edit-button\")\n                const saveButton = el.querySelector(\".save-button\")\n                const copyButton = el.querySelector(\".copy-button\")\n                const codeText = el.textContent.replace(outputContainer.textContent, \"\")\n                copyButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    this.copyText(codeText)\n                    this.notification(\"Copied!\", copyButton.parentElement)\n                })\n                playButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    window.bridge.setData([\"run_code\", msgId, i, lang, codeText])\n                })\n                saveButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    window.bridge.setData([\"save\", msgId, i, lang, codeText])\n                    //TODO add open in editor icon after saving\n                })\n                editButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    // window.bridge.setData([\"save\", msgId, i, lang, el.textContent])\n                    //TODO edit internally or open in editor on alternate click\n                })\n            })\n        });\n    }\n}\n\nwindow.onload = function (e) {\n    marked.setOptions({\n        renderer: new marked.Renderer(),\n        highlight: function (code, lang) {\n            console.log(\"Highlighting\", lang)\n            const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n            return hljs.highlight(code, { language }).value;\n        },\n        langPrefix: 'hljs language-', // highlight.js css expects a top-level 'hljs' class.\n        pedantic: false,\n        gfm: true,\n        breaks: false,\n        sanitize: false,\n        smartypants: false,\n        xhtml: true\n    });\n    window.chatPage = new ChatPage()\n    window.chatPage.applyMessageButtons()\n    window.chatPage.applyMarkdownButtons()\n    console.log(\"ChatPage inititialised\")\n\n    // Messages to python\n    if (typeof QWebChannel !== \"undefined\") {\n        window.chatPage.clear()\n        new QWebChannel(qt.webChannelTransport, function (channel) {\n            var bridge = channel.objects.bridge;\n            window.bridge = bridge\n        });\n    }\n\n\n    // Messages from python\n    window.handlePyMessage = function (message) {\n        if (message?.cmd === \"lastMessage\") {\n            return window.chatPage.lastMessage\n        } else {\n            console.log(\"Recieved unknown message\", message)\n            window.bridge.setData(\"Javascript didn't understand your message: \" + message);\n        }\n        return null\n    }\n\n    initTerm()\n}"],"names":["self","module","s","i","r","n","o","a","h","c","AccessibilityManager","Disposable","constructor","_terminal","_renderService","super","this","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_handleResize","onRender","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","css","cell","height","style","width","canvas","t","l","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","copyHandler","selectionService","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","rightClickHandler","shouldSelectWord","rightClickSelect","select","ColorContrastCache","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","elements","parentElement","node","type","handler","options","disposed","dispose","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","oldEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","call","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","RenderDebouncer","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","d","_","u","f","g","p","S","m","C","b","w","E","L","k","R","D","A","B","T","M","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","_selectionService","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","I","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","ColorZoneStore","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","moveToCellSequence","targetX","rowDifference","currX","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_cellToRowElements","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","throwIfFalsy","isRestrictedPowerlineGlyph","SelectionModel","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","toCss","toRgba","_onChangeColors","_contrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","isProtected","block","bar","_disposables","unregister","array","_data","FourKeyMap","third","fourth","navigator","userAgent","platform","isSafari","getSafariVersion","majorVersion","isIpad","isIphone","SortedList","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","Buffer","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onDispose","_removeMarker","iterator","startOverscan","endOverscan","BufferStringIterator","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","q","Q","K","Y","Z","H","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","utf32ToString","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","UnicodeV6","version","num","ucs","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","DcsParser","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","AddonManager","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","BufferApiView","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","_alternate","alternate","ParserApi","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","UnicodeApi","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","assign","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","di$target","di$dependencies","serviceRegistry","decorator","arguments","_providers","_onChange","onChange","defaultProvider","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","unicode","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity","FitAddon","fit","dims","proposeDimensions","core","scrollbarWidth","parentElementStyle","parentElementHeight","parentElementWidth","availableHeight","availableWidth","$9fc3c15c4fcdeba2$var$term","$351cfa375e34b09c$exports","$9fc3c15c4fcdeba2$var$fitAddon","$db06bd1eb93468bc$exports","$9fc3c15c4fcdeba2$export$72b19bbfde025482","$9fc3c15c4fcdeba2$export$db5af72d46e94d2e","body","globalTermEl","evt","terminal_size","Width","Height","ResizeObserver","$9fc3c15c4fcdeba2$export$272cfec9426cb085","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","seal","_ref","Reflect","construct","fun","thisValue","Func","_toConsumableArray","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","_key","_len2","_key2","addToSet","transformCaseFunc","lcElement","object","_step","newObject","_iterator","done","_step$value","_slicedToArray","property","lookupGetter","prop","fallbackValue","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","_createTrustedTypesPolicy","trustedTypes","_typeof","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","policyName","createHTML","createScriptURL","scriptUrl","createDOMPurify","DOMPurify","root","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","_window$NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","getElementsByTagName","importNode","hooks","createHTMLDocument","PARSER_MEDIA_TYPE","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","concat","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","_removeAttribute","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","createTextNode","childNodes","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmod","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","$35da740d59af89ba$var$$","querySelector","$35da740d59af89ba$var$$$","querySelectorAll","$35da740d59af89ba$var$element","$35da740d59af89ba$var$ChatPage","username","chatLog","copyText","setSelectionRange","execCommand","notification","animation","addMessage","time","chatMessageClasses","chatNameClasses","newMsgEl","marked","$d349326c2b62c55f$exports","replaceAll","lastMessage","lastMessageEl","timeEl","applyMarkdownButtons","applyMessageButtons","scrollTo","updateBlockOutput","msgid","blockIndex","msg","blockOutput","updateMessage","usernameEl","msgEl","newButtons","prepend","chatMessageEl","outputContainer","codeButtons","msgId","lang","playButton","editButton","saveButton","copyButton","codeText","bridge","onload","setOptions","Renderer","highlight","language","hljs","getLanguage","langPrefix","pedantic","gfm","breaks","smartypants","xhtml","chatPage","QWebChannel","qt","webChannelTransport","channel","objects","handlePyMessage","cmd"],"version":3,"file":"chatpage.9e51621d.js.map"}