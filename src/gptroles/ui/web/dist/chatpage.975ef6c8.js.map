{"mappings":"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IAAAA,CAAKsI,MAAAA,CAAOQ,GAAAA,CAAIJ,GAAIC;oBAC7B;oBAEOM,QAAAA;wBACLjJ,IAAAA,CAAKsI,MAAAA,CAAOW,KAAAA,IACZjJ,IAAAA,CAAKwI,IAAAA,CAAKS,KAAAA,EACZ;oBAAA;gBAAA;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,uB,G,K,GC3BF,EAAA,uBAAA,GAAA,SAAA,GAA2CC,CAAAA,EAAAA;oB,I;oBACzC,KAAK,MAAMpI,KAAKoI,EACE,IAAA,KAAhB,CAAA,IAAApI,IAAAA,IAAAA,IAAAA,KAAC,IAADA,EAAGqI,aAAAA,AAAAA,KAAAA,KAAa,MAAA,KAAA,EAAEhF,WAAAA,CAAYrD;gBAElC,C;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,wB,G,K,GCMA,EAAA,wBAAA,GAAA,SACEsI,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EAAAA;oBAEAH,EAAKnI,gBAAAA,CAAiBoI,GAAMC,GAASC;oBACrC,IAAIC,IAAAA,CAAW;oBACf,OAAO;wBACLC,SAAS,IAAA;4BACHD,KAGJA,CAAAA,IAAAA,CAAW,GACXJ,EAAK/E,mBAAAA,CAAoBgF,GAAMC,GAASC,EAAAA,AAAAA;wBAAQ;oBAAA;gBAGtD,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,U,G,K,C;gBCxBA,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA;gBAEA,IAAaG,IAAb,cAAgC,EAAAlK,UAAAA;oBAoB9BC,YACmCkK,CAAAA,CAAAA;wBAEjC/J,K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AAAA,GAGnGxM,IAAS7d,IAAAA,CAAKuQ,eAAAA,CAAgBM,UAAAA,CAAWwZ,iBAClD;oBAAA;oBAMOpI,iBAAiB7a,CAAAA,EAAAA;wBACtBpH,IAAAA,CAAKonB,WAAAA,GAAchgB,EAAGkjB,OAAAA,CAAQ,EAAA,CAAGC,KACnC;oBAAA;oBAMOrI,gBAAgB9a,CAAAA,EAAAA;wBACrB,MAAMgZ,IAASpgB,IAAAA,CAAKonB,WAAAA,GAAchgB,EAAGkjB,OAAAA,CAAQ,EAAA,CAAGC,KAAAA;wBAEhD,OADAvqB,IAAAA,CAAKonB,WAAAA,GAAchgB,EAAGkjB,OAAAA,CAAQ,EAAA,CAAGC,KAAAA,EAClB,MAAXnK,KAGJpgB,CAAAA,IAAAA,CAAKic,gBAAAA,CAAiB4M,SAAAA,IAAazI,GAC5BpgB,IAAAA,CAAKspB,aAAAA,CAAcliB,GAAIgZ,EAAAA,AAAAA,CAChC;oBAAA;gBAAA;gBAxTWxC,IAAQ,EAAA;oBA6BhB,EAAA,GAAA,EAAAxN,cAAAA;oBACA,EAAA,GAAA,EAAAsC,eAAAA;oBACA,EAAA,GAAA,EAAAiK,gBAAAA;oBACA,EAAA,GAAA,EAAAO,cAAAA;oBACA,EAAA,GAAA,EAAAV,mBAAAA;oBACA,EAAA,GAAA,EAAAK,aAAAA;iBAAAA,EAlCQe,IAAA,EAAAA,QAAAA,GAAAA,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,wB,G,K,C;gBCpBb,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA;gBAEA,IAAaiB,IAAb,cAA8C,EAAArf,UAAAA;oBAQ5CC,YACmB+qB,CAAAA,EACgB7gB,CAAAA,EACIyM,CAAAA,EACJzW,CAAAA,CAAAA;wBAEjCC,KAAAA,IALiB,IAAA,CAAA4qB,cAAAA,GAAAA,GACgB,IAAA,CAAA7gB,cAAAA,GAAAA,GACI,IAAA,CAAAyM,kBAAAA,GAAAA,GACJ,IAAA,CAAAzW,cAAAA,GAAAA,GAVlB,IAAA,CAAA8qB,mBAAAA,GAA6D,IAAIje,KAG1E,IAAA,CAAAke,kBAAAA,GAAAA,CAA8B,GAC9B,IAAA,CAAAC,kBAAAA,GAAAA,CAA8B,GAUpC3qB,IAAAA,CAAK4qB,UAAAA,GAAa1qB,SAASC,aAAAA,CAAc,QACzCH,IAAAA,CAAK4qB,UAAAA,CAAWxqB,SAAAA,CAAUC,GAAAA,CAAI,+BAC9BL,IAAAA,CAAKwqB,cAAAA,CAAe5pB,WAAAA,CAAYZ,IAAAA,CAAK4qB,UAAAA,GAErC5qB,IAAAA,CAAK6B,QAAAA,CAAS7B,IAAAA,CAAKL,cAAAA,CAAeuP,wBAAAA,CAAyB,IAAMlP,IAAAA,CAAK6qB,qBAAAA,MACtE7qB,IAAAA,CAAK6B,QAAAA,CAAS7B,IAAAA,CAAKL,cAAAA,CAAeqD,kBAAAA,CAAmB,IAAA;4BACnDhD,IAAAA,CAAK2qB,kBAAAA,GAAAA,CAAqB,GAC1B3qB,IAAAA,CAAK8qB,aAAAA,EAAe;wBAAA,KAEtB9qB,IAAAA,CAAK6B,QAAAA,CAAAA,AAAS,CAAA,GAAA,EAAAwB,wBAAAA,AAAAA,EAAyBF,QAAQ,UAAU,IAAMnD,IAAAA,CAAK8qB,aAAAA,MACpE9qB,IAAAA,CAAK6B,QAAAA,CAAS7B,IAAAA,CAAK2J,cAAAA,CAAegP,OAAAA,CAAQoP,gBAAAA,CAAiB,IAAA;4BACzD/nB,IAAAA,CAAK0qB,kBAAAA,GAAqB1qB,IAAAA,CAAK2J,cAAAA,CAAe9F,MAAAA,KAAW7D,IAAAA,CAAK2J,cAAAA,CAAegP,OAAAA,CAAQ+H,GAAG;wBAAA,KAE1F1gB,IAAAA,CAAK6B,QAAAA,CAAS7B,IAAAA,CAAKoW,kBAAAA,CAAmB2U,sBAAAA,CAAuB,IAAM/qB,IAAAA,CAAK8qB,aAAAA,MACxE9qB,IAAAA,CAAK6B,QAAAA,CAAS7B,IAAAA,CAAKoW,kBAAAA,CAAmB4U,mBAAAA,CAAoBC,CAAAA,IAAcjrB,IAAAA,CAAKkrB,iBAAAA,CAAkBD,MAC/FjrB,IAAAA,CAAK6B,QAAAA,CAAAA,AAAS,CAAA,GAAA,EAAAyB,YAAAA,AAAAA,EAAa,IAAA;4BACzBtD,IAAAA,CAAK4qB,UAAAA,CAAWnb,MAAAA,IAChBzP,IAAAA,CAAKyqB,mBAAAA,CAAoBxhB,KAAAA,EAAO;wBAAA,GAEpC;oBAAA;oBAEQ6hB,gBAAAA;wBAAAA,KACuBtgB,MAAzBxK,IAAAA,CAAK+S,eAAAA,IAGT/S,CAAAA,IAAAA,CAAK+S,eAAAA,GAAkB/S,IAAAA,CAAKL,cAAAA,CAAesT,kBAAAA,CAAmB,IAAA;4BAC5DjT,IAAAA,CAAK6qB,qBAAAA,IACL7qB,IAAAA,CAAK+S,eAAAA,GAAAA,KAAkBvI,CAAS;wBAAA,EAAA;oBAEpC;oBAEQqgB,wBAAAA;wBACN,KAAK,MAAMI,KAAcjrB,IAAAA,CAAKoW,kBAAAA,CAAmB5H,WAAAA,CAC/CxO,IAAAA,CAAKmrB,iBAAAA,CAAkBF;wBAEzBjrB,IAAAA,CAAK2qB,kBAAAA,GAAAA,CAAqB;oBAC5B;oBAEQQ,kBAAkBF,CAAAA,EAAAA;wBACxBjrB,IAAAA,CAAKorB,aAAAA,CAAcH,IACfjrB,IAAAA,CAAK2qB,kBAAAA,IACP3qB,IAAAA,CAAKqrB,iBAAAA,CAAkBJ,EAE3B;oBAAA;oBAEQK,eAAeL,CAAAA,EAAAA;wB,I;wBACrB,MAAMvpB,IAAUxB,SAASC,aAAAA,CAAc;wBACvCuB,EAAQtB,SAAAA,CAAUC,GAAAA,CAAI,qBACtBqB,EAAQ2E,KAAAA,CAAMC,KAAAA,GAAQ,CAAA,EAAGmN,KAAKmV,KAAAA,CAAAA,AAAOqC,CAAAA,EAAW1hB,OAAAA,CAAQjD,KAAAA,IAAS,CAAA,IAAKtG,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,EAAAA,EAAAA,CAAAA,EAC9G5E,EAAQ2E,KAAAA,CAAMD,MAAAA,GAAAA,AAAa6kB,CAAAA,EAAW1hB,OAAAA,CAAQnD,MAAAA,IAAU,CAAA,IAAKpG,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,GAA9E,MACvB1E,EAAQ2E,KAAAA,CAAMqB,GAAAA,GAAAA,AAAUujB,CAAAA,EAAWM,MAAAA,CAAO7a,IAAAA,GAAO1Q,IAAAA,CAAK2J,cAAAA,CAAegP,OAAAA,CAAQC,MAAAA,CAAO/S,KAAAA,AAAAA,IAAS7F,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,GAAjH,MACpB1E,EAAQ2E,KAAAA,CAAM8T,UAAAA,GAAa,CAAA,EAAGna,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,CAAAA,EAAAA,CAAAA;wBAEtE,MAAMyF,IAAwB,IAAA,KAApB,CAAA,IAAAof,EAAW1hB,OAAAA,CAAQsC,CAAAA,AAAAA,KAAAA,KAAC,MAAA,IAAA,IAAI,CAAA;wBAOlC,OANIA,KAAKA,IAAI7L,IAAAA,CAAK2J,cAAAA,CAAe8D,IAAAA,IAE/B/L,CAAAA,EAAQ2E,KAAAA,CAAMmlB,OAAAA,GAAU,MAAA,GAE1BxrB,IAAAA,CAAKqrB,iBAAAA,CAAkBJ,GAAYvpB,IAE5BA,CACT;oBAAA;oBAEQ0pB,cAAcH,CAAAA,EAAAA;wBACpB,MAAMva,IAAOua,EAAWM,MAAAA,CAAO7a,IAAAA,GAAO1Q,IAAAA,CAAK2J,cAAAA,CAAegP,OAAAA,CAAQC,MAAAA,CAAO/S,KAAAA;wBACzE,IAAI6K,IAAO,KAAKA,KAAQ1Q,IAAAA,CAAK2J,cAAAA,CAAejJ,IAAAA,EAEtCuqB,EAAWvpB,OAAAA,IACbupB,CAAAA,EAAWvpB,OAAAA,CAAQ2E,KAAAA,CAAMmlB,OAAAA,GAAU,QACnCP,EAAWQ,eAAAA,CAAgBjc,IAAAA,CAAKyb,EAAWvpB,OAAAA,CAAAA,AAAAA;6BAExC;4BACL,IAAIA,IAAU1B,IAAAA,CAAKyqB,mBAAAA,CAAoB3hB,GAAAA,CAAImiB;4BACtCvpB,KACHA,CAAAA,IAAU1B,IAAAA,CAAKsrB,cAAAA,CAAeL,IAC9BA,EAAWvpB,OAAAA,GAAUA,GACrB1B,IAAAA,CAAKyqB,mBAAAA,CAAoB7hB,GAAAA,CAAIqiB,GAAYvpB,IACzC1B,IAAAA,CAAK4qB,UAAAA,CAAWhqB,WAAAA,CAAYc,EAAAA,AAAAA,GAE9BA,EAAQ2E,KAAAA,CAAMqB,GAAAA,GAASgJ,IAAO1Q,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,GAAlD,MACpB1E,EAAQ2E,KAAAA,CAAMmlB,OAAAA,GAAUxrB,IAAAA,CAAK0qB,kBAAAA,GAAqB,SAAS,OAAA,EAC3DO,EAAWQ,eAAAA,CAAgBjc,IAAAA,CAAK9N,E;wB,CAEpC;oBAAA;oBAEQ2pB,kBAAkBJ,CAAAA,EAAiCvpB,IAAmCupB,EAAWvpB,OAAAA,EAAAA;wB,I;wBACvG,IAAA,CAAKA,GACH;wBAEF,MAAMmK,IAAwB,IAAA,KAApB,CAAA,IAAAof,EAAW1hB,OAAAA,CAAQsC,CAAAA,AAAAA,KAAAA,KAAC,MAAA,IAAA,IAAI,CAAA;wBACY,YAAzCof,CAAAA,EAAW1hB,OAAAA,CAAQmiB,MAAAA,IAAU,MAAA,IAChChqB,EAAQ2E,KAAAA,CAAMslB,KAAAA,GAAQ9f,IAAOA,IAAI7L,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,GAA/C,OAA2D,EAAA,GAErF5E,EAAQ2E,KAAAA,CAAMmB,IAAAA,GAAOqE,IAAOA,IAAI7L,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,GAA/C,OAA2D,EAExF;oBAAA;oBAEQ4kB,kBAAkBD,CAAAA,EAAAA;wB,I;wBACgB,IAAA,KAAxC,CAAA,IAAAjrB,IAAAA,CAAKyqB,mBAAAA,CAAoB3hB,GAAAA,CAAImiB,EAAAA,KAAAA,KAAW,MAAA,KAAA,EAAExb,MAAAA,IAC1CzP,IAAAA,CAAKyqB,mBAAAA,CAAoBmB,MAAAA,CAAOX,IAChCA,EAAWxhB,OAAAA,EACb;oBAAA;gBAAA;gBArHWoV,IAAwB,EAAA;oBAUhC,EAAA,GAAA,EAAAzO,cAAAA;oBACA,EAAA,GAAA,EAAAmG,kBAAAA;oBACA,EAAA,GAAA,EAAA2G,cAAAA;iBAAAA,EAZQ2B,IAAA,EAAAA,wBAAAA,GAAAA,C;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,c,G,K,GCqBb,EAAA,cAAA,GAAA;oBAAA,aAAA;wBACU,IAAA,CAAAgN,MAAAA,GAAuB,EAAA,EAKvB,IAAA,CAAAC,SAAAA,GAA0B,EAAA,EAC1B,IAAA,CAAAC,cAAAA,GAAiB,GAEjB,IAAA,CAAAC,YAAAA,GAA+C;4BACrDC,MAAM;4BACNzkB,MAAM;4BACN0kB,QAAQ;4BACRP,OAAO;wBAAA,CAwEX;oBAAA;oBArEaQ,IAAAA,QAAAA;wBAGT,OADAnsB,IAAAA,CAAK8rB,SAAAA,CAAU5qB,MAAAA,GAASuS,KAAKC,GAAAA,CAAI1T,IAAAA,CAAK8rB,SAAAA,CAAU5qB,MAAAA,EAAQlB,IAAAA,CAAK6rB,MAAAA,CAAO3qB,MAAAA,GAC7DlB,IAAAA,CAAK6rB,MACd;oBAAA;oBAEO5iB,QAAAA;wBACLjJ,IAAAA,CAAK6rB,MAAAA,CAAO3qB,MAAAA,GAAS,GACrBlB,IAAAA,CAAK+rB,cAAAA,GAAiB,CACxB;oBAAA;oBAEOK,cAAcnB,CAAAA,EAAAA;wBACnB,IAAKA,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,EAAxB;4BAGA,KAAK,MAAMC,KAAKtsB,IAAAA,CAAK6rB,MAAAA,CACnB,IAAIS,EAAEzU,KAAAA,KAAUoT,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,CAAqBxU,KAAAA,IACpDyU,EAAE9oB,QAAAA,KAAaynB,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,CAAqB7oB,QAAAA,EAAU;gCACnE,IAAIxD,IAAAA,CAAKusB,mBAAAA,CAAoBD,GAAGrB,EAAWM,MAAAA,CAAO7a,IAAAA,GAChD;gCAEF,IAAI1Q,IAAAA,CAAKwsB,mBAAAA,CAAoBF,GAAGrB,EAAWM,MAAAA,CAAO7a,IAAAA,EAAMua,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,CAAqB7oB,QAAAA,GAE9F,OAAA,KADAxD,IAAAA,CAAKysB,cAAAA,CAAeH,GAAGrB,EAAWM,MAAAA,CAAO7a,IAAAA;4B,CAM/C;4BAAA,IAAI1Q,IAAAA,CAAK+rB,cAAAA,GAAiB/rB,IAAAA,CAAK8rB,SAAAA,CAAU5qB,MAAAA,EAMvC,OALAlB,IAAAA,CAAK8rB,SAAAA,CAAU9rB,IAAAA,CAAK+rB,cAAAA,CAAAA,CAAgBlU,KAAAA,GAAQoT,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,CAAqBxU,KAAAA,EACpF7X,IAAAA,CAAK8rB,SAAAA,CAAU9rB,IAAAA,CAAK+rB,cAAAA,CAAAA,CAAgBvoB,QAAAA,GAAWynB,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,CAAqB7oB,QAAAA,EACvFxD,IAAAA,CAAK8rB,SAAAA,CAAU9rB,IAAAA,CAAK+rB,cAAAA,CAAAA,CAAgBW,eAAAA,GAAkBzB,EAAWM,MAAAA,CAAO7a,IAAAA,EACxE1Q,IAAAA,CAAK8rB,SAAAA,CAAU9rB,IAAAA,CAAK+rB,cAAAA,CAAAA,CAAgBY,aAAAA,GAAgB1B,EAAWM,MAAAA,CAAO7a,IAAAA,EAAAA,KACtE1Q,IAAAA,CAAK6rB,MAAAA,CAAOrnB,IAAAA,CAAKxE,IAAAA,CAAK8rB,SAAAA,CAAU9rB,IAAAA,CAAK+rB,cAAAA,GAAAA,CAAAA;4BAIvC/rB,IAAAA,CAAK6rB,MAAAA,CAAOrnB,IAAAA,CAAK;gCACfqT,OAAOoT,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,CAAqBxU,KAAAA;gCAC/CrU,UAAUynB,EAAW1hB,OAAAA,CAAQ8iB,oBAAAA,CAAqB7oB,QAAAA;gCAClDkpB,iBAAiBzB,EAAWM,MAAAA,CAAO7a,IAAAA;gCACnCic,eAAe1B,EAAWM,MAAAA,CAAO7a,IAAAA;4BAAAA,IAEnC1Q,IAAAA,CAAK8rB,SAAAA,CAAUtnB,IAAAA,CAAKxE,IAAAA,CAAK6rB,MAAAA,CAAO7rB,IAAAA,CAAK6rB,MAAAA,CAAO3qB,MAAAA,GAAS,EAAA,GACrDlB,IAAAA,CAAK+rB,cAAAA,E;wB,CACP;oBAAA;oBAEOa,WAAWC,CAAAA,EAAAA;wBAChB7sB,IAAAA,CAAKgsB,YAAAA,GAAea;oBACtB;oBAEQN,oBAAoBO,CAAAA,EAAkBpc,CAAAA,EAAAA;wBAC5C,OACEA,KAAQoc,EAAKJ,eAAAA,IACbhc,KAAQoc,EAAKH,aAEjB;oBAAA;oBAEQH,oBAAoBM,CAAAA,EAAkBpc,CAAAA,EAAclN,CAAAA,EAAAA;wBAC1D,OACGkN,KAAQoc,EAAKJ,eAAAA,GAAkB1sB,IAAAA,CAAKgsB,YAAAA,CAAaxoB,KAAY,OAAA,IAC7DkN,KAAQoc,EAAKH,aAAAA,GAAgB3sB,IAAAA,CAAKgsB,YAAAA,CAAaxoB,KAAY,OAEhE;oBAAA;oBAEQipB,eAAeK,CAAAA,EAAkBpc,CAAAA,EAAAA;wBACvCoc,EAAKJ,eAAAA,GAAkBjZ,KAAKC,GAAAA,CAAIoZ,EAAKJ,eAAAA,EAAiBhc,IACtDoc,EAAKH,aAAAA,GAAgBlZ,KAAKG,GAAAA,CAAIkZ,EAAKH,aAAAA,EAAejc,EACpD;oBAAA;gBAAA,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,qB,G,K,C;gBC9GF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,OAIMqc,IAAa;oBACjBd,MAAM;oBACNzkB,MAAM;oBACN0kB,QAAQ;oBACRP,OAAO;gBAAA,GAEHqB,IAAY;oBAChBf,MAAM;oBACNzkB,MAAM;oBACN0kB,QAAQ;oBACRP,OAAO;gBAAA,GAEHsB,IAAQ;oBACZhB,MAAM;oBACNzkB,MAAM;oBACN0kB,QAAQ;oBA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KktB,kBAAAA,CAAmB/pB,MAAAA,CAAO+P,qBAAAA,CAAsB,IAAA;4BAC1ElT,IAAAA,CAAK6uB,mBAAAA,IACL7uB,IAAAA,CAAK+S,eAAAA,GAAAA,KAAkBvI,CAAS;wBAAA,EAAA,CAEpC;oBAAA;gBAAA;gBAzLWgV,IAAqB,EAAA;oBAkB7B,EAAA,GAAA,EAAApP,cAAAA;oBACA,EAAA,GAAA,EAAAmG,kBAAAA;oBACA,EAAA,GAAA,EAAA2G,cAAAA;oBACA,EAAA,GAAA,EAAAxK,eAAAA;oBACA,EAAA,GAAA,EAAA8J,mBAAAA;iBAAAA,EAtBQgD,IAAA,EAAAA,qBAAAA,GAAAA,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,iB,G,K,C;gBC3Bb,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA;gBAYA,IAAanC,IAAb;oBAwBE5d,YACmB4vB,CAAAA,EACAjS,CAAAA,EACgBzT,CAAAA,EACC4G,CAAAA,EACH+e,CAAAA,EACE3vB,CAAAA,CAAAA;wBALhB,IAAA,CAAA0vB,SAAAA,GAAAA,GACA,IAAA,CAAAjS,gBAAAA,GAAAA,GACgB,IAAA,CAAAzT,cAAAA,GAAAA,GACC,IAAA,CAAA4G,eAAAA,GAAAA,GACH,IAAA,CAAA+e,YAAAA,GAAAA,GACE,IAAA,CAAA3vB,cAAAA,GAAAA,GAEjCK,IAAAA,CAAKuvB,YAAAA,GAAAA,CAAe,GACpBvvB,IAAAA,CAAKwvB,qBAAAA,GAAAA,CAAwB,GAC7BxvB,IAAAA,CAAKyvB,oBAAAA,GAAuB;4BAAExtB,OAAO;4BAAGC,KAAK;wBAAA,GAC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AiB,GAAA;oBAChD,MAAM0B,IAAgBzf,KAAKsO,GAAAA,CAAIwP,IAASC;oBAIxC,OAAOU,EAaT,SAAwBiB,CAAAA,EAAe1B,CAAAA,EAAAA;wBACrC,OAAOA,EAAchkB,IAAAA,GAAO0lB;oBAC9B,EAlBqC5B,IAASC,IAAUsB,IAAUxlB,CAAAA,EAAQmkB,KAAAA,AACrEyB,CAAAA,IAAgB,CAAA,IAAKzB,EAAchkB,IAAAA,GAAO,IAAA,CAAA,AACtB8jB,CAAAA,IAASC,IAAUlkB,IAASwlB,CAAAA,AAAAA,IAQpC,CAAA,GAPYlR,EAASkQ,GAAWJ;gBACjD;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,W,G,K,C;gBCtCA,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,OAEA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,OAEM2B,IAAwB,6BAIxBC,IAAc;gBAGpB,IAAIC,IAAiB,GAOR5T,IAAb,cAAiC,EAAAngB,UAAAA;oBAe/BC,YACmB0L,CAAAA,EACAqf,CAAAA,EACAvO,CAAAA,EACAuX,CAAAA,EACMC,CAAAA,EACYhX,CAAAA,EACDlM,CAAAA,EACD5G,CAAAA,EACK0S,CAAAA,EACvBwK,CAAAA,CAAAA;wBAEfjnB,KAAAA,IAXiB,IAAA,CAAAuL,QAAAA,GAAAA,GACA,IAAA,CAAAqf,cAAAA,GAAAA,GACA,IAAA,CAAAvO,gBAAAA,GAAAA,GACA,IAAA,CAAAuX,WAAAA,GAAAA,GAEkB,IAAA,CAAA/W,gBA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B,CAAAA,IAAAA,CAAKyjB,cAAAA,IAAAA,CACE,CAAA,AAAA,IAILzjB,CAAAA,IAAAA,CAAKujB,cAAAA,IAAkBvjB,IAAAA,CAAKujB,cAAAA,CAAe,EAAA,GAAK,KAClDvjB,CAAAA,IAAAA,CAAKujB,cAAAA,CAAe,EAAA,GAAK,CAAA,GAAA,CAEpB,CAAA,AAAA,CACT;oBAAA;gBAAA,C;Y;Y,K,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,e,G,K,C;gBCzIF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA;gBAGA,IAAa7G,IAAb,cAAqC,EAAAld,UAAAA;oBAYnCC,YACES,CAAAA,EACAiJ,CAAAA,EACkCoH,CAAAA,CAAAA;wBAElC3Q,KAAAA,IAFkC,IAAA,CAAA2Q,eAAAA,GAAAA,GAZ7B,IAAA,CAAAjK,KAAAA,GAAgB,GAChB,IAAA,CAAAF,MAAAA,GAAiB,GAKP,IAAA,CAAAu2B,iBAAAA,GAAoB38B,IAAAA,CAAK6B,QAAAA,CAAS,IAAI,EAAAoI,YAAAA,GACvC,IAAA,CAAA2yB,gBAAAA,GAAmB58B,IAAAA,CAAK28B,iBAAAA,CAAkBxyB,KAAAA,EAQxDnK,IAAAA,CAAK68B,gBAAAA,GAAmB,IAAIC,EAAmB58B,GAAUiJ,GAAenJ,IAAAA,CAAKuQ,eAAAA,GAC7EvQ,IAAAA,CAAK6B,QAAAA,CAAS7B,IAAAA,CAAKuQ,eAAAA,CAAgBwsB,sBAAAA,CAAuB;4BAAC;4BAAc;yBAAA,EAAa,IAAM/8B,IAAAA,CAAKyf,OAAAA,IACnG;oBAAA;oBAbW2F,IAAAA,eAAAA;wBAA0B,OAAOplB,IAAAA,CAAKsG,KAAAA,GAAQ,KAAKtG,IAAAA,CAAKoG,MAAAA,GAAS;oBAAG;oBAexEqZ,UAAAA;wBACL,MAAM9O,IAAS3Q,IAAAA,CAAK68B,gBAAAA,CAAiBpd,OAAAA;wBACjC9O,EAAOrK,KAAAA,KAAUtG,IAAAA,CAAKsG,KAAAA,IAASqK,EAAOvK,MAAAA,KAAWpG,IAAAA,CAAKoG,MAAAA,IACxDpG,CAAAA,IAAAA,CAAKsG,KAAAA,GAAQqK,EAAOrK,KAAAA,EACpBtG,IAAAA,CAAKoG,MAAAA,GAASuK,EAAOvK,MAAAA,EACrBpG,IAAAA,CAAK28B,iBAAAA,CAAkBntB,IAAAA,EAAAA,AAAAA;oBAE3B;gBAAA;gBA7BWkN,IAAe,EAAA;oBAevB,EAAA,GAAA,EAAAhK,eAAAA;iBAAAA,EAfQgK,IAAA,EAAAA,eAAAA,GAAAA,CAAAA;gBA+Cb,MAAMogB;oBAIJr9B,YACUmc,CAAAA,EACAohB,CAAAA,EACAzsB,CAAAA,CAAAA;wBAFA,IAAA,CAAAqL,SAAAA,GAAAA,GACA,IAAA,CAAAohB,cAAAA,GAAAA,GACA,IAAA,CAAAzsB,eAAAA,GAAAA,GANF,IAAA,CAAA0sB,OAAAA,GAA0B;4BAAE32B,OAAO;4BAAGF,QAAQ;wBAAA,GAQpDpG,IAAAA,CAAKk9B,eAAAA,GAAkBl9B,IAAAA,CAAK4b,SAAAA,CAAUzb,aAAAA,CAAc,SACpDH,IAAAA,CAAKk9B,eAAAA,CAAgB98B,SAAAA,CAAUC,GAAAA,CAAI,+BACnCL,IAAAA,CAAKk9B,eAAAA,CAAgBl4B,WAAAA,GAAc,KACnChF,IAAAA,CAAKk9B,eAAAA,CAAgB18B,YAAAA,CAAa,eAAe,SACjDR,IAAAA,CAAKg9B,cAAAA,CAAep8B,WAAAA,CAAYZ,IAAAA,CAAKk9B,eAAAA,CACvC;oBAAA;oBAEOzd,UAAAA;wBACLzf,IAAAA,CAAKk9B,eAAAA,CAAgB72B,KAAAA,CAAMgqB,UAAAA,GAAarwB,IAAAA,CAAKuQ,eAAAA,CAAgBM,UAAAA,CAAWwf,UAAAA,EACxErwB,IAAAA,CAAKk9B,eAAAA,CAAgB72B,KAAAA,CAAMiqB,QAAAA,GAAW,CAAA,EAAGtwB,IAAAA,CAAKuQ,eAAAA,CAAgBM,UAAAA,CAAWyf,QAAAA,CAAAA,EAAAA,CAAAA;wBAGzE,MAAM6M,IAAWn9B,IAAAA,CAAKk9B,eAAAA,CAAgB31B,qBAAAA;wBAStC,OALuB,MAAnB41B,EAAS72B,KAAAA,IAAmC,MAApB62B,EAAS/2B,MAAAA,IACnCpG,CAAAA,IAAAA,CAAKi9B,OAAAA,CAAQ32B,KAAAA,GAAQ62B,EAAS72B,KAAAA,EAC9BtG,IAAAA,CAAKi9B,OAAAA,CAAQ72B,MAAAA,GAASqN,KAAKib,IAAAA,CAAKyO,EAAS/2B,MAAAA,CAAAA,AAAAA,GAGpCpG,IAAAA,CAAKi9B,OACd;oBAAA;gBAAA;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,sB,G,E,c,G,K,C;gBClFF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,MACA,IAAA,EAAA;gBAGA,MAAazE,UAAuB,EAAAe,aAAAA;oBASlC95B,YAAY29B,CAAAA,EAAsBC,CAAAA,EAAe/2B,CAAAA,CAAAA;wBAC/C1G,KAAAA,IANK,IAAA,CAAA09B,OAAAA,GAAkB,GAGlB,IAAA,CAAAC,YAAAA,GAAuB,IAI5Bv9B,IAAAA,CAAK2I,EAAAA,GAAKy0B,EAAUz0B,EAAAA,EACpB3I,IAAAA,CAAK0I,EAAAA,GAAK00B,EAAU10B,EAAAA,EACpB1I,IAAAA,CAAKu9B,YAAAA,GAAeF,GACpBr9B,IAAAA,CAAKiuB,MAAAA,GAAS3nB,CAChB;oBAAA;oBAEOk3B,aAAAA;wBAEL,OAAO;oBACT;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;wBAKT,OAAA,KAJ8BzwB,MAA1BxK,IAAAA,CAAKw/B,gBAAAA,IACPx/B,CAAAA,IAAAA,CAAKw/B,gBAAAA,GAAmBx/B,IAAAA,CAAKu/B,UAAAA,IAAcv/B,IAAAA,CAAKqvB,SAAAA,CAAUxT,aAAAA,CAAc4jB,QAAAA,IACxEC,eAAe,IAAM1/B,IAAAA,CAAKw/B,gBAAAA,GAAAA,KAAmBh1B,EAAAA,AAAAA,GAExCxK,IAAAA,CAAKw/B,gBACd;oBAAA;gBAAA,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,Y,G,K,C;gBC1BF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA;gBAEA,IAAa/hB,IAAb;oBAGEhe,YACmCE,CAAAA,EACE8c,CAAAA,CAAAA;wBADF,IAAA,CAAA9c,cAAAA,GAAAA,GACE,IAAA,CAAA8c,gBAAAA,GAAAA,CAErC;oBAAA;oBAEO1M,UAAU5F,CAAAA,EAA2CzI,CAAAA,EAAsBuvB,CAAAA,EAAkB3d,CAAAA,EAAkB+d,CAAAA,EAAAA;wBACpH,OAAA,AAAO,CAAA,GAAA,EAAAthB,SAAAA,AAAAA,EACL5M,QACAgH,GACAzI,GACAuvB,GACA3d,GACAtT,IAAAA,CAAKyc,gBAAAA,CAAiB2I,YAAAA,EACtBplB,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,EACxCtG,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,EACxCirB;oBAEJ;oBAEOvR,qBAAqB3V,CAAAA,EAAmBzI,CAAAA,EAAAA;wBAC7C,MAAMoO,IAAAA,AAAS,CAAA,GAAA,EAAA2gB,0BAAAA,AAAAA,EAA2BttB,QAAQgH,GAAOzI;wBAIzD,IAAA,CAAA,CAAA,CAAK1B,IAAAA,CAAKyc,gBAAAA,CAAiB2I,YAAAA,IACtBtV,CAAAA,CAAO,EAAA,GAAK,KACZA,CAAAA,CAAO,EAAA,GAAK,KACZA,CAAAA,CAAO,EAAA,IAAM9P,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOD,KAAAA,IACvDwJ,CAAAA,CAAO,EAAA,IAAM9P,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOH,MAAAA,AAAAA,GAI5D,OAAO;4BACLka,KAAK7M,KAAKwW,KAAAA,CAAMna,CAAAA,CAAO,EAAA,GAAK9P,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA;4BACpEia,KAAK9M,KAAKwW,KAAAA,CAAMna,CAAAA,CAAO,EAAA,GAAK9P,IAAAA,CAAKL,cAAAA,CAAesG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA;4BACpEyF,GAAG4H,KAAKwW,KAAAA,CAAMna,CAAAA,CAAO,EAAA;4BACrBhE,GAAG2H,KAAKwW,KAAAA,CAAMna,CAAAA,CAAO,EAAA;wBAAA;oBAEzB;gBAAA;gBA1CW2N,IAAY,EAAA;oBAIpB,EAAA,GAAA,EAAAP,cAAAA;oBACA,EAAA,GAAA,EAAAP,gBAAAA;iBAAAA,EALQc,IAAA,EAAAA,YAAAA,GAAAA,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,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,GAAA,EAAAspB,eAAAA,AAAAA,EAA+B,iBAQ/C,EAAA9pB,cAAAA,GAAAA,AAAiB,CAAA,GAAA,EAAA8pB,eAAAA,AAAAA,EAAgC,kBAmCjD,EAAA3oB,iBAAAA,GAAAA,AAAoB,CAAA,GAAA,EAAA2oB,eAAAA,AAAAA,EAAmC,qBA6BvD,EAAAhqB,uBAAAA,GAAAA,AAA0B,CAAA,GAAA,EAAAgqB,eAAAA,AAAAA,EAAyC,2BASnE,EAAAnqB,aAAAA,GAAAA,AAAgB,CAAA,GAAA,EAAAmqB,eAAAA,AAAAA,EAA+B,e;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,Y,G,E,mB,G,K,C;gBCvH5D,MAAA,IAAA,EAAA,OAGA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,OAWMC,IAAqB,EAAA/gC,GAAAA,CAAIsS,OAAAA,CAAQ,YACjC0uB,IAAqB,EAAAhhC,GAAAA,CAAIsS,OAAAA,CAAQ,YACjC2uB,IAAiB,EAAAjhC,GAAAA,CAAIsS,OAAAA,CAAQ,YAC7B4uB,IAAwB,EAAAlhC,GAAAA,CAAIsS,OAAAA,CAAQ,YACpC6uB,IAAoB;oBACxBnhC,KAAK;oBACLqS,MAAM;gBAAA;gBAIK,EAAA+uB,mBAAAA,GAAsBz4B,OAAO04B,MAAAA,CAAO,AAAA,CAAA,IAAA;oBAC/C,MAAMxvB,IAAS;wBAEb,EAAA7R,GAAAA,CAAIsS,OAAAA,CAAQ;wBACZ,EAAAtS,GAAAA,CAAIsS,OAAAA,CAAQ;wBACZ,EAAAtS,GAAAA,CAAIsS,OAAAA,CAAQ;wBACZ,EAAAtS,GAAAA,CAAIsS,OAAAA,C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AAA,CAAWxxC,MAAAA,EAAQ7B,IAC1C0zC,EAAMvuC,IAAAA,CAAKxE,IAAAA,CAAK0yC,UAAAA,CAAWrzC,EAAAA;wBAE7B,IAAK,IAAIA,IAAI,GAAGA,IAAI0zC,EAAM7xC,MAAAA,EAAQ7B,IAChC0zC,CAAAA,CAAM1zC,EAAAA,CAAG2zC,IAAAA,CAAAA,KAAKxoC,GAAWqoC,GAAMC;oBAEnC;oBAEOrpC,UAAAA;wBACDzJ,IAAAA,CAAK0yC,UAAAA,IACP1yC,CAAAA,IAAAA,CAAK0yC,UAAAA,CAAWxxC,MAAAA,GAAS,CAAA,GAE3BlB,IAAAA,CAAK2yC,SAAAA,GAAAA,CAAY,CACnB;oBAAA;gBAAA,GAGF,EAAA,YAAA,GAAA,SAAgCM,CAAAA,EAAiBC,CAAAA,EAAAA;oBAC/C,OAAOD,EAAKnyC,CAAAA,IAAKoyC,EAAG1jC,IAAAA,CAAK1O;gBAC3B,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,Y,G,E,wB,G,K,C;gBC7DA,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,MACA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,MACA,IAAA,EAAA,MACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,OAKMqyC,IAAoC;oBAAE,KAAK;oBAAG,KAAK;oBAAG,KAAK;oBAAG,KAAK;oBAAG,KAAK;oBAAG,KAAK;gBAAA,GAgCnFC,IAAyB;gBAQ/B,SAASC,EAAoBC,CAAAA,EAAWC,CAAAA,EAAA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;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;iBAAA,EAEzCC,IAAiB;oBACrB;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAClD;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAClD;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAClD;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAAU;wBAAC;wBAAS;qBAAA;oBAClD;wBAAC;wBAAS;qBAAA;iBAAA;gBAIZ,IAAIC;gBAsBJ,EAAA,SAAA,GAAA;oBAGE33D,aAAAA;wBAEE,IAJc,IAAA,CAAA43D,OAAAA,GAAU,KAAA,CAInBD,CAAAA,EAAO;4BACVA,IAAQ,IAAIX,WAAW,QACvBW,EAAM77B,IAAAA,CAAK,IACX67B,CAAAA,CAAM,EAAA,GAAK,GAEXA,EAAM77B,IAAAA,CAAK,GAAG,GAAG,KACjB67B,EAAM77B,IAAAA,CAAK,GAAG,KAAM,MAIpB67B,EAAM77B,IAAAA,CAAK,GAAG,MAAQ,OACtB67B,CAAAA,CAAM,KAAA,GAAU,GAChBA,CAAAA,CAAM,KAAA,GAAU,GAChBA,EAAM77B,IAAAA,CAAK,GAAG,OAAQ,QACtB67B,CAAAA,CAAM,MAAA,GAAU,GAEhBA,EAAM77B,IAAAA,CAAK,GAAG,OAAQ,QACtB67B,EAAM77B,IAAAA,CAAK,GAAG,OAAQ,QACtB67B,EAAM77B,IAAAA,CAAK,GAAG,OAAQ,QACtB67B,EAAM77B,IAAAA,CAAK,GAAG,OAAQ,QACtB67B,EAAM77B,IAAAA,CAAK,GAAG,OAAQ,QACtB67B,EAAM77B,IAAAA,CAAK,GAAG,OAAQ,MAAA;4BAOtB,IAAK,IAAIiM,IAAI,GAAGA,IAAI0vB,EAAch2D,MAAAA,EAAAA,EAAUsmC,EAC1C4vB,EAAM77B,IAAAA,CAAK,GAAG27B,CAAAA,CAAc1vB,EAAAA,CAAG,EAAA,EAAI0vB,CAAAA,CAAc1vB,EAAAA,CAAG,EAAA,GAAK;wB,CAG/D;oBAAA;oBAEOiY,QAAQ6X,CAAAA,EAAAA;wBACb,OAAIA,IAAM,KAAW,IACjBA,IAAM,MAAY,IAClBA,IAAM,QAAcF,CAAAA,CAAME,EAAAA,GA9DlC,SAAkBC,CAAAA,EAAaz1C,CAAAA,EAAAA;4BAC7B,IAEI4kC,GAFAhzC,IAAM,GACNE,IAAMkO,EAAK5gB,MAAAA,GAAS;4BAExB,IAAIq2D,IAAMz1C,CAAAA,CAAK,EAAA,CAAG,EAAA,IAAMy1C,IAAMz1C,CAAAA,CAAKlO,EAAAA,CAAK,EAAA,EACtC,OAAA,CAAO;4BAET,MAAOA,KAAOF,GAEZ,IADAgzC,IAAOhzC,IAAME,KAAQ,GACjB2jD,IAAMz1C,CAAAA,CAAK4kC,EAAAA,CAAK,EAAA,EAClBhzC,IAAMgzC,IAAM;iCACP;gCAAA,IAAA,CAAI6Q,CAAAA,IAAMz1C,CAAAA,CAAK4kC,EAAAA,CAAK,EAAA,AAAA,GAGzB,OAAA,CAAO;gCAFP9yC,IAAM8yC,IAAM;4B,CAKhB;4BAAA,OAAA,CAAO;wBACT,EA6CiB4Q,GAAKH,KAAwB,IACrCG,KAAO,UAAWA,KAAO,UAAaA,KAAO,UAAWA,KAAO,SAAiB,IAC9E,CACT;oBAAA;gBAAA;Y;Y,M,C,G,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,W,G,K,C;gBC5HF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA;gBA6BA,MAAaxmB,UAAoB,EAAAtxC,UAAAA;oBAY/BC,YAAoBg4D,CAAAA,CAAAA;wBAClB73D,KAAAA,IADkB,IAAA,CAAA63D,OAAAA,GAAAA,GAXZ,IAAA,CAAAhnB,YAAAA,GAAwC,EAAA,EACxC,IAAA,CAAAinB,UAAAA,GAA2C,EAAA,EAC3C,IAAA,CAAAC,YAAAA,GAAe,GACf,IAAA,CAAAC,aAAAA,GAAgB,GAChB,IAAA,CAAAC,cAAAA,GAAAA,CAAiB,GACjB,IAAA,CAAAC,UAAAA,GAAa,GACb,IAAA,CAAAC,aAAAA,GAAAA,CAAgB,GAEP,IAAA,CAAAzoB,cAAAA,GAAiBtvC,IAAAA,CAAK6B,QAAAA,CAAS,IAAI,EAAAoI,YAAAA,GACpC,IAAA,CAAAslC,aAAAA,GAAgBvvC,IAAAA,CAAKsvC,cAAAA,CAAenlC,KAIpD;oBAAA;oBAEOumC,kBAAAA;wBACL1wC,IAAAA,CAAK+3D,aAAAA,GAAAA,CAAgB;oBACvB;oBAKO3mB,UAAUtvB,CAAAA,EAA2BuvB,CAAAA,EAAAA;wBAI1C,IAAA,KAA2B7mC,MAAvB6mC,KAAoCrxC,IAAAA,CAAK83D,UAAAA,GAAazmB,GAIxD,OAAA,KADArxC,CAAAA,IAAAA,CAAK83D,UAAAA,GAAa,CAAA;wBAWpB,IAPA93D,IAAAA,CAAK23D,YAAAA,IAAgB71C,EAAK5gB,MAAAA,EAC1BlB,IAAAA,CAAKywC,YAAAA,CAAajsC,IAAAA,CAAKsd,IACvB9hB,IAAAA,CAAK03D,UAAAA,CAAWlzD,IAAAA,CAAAA,KAAKgG,IAGrBxK,IAAAA,CAAK83D,UAAAA,IAED93D,IAAAA,CAAK63D,cAAAA,EACP;wBAQF,IAAIG;wBACJ,IAPAh4D,IAAAA,CAAK63D,cAAAA,GAAAA,CAAiB,GAOfG,IAAQh4D,IAAAA,CAAKywC,YAAAA,CAAarsC,KAAAA,IAAS;4BACxCpE,IAAAA,CAAKy3D,OAAAA,CAAQO;4BACb,MAAMC,IAAKj4D,IAAAA,CAAK03D,UAAAA,CAAWtzD,KAAAA;4BACvB6zD,KAAIA;wB;wBAIVj4D,IAAAA,CAAK23D,YAAAA,GAAe,GACpB33D,IAAAA,CAAK43D,aAAAA,GAAgB,YAGrB53D,IAAAA,CAAK63D,cAAAA,GAAAA,CAAiB,GACtB73D,IAAAA,CAAK83D,UAAAA,GAAa,CACpB;oBAAA;oBAEO3mB,MAAMrvB,CAAAA,EAA2BrR,CAAAA,EAAAA;wBACtC,IAAIzQ,IAAAA,CAAK23D,YAAAA,GApFa,KAqFpB,MAAM,IAAIh2D,MAAM,+DAIlB;wBAAA,IAAA,CAAK3B,IAAAA,CAAKywC,YAAAA,CAAavvC,MAAAA,EAAQ;4BAM7B,IALAlB,IAAAA,CAAK43D,aAAAA,GAAgB,GAKjB53D,IAAAA,CAAK+3D,aAAAA,EAMP,OALA/3D,IAAAA,CAAK+3D,aAAAA,GAAAA,CAAgB,GACrB/3D,IAAAA,CAAK23D,YAAAA,IAAgB71C,EAAK5gB,MAAAA,EAC1BlB,IAAAA,CAAKywC,YAAAA,CAAajsC,IAAAA,CAAKsd,IACvB9hB,IAAAA,CAAK03D,UAAAA,CAAWlzD,IAAAA,CAAKiM,IAAAA,KACrBzQ,IAAAA,CAAKk4D,WAAAA,EAAAA;4BAIP7yD,WAAW,IAAMrF,IAAAA,CAAKk4D,WAAAA;wB,CAGxBl4D;wBAAAA,IAAAA,CAAK23D,YAAAA,IAAgB71C,EAAK5gB,MAAAA,EAC1BlB,IAAAA,CAAKywC,YAAAA,CAAajsC,IAAAA,CAAKsd,IACvB9hB,IAAAA,CAAK03D,UAAAA,CAAWlzD,IAAAA,CAAKiM,EACvB;oBAAA;oBA8BUynD,YAAYC,IAAmB,CAAA,EAAGpnB,IAAAA,CAAyB,CAAA,EAAA;wBACnE,MAAMrpB,IAAYywC,KAAY5xC,KAAKC,GAAAA;wBACnC,MAAOxmB,IAAAA,CAAKywC,YAAAA,CAAavvC,MAAAA,GAASlB,IAAAA,CAAK43D,aAAAA,EAAe;4BACpD,MAAM91C,IAAO9hB,IAAAA,CAAKywC,YAAAA,CAAazwC,IAAAA,CAAK43D,aAAAA,CAAAA,EAC9BjnD,IAAS3Q,IAAAA,CAAKy3D,OAAAA,CAAQ31C,GAAMivB;4BAClC,IAAIpgC,GAAQ;gCAuBV,MAAMynD,IAAsC5wB,CAAAA,IAAejhB,KAAKC,GAAAA,KAAQkB,KAhKvD,KAiKbriB,WAAW,IAAMrF,IAAAA,CAAKk4D,WAAAA,CAAY,GAAG1wB,MACrCxnC,IAAAA,CAAKk4D,WAAAA,CAAYxwC,GAAW8f,EAAAA;gCA0BhC,OAAA,KAJA72B,EAAO0tC,KAAAA,CAAMC,CAAAA,IACX5e,CAAAA,eAAe,IAAA;wCAAO,MAAM4e,EAAG;oCAAA,IACxBL,QAAQoa,OAAAA,CAAAA,CAAQ,EAAA,AAAA,GACtBC,IAAAA,CAAKF;4B,CAIV;4BAAA,MAAMH,IAAKj4D,IAAAA,CAAK03D,UAAAA,CAAW13D,IAAAA,CAAK43D,aAAAA,CAAAA;4BAKhC,IAJIK,KAAIA,KACRj4D,IAAAA,CAAK43D,aAAAA,IACL53D,IAAAA,CAAK23D,YAAAA,IAAgB71C,EAAK5gB,MAAAA,EAEtBqlB,KAAKC,GAAAA,KAAQkB,KApME,EAAA,EAqMjB,K;wB;wBAGA1nB,IAAAA,CAAKywC,YAAAA,CAAavvC,MAAAA,GAASlB,IAAAA,CAAK43D,aAAAA,GAG9B53D,CAAAA,IAAAA,CAAK43D,aAAAA,GApMuB,MAqM9B53D,CAAAA,IAAAA,CAAKywC,YAAAA,GAAezwC,IAAAA,CAAKywC,YAAAA,CAAatK,KAAAA,CAAMnmC,IAAAA,CAAK43D,aAAAA,GACjD53D,IAAAA,CAAK03D,UAAAA,GAAa13D,IAAAA,CAAK03D,UAAAA,CAAWvxB,KAAAA,CAAMnmC,IAAAA,CAAK43D,aAAAA,GAC7C53D,IAAAA,CAAK43D,aAAAA,GAAgB,CAAA,AAAA,GAEvBvyD,WAAW,IAAMrF,IAAAA,CAAKk4D,WAAAA,GAAAA,AAAAA,IAEtBl4D,CAAAA,IAAAA,CAAKywC,YAAAA,CAAavvC,MAAAA,GAAS,GAC3BlB,IAAAA,CAAK03D,UAAAA,CAAWx2D,MAAAA,GAAS,GACzBlB,IAAAA,CAAK23D,YAAAA,GAAe,GACpB33D,IAAAA,CAAK43D,aAAAA,GAAgB,CAAA,AAAA,CAAA,EAEvB53D,IAAAA,CAAKsvC,cAAAA,CAAe9/B,IAAAA,EACtB;oBAAA;gBAAA;gBA/MF,EAAA,WAAA,GAAA;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,W,G,E,U,G,K,C;gBC7BA,MAAM+oD,IAAU,sKAEVC,IAAW;gBAiDjB,SAASC,EAAInlB,CAAAA,EAAWolB,CAAAA,EAAAA;oBACtB,MAAMnsB,IAAI+G,EAAE5tC,QAAAA,CAAS,KACfizD,IAAKpsB,EAAErrC,MAAAA,GAAS,IAAI,MAAMqrC,IAAIA,CAAAA;oBACpC,OAAQmsB;wBACN,KAAK;4BACH,OAAOnsB,CAAAA,CAAE,EAAA;wBACX,KAAK;4BACH,OAAOosB;wBACT,KAAK;4BACH,OAAA,AAAQA,CAAAA,IAAKA,CAAAA,EAAIxyB,KAAAA,CAAM,GAAG;wBAC5B;4BACE,OAAOwyB,IAAKA;oBAAAA;gBAElB;gBAjDA,EAAA,UAAA,GAAA,SAA2B72C,CAAAA,EAAAA;oBACzB,IAAA,CAAKA,GAAM;oBAEX,IAAI82C,IAAM92C,EAAKu0C,WAAAA;oBACf,IAA4B,MAAxBuC,EAAI9tD,OAAAA,CAAQ,SAAe;wBAE7B8tD,IAAMA,EAAIzyB,KAAAA,CAAM;wBAChB,MAAMqc,IAAI+V,EAAQhU,IAAAA,CAAKqU;wBACvB,IAAIpW,GAAG;4BACL,MAAMqW,IAAOrW,CAAAA,CAAE,EAAA,GAAK,KAAKA,CAAAA,CAAE,EAAA,GAAK,MAAMA,CAAAA,CAAE,EAAA,GAAK,OAAO,KAAA;4BACpD,OAAO;gCACL/uC,KAAKmV,KAAAA,CAAMkI,SAAS0xB,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,GAAA,EAAK,MAAMqW,IAAO;gCAChEplD,KAAKmV,KAAAA,CAAMkI,SAAS0xB,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,GAAA,EAAK,MAAMqW,IAAO;gCAChEplD,KAAKmV,KAAAA,CAAMkI,SAAS0xB,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,EAAA,IAAMA,CAAAA,CAAE,GAAA,EAAK,MAAMqW,IAAO;6B;wB,C;oB,OAG/D,IAAyB,MAArBD,EAAI9tD,OAAAA,CAAQ,QAErB8tD,CAAAA,IAAMA,EAAIzyB,KAAAA,CAAM,IACZqyB,EAASjU,IAAAA,CAAKqU,MAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAA,CAAI7mD,QAAAA,CAAS6mD,EAAI13D,MAAAA,CAAAA,AAAAA,GAAS;wBAC5D,MAAM43D,IAAMF,EAAI13D,MAAAA,GAAS,GACnByP,IAAmC;4BAAC;4BAAG;4BAAG;yBAAA;wBAChD,IAAK,IAAItR,IAAI,GAAGA,IAAI,GAAA,EAAKA,EAAG;4BAC1B,MAAMu2B,IAAI9E,SAAS8nC,EAAIzyB,KAAAA,CAAM2yB,IAAMz5D,GAAGy5D,IAAMz5D,IAAIy5D,IAAM;4BACtDnoD,CAAAA,CAAOtR,EAAAA,GAAa,MAARy5D,IAAYljC,KAAK,IAAY,MAARkjC,IAAYljC,IAAY,MAARkjC,IAAYljC,KAAK,IAAIA,KAAK,C;wB;wBAE7E,OAAOjlB;oB,CAOb;gBAAA,GAqBA,EAAA,WAAA,GAAA,SAA4BkH,CAAAA,EAAiC6gD,IAAe,EAAA,EAAA;oBAC1E,MAAA,CAAOlxB,GAAGC,GAAGC,EAAAA,GAAK7vB;oBAClB,OAAO,CAAA,IAAA,EAAO4gD,EAAIjxB,GAAGkxB,GAAAA,CAAAA,EAASD,EAAIhxB,GAAGixB,GAAAA,CAAAA,EAASD,EAAI/wB,GAAGgxB,GAAAA,CACvD;gBAAA,C;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,a,G,K,GCtBa,EAAAK,aAAAA,GAAgB,G;Y;Y,M,C,G,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,U,G,E,S,G,K,C;gBClD7B,MAAA,IAAA,EAAA,MACA,IAAA,EAAA,OACA,IAAA,EAAA,OAEMC,IAAgC,EAAA;gBAEtC,EAAA,SAAA,GAAA;oBAAA,aAAA;wBACU,IAAA,CAAAC,SAAAA,GAA6CpqD,OAAOqqD,MAAAA,CAAO,IAAA,GAC3D,IAAA,CAAAC,OAAAA,GAAyBH,GACzB,IAAA,CAAAI,MAAAA,GAAiB,GACjB,IAAA,CAAAC,UAAAA,GAAqC,IAAA,CAAA,GACrC,IAAA,CAAAC,MAAAA,GAA+B;4BACrC7iB,QAAAA,CAAQ;4BACR8iB,cAAc;4BACdC,aAAAA,CAAa;wBAAA,CA8GjB;oBAAA;oBA3GS/vD,UAAAA;wBACLzJ,IAAAA,CAAKi5D,SAAAA,GAAYpqD,OAAOqqD,MAAAA,CAAO,IAAA,GAC/Bl5D,IAAAA,CAAKq5D,UAAAA,GAAa,IAAA,CAAA,GAClBr5D,IAAAA,CAAKm5D,OAAAA,GAAUH,CACjB;oBAAA;oBAEOS,gBAAgB9hD,CAAAA,EAAerO,CAAAA,EAAAA;wBAAAA,KACNkB,MAA1BxK,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA,IACjB3X,CAAAA,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA,GAAS,EAAA,AAAA;wBAE1B,MAAM+hD,IAAc15D,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA;wBAEnC,OADA+hD,EAAYl1D,IAAAA,CAAK8E,IACV;4BACLG,SAAS,IAAA;gCACP,MAAMkwD,IAAeD,EAAY5uD,OAAAA,CAAQxB;gCAAAA,OACrCqwD,KACFD,EAAY3uD,MAAAA,CAAO4uD,GAAc;4B;wB,CAIzC;oBAAA;oBAEOC,aAAajiD,CAAAA,EAAAA;wBACd3X,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA,IAAAA,OAAe3X,IAAAA,CAAKi5D,SAAAA,CAAUthD,EACnD;oBAAA;oBAEOkiD,mBAAmBvwD,CAAAA,EAAAA;wBACxBtJ,IAAAA,CAAKq5D,UAAAA,GAAa/vD;oBACpB;oBAEOwN,QAAAA;wBAEL,IAAI9W,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,EACf,IAAK,IAAI2M,IAAI7N,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAASz2C,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe,IAAIv5D,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,CAAA,EAAG2M,KAAK,GAAA,EAAKA,EAClG7N,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAGisD,MAAAA,CAAAA,CAAO;wBAG3B95D,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,GACrBz2C,IAAAA,CAAKm5D,OAAAA,GAAUH,GACfh5D,IAAAA,CAAKo5D,MAAAA,GAAS,CAChB;oBAAA;oBAEOW,KAAKpiD,CAAAA,EAAes/B,CAAAA,EAAAA;wBAKzB,IAHAj3C,IAAAA,CAAK8W,KAAAA,IACL9W,IAAAA,CAAKo5D,MAAAA,GAASzhD,GACd3X,IAAAA,CAAKm5D,OAAAA,GAAUn5D,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA,IAAUqhD,GACnCh5D,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,EAGhB,IAAK,IAAI2M,IAAI7N,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,GAAG2M,KAAK,GAAGA,IAC5C7N,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAGksD,IAAAA,CAAK9iB;6BAHvBj3C,IAAAA,CAAKq5D,UAAAA,CAAWr5D,IAAAA,CAAKo5D,MAAAA,EAAQ,QAAQniB;oBAMzC;oBAEO+iB,IAAIl4C,CAAAA,EAAmB7f,CAAAA,EAAeC,CAAAA,EAAAA;wBAC3C,IAAKlC,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,EAGhB,IAAK,IAAI2M,IAAI7N,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,GAAG2M,KAAK,GAAGA,IAC5C7N,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAGmsD,GAAAA,CAAIl4C,GAAM7f,GAAOC;6BAHnClC,IAAAA,CAAKq5D,UAAAA,CAAWr5D,IAAAA,CAAKo5D,MAAAA,EAAQ,OAAA,AAAO,CAAA,GAAA,EAAAa,aAAAA,AAAAA,EAAcn4C,GAAM7f,GAAOC;oBAMnE;oBAEO43D,OAAOI,CAAAA,EAAkBnpB,IAAAA,CAAyB,CAAA,EAAA;wBACvD,IAAK/wC,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,EAEX;4BACL,IAAIi5D,IAAAA,CAA4C,GAC5CtsD,IAAI7N,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,GAC1Bs4D,IAAAA,CAAc;4BAOlB,IANIx5D,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,IACd5oC,CAAAA,IAAI7N,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe,GAC/BY,IAAgBppB,GAChByoB,IAAcx5D,IAAAA,CAAKs5D,MAAAA,CAAOE,WAAAA,EAC1Bx5D,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,CAAA,AAAA,GAAA,CAElB+iB,KAAAA,CAAiC,MAAlBW,CAAAA,EAAyB;gCAC3C,MAAOtsD,KAAK,KACVssD,CAAAA,IAAgBn6D,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAGisD,MAAAA,CAAOI,IAAAA,CACjB,MAAlBC,CAAAA,AAAAA,GAFStsD,IAIN,IAAIssD,aAAyBlc,SAIlC,OAHAj+C,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,GACrBz2C,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe1rD,GAC3B7N,IAAAA,CAAKs5D,MAAAA,CAAOE,WAAAA,GAAAA,CAAc,GACnBW,CAAAA;gCAGXtsD;4B,CAGF;4BAAA,MAAOA,KAAK,GAAGA,IAEb,IADAssD,IAAgBn6D,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAGisD,MAAAA,CAAAA,CAAO,IACnCK,aAAyBlc,OAAAA,EAI3B,OAHAj+C,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,GACrBz2C,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe1rD,GAC3B7N,IAAAA,CAAKs5D,MAAAA,CAAOE,WAAAA,GAAAA,CAAc,GACnBW,C;wB,OAhCXn6D,IAAAA,CAAKq5D,UAAAA,CAAWr5D,IAAAA,CAAKo5D,MAAAA,EAAQ,UAAUc;wBAoCzCl6D,IAAAA,CAAKm5D,OAAAA,GAAUH,GACfh5D,IAAAA,CAAKo5D,MAAAA,GAAS,CAChB;oBAAA;gBAAA;gBAIF,MAAMgB,IAAe,IAAI,EAAAC,MAAAA;gBACzBD,EAAaE,QAAAA,CAAS,IAMtB,EAAA,UAAA,GAAA;oBAKE76D,YAAoB86D,CAAAA,CAAAA;wBAAA,IAAA,CAAAA,QAAAA,GAAAA,GAJZ,IAAA,CAAA5U,KAAAA,GAAQ,IACR,IAAA,CAAA6U,OAAAA,GAAmBJ,GACnB,IAAA,CAAAK,SAAAA,GAAAA,CAAqB,CAEkE;oBAAA;oBAExFV,KAAK9iB,CAAAA,EAAAA;wBAKVj3C,IAAAA,CAAKw6D,OAAAA,GAAWvjB,EAAO/1C,MAAAA,GAAS,KAAK+1C,EAAOA,MAAAA,CAAO,EAAA,GAAMA,EAAOrL,KAAAA,KAAUwuB,CAAAA,EAC1Ep6D,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,CACnB;oBAAA;oBAEOT,IAAIl4C,CAAAA,EAAmB7f,CAAAA,EAAeC,CAAAA,EAAAA;wBACvClC,IAAAA,CAAKy6D,SAAAA,IAGTz6D,CAAAA,IAAAA,CAAK2lD,KAAAA,IAAAA,AAAS,CAAA,GAAA,EAAAsU,aAAAA,AAAAA,EAAcn4C,GAAM7f,GAAOC,IACrClC,IAAAA,CAAK2lD,KAAAA,CAAMzkD,MAAAA,GAAS,EAAA63D,aAAAA,IACtB/4D,CAAAA,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,CAAA,AAAA,CAAA,AAAA;oBAErB;oBAEOX,OAAOI,CAAAA,EAAAA;wBACZ,IAAIQ,IAAAA,CAAkC;wBACtC,IAAI16D,IAAAA,CAAKy6D,SAAAA,EACPC,IAAAA,CAAM;6BACD,IAAIR,KACTQ,CAAAA,IAAM16D,IAAAA,CAAKu6D,QAAAA,CAASv6D,IAAAA,CAAK2lD,KAAAA,EAAO3lD,IAAAA,CAAKw6D,OAAAA,GACjCE,aAAezc,OAAAA,AAAAA,GAGjB,OAAOyc,EAAIpC,IAAAA,CAAKna,CAAAA,IACdn+C,CAAAA,IAAAA,CAAKw6D,OAAAA,GAAUJ,GACfp6D,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,GACVtc,CAAAA,AAAAA;wBAOb,OAHAn+C,IAAAA,CAAKw6D,OAAAA,GAAUJ,GACfp6D,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,GACVC,CACT;oBAAA;gBAAA,C;Y;Y,M,C,G,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,oB,G,E,sB,G,E,e,G,K,C;gBCvLF,MAAA,IAAA,EAAA,MAEA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA;gBAgBA,MAAaC;oBAGXl7D,YAAYyB,CAAAA,CAAAA;wBACVlB,IAAAA,CAAKo3D,KAAAA,GAAQ,IAAIX,WAAWv1D;oBAC9B;oBAOO05D,WAAW56C,CAAAA,EAAsBqvC,CAAAA,EAAAA;wBACtCrvD,IAAAA,CAAKo3D,KAAAA,CAAM77B,IAAAA,CAAKvb,KAAU,IAAsCqvC;oBAClE;oBASOhvD,IAAIk3C,CAAAA,EAAchpC,CAAAA,EAAoByR,CAAAA,EAAsBqvC,CAAAA,EAAAA;wBACjErvD,IAAAA,CAAKo3D,KAAAA,CAAM7oD,KAAS,IAAgCgpC,EAAAA,GAAQv3B,KAAU,IAAsCqvC;oBAC9G;oBASOwL,QAAQC,CAAAA,EAAiBvsD,CAAAA,EAAoByR,CAAAA,EAAsBqvC,CAAAA,EAAAA;wBACxE,IAAK,IAAIhwD,IAAI,GAAGA,IAAIy7D,EAAM55D,MAAAA,EAAQ7B,IAChCW,IAAAA,CAAKo3D,KAAAA,CAAM7oD,KAAS,IAAgCusD,CAAAA,CAAMz7D,EAAAA,CAAAA,GAAM2gB,KAAU,IAAsCqvC;oBAEpH;gBAAA;gBAtCF,EAAA,eAAA,GAAA;gBA2CA,MAAM0L,IAAsB;gBAOf,EAAAC,sBAAAA,GAAyB,WAAA;oBACpC,MAAM5D,IAAyB,IAAIuD,EAAgB,OAI7CM,IAAYrwB,MAAMswB,KAAAA,CAAM,IAAA,EAAMtwB,MADhB,MACoC79B,GAAAA,CAAI,CAACouD,GAAa97D,IAAcA,IAClFmoC,IAAI,CAACvlC,GAAeC,IAA0B+4D,EAAU90B,KAAAA,CAAMlkC,GAAOC,IAGrEk5D,IAAa5zB,EAAE,IAAM,MACrB6zB,IAAc7zB,EAAE,GAAM;oBAC5B6zB,EAAY72D,IAAAA,CAAK,KACjB62D,EAAY72D,IAAAA,CAAK02D,KAAAA,CAAMG,GAAa7zB,EAAE,IAAM,IAAA;oBAE5C,MAAM8zB,IAAmB9zB,EAAE,GAAoB;oBAC/C,IAAIj5B;oBAOJ,IAAKA,KAJL6oD,EAAMwD,UAAAA,CAAW,GAAD,IAEhBxD,EAAMyD,OAAAA,CAAQO,GAAY,GAAF,GAAA,IAEVE,CAAAA,CACZlE,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;wBAAM;qBAAA,EAAOtsD,GAAO,GAAF,IAC7C6oD,EAAMyD,OAAAA,CAAQrzB,EAAE,KAAM,MAAOj5B,GAAO,GAAF,IAClC6oD,EAAMyD,OAAAA,CAAQrzB,EAAE,KAAM,MAAOj5B,GAAO,GAAF,IAClC6oD,EAAM/2D,GAAAA,CAAI,KAAMkO,GAAO,GAAF,IACrB6oD,EAAM/2D,GAAAA,CAAI,IAAMkO,GAAO,IAAF,IACrB6oD,EAAM/2D,GAAAA,CAAI,KAAMkO,GAAO,GAAF,IACrB6oD,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;qBAAA,EAAOtsD,GAAO,GAAF,IACvC6oD,EAAM/2D,GAAAA,CAAI,KAAMkO,GAAO,IAAF,IACrB6oD,EAAM/2D,GAAAA,CAAI,KAAMkO,GAAO,IAAF,EAAA;oBAuFvB,OApFA6oD,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IAEd+2D,EAAM/2D,GAAAA,CAAI,IAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQO,GAAY,GAAF,GAAA,IACxBhE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;wBAAM;wBAAM;qBAAA,EAAO,GAAF,GAAA,IAC5CzD,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAE3B4vB,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;qBAAA,EAAO,GAAF,GAAA,IAChCzD,EAAMyD,OAAAA,CAAQO,GAAY,GAAF,GAAA,IACxBhE,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IAEd+2D,EAAM/2D,GAAAA,CAAI,IAAM,GAAF,IAAA,IACd+2D,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;wBAAM;qBAAA,EAAO,GAAF,GAAA,IACtCzD,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;wBAAM;qBAAA,EAAO,GAAF,GAAA,IACtCzD,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAE3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,GAAF,IAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,IAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,IAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;qBAAA,EAAO,GAAF,IAAA,IAChCzD,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,GAAF,IAAA,IAE3B4vB,EAAM/2D,GAAAA,CAAI,IAAM,GAAF,IAAA,IACd+2D,EAAMyD,OAAAA,CAAQQ,GAAa,GAAF,GAAA,IACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,GAAF,GAAA,IACd+2D,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,IAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,GAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;wBAAM;qBAAA,EAAO,GAAF,GAAA,KACtCzD,EAAMyD,OAAAA,CAAQQ,GAAa,IAAF,GAAA,KACzBjE,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQQ,GAAa,IAAF,GAAA,KACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,IAAF,GAAA,KACd+2D,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;wBAAM;qBAAA,EAAO,IAAF,GAAA,KACtCzD,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQQ,GAAa,IAAF,GAAA,KACzBjE,EAAM/2D,GAAAA,CAAI,KAAM,IAAF,GAAA,KACd+2D,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,KAAO,IAAF,GAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,IAAF,IAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,IAAF,IAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQrzB,EAAE,IAAM,MAAO,GAAF,IAAA,KAC3B4vB,EAAMyD,OAAAA,CAAQQ,GAAa,IAAF,IAAA,KACzBjE,EAAMyD,OAAAA,CAAQO,GAAY,IAAF,IAAA,KACxBhE,EAAM/2D,GAAAA,CAAI,KAAM,IAAF,GAAA,KACd+2D,EAAMyD,OAAAA,CAAQ;wBAAC;wBAAM;wBAAM;wBAAM;qBAAA,EAAO,IAAF,IAAA,IAEtCzD,EAAM/2D,GAAAA,CAAI06D,GAAqB,GAAF,GAAA,IAC7B3D,EAAM/2D,GAAAA,CAAI06D,GAAqB,GAAF,GAAA,IAC7B3D,EAAM/2D,GAAAA,CAAI06D,GAAqB,GAAF,GAAA,IAC7B3D,EAAM/2D,GAAAA,CAAI06D,GAAqB,IAAF,GAAA,KAC7B3D,EAAM/2D,GAAAA,CAAI06D,GAAqB,IAAF,IAAA,KACtB3D,CACR;gBAAA;gBAiCD,MAAaliB,UAA6B,EAAA11C,UAAAA;oBAkCxCC,YACqB87D,IAAgC,EAAAP,sBAAAA,CAAAA;wBAEnDp7D,KAAAA,IAFmB,IAAA,CAAA27D,YAAAA,GAAAA,GATX,IAAA,CAAA/kB,WAAAA,GAAiC;4BACzCjoC,OAAO;4BACPitD,UAAU,EAAA;4BACVC,YAAY;4BACZC,YAAY;4BACZC,UAAU;wBAAA,GAQV37D,IAAAA,CAAK47D,YAAAA,GAAe,GACpB57D,IAAAA,CAAK67D,YAAAA,GAAe77D,IAAAA,CAAK47D,YAAAA,EACzB57D,IAAAA,CAAKw6D,OAAAA,GAAU,IAAI,EAAAH,MAAAA,EACnBr6D,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS,IACtBt6D,IAAAA,CAAK87D,QAAAA,GAAW,GAChB97D,IAAAA,CAAKkgD,kBAAAA,GAAqB,GAG1BlgD,IAAAA,CAAK+7D,eAAAA,GAAkB,CAACj6C,GAAM7f,GAAOC,IAAAA,CAAd,GACvBlC,IAAAA,CAAKg8D,iBAAAA,GAAqBzkB,CAAAA,IAAAA,CAAD,GACzBv3C,IAAAA,CAAKi8D,aAAAA,GAAgB,CAACtkD,GAAes/B,IAAAA,CAAhB,GACrBj3C,IAAAA,CAAKk8D,aAAAA,GAAiBvkD,CAAAA,IAAAA,CAAD,GACrB3X,IAAAA,CAAKm8D,eAAAA,GAAmB5tD,CAAAA,IAAwCA,GAChEvO,IAAAA,CAAKo8D,aAAAA,GAAgBp8D,IAAAA,CAAK+7D,eAAAA,EAC1B/7D,IAAAA,CAAKq8D,gBAAAA,GAAmBxtD,OAAOqqD,MAAAA,CAAO,IAAA,GACtCl5D,IAAAA,CAAKs8D,YAAAA,GAAeztD,OAAOqqD,MAAAA,CAAO,IAAA,GAClCl5D,IAAAA,CAAKu8D,YAAAA,GAAe1tD,OAAOqqD,MAAAA,CAAO,IAAA,GAClCl5D,IAAAA,CAAK6B,QAAAA,CAAAA,AAAS,CAAA,GAAA,EAAAyB,YAAAA,AAAAA,EAAa,IAAA;4BACzBtD,IAAAA,CAAKs8D,YAAAA,GAAeztD,OAAOqqD,MAAAA,CAAO,IAAA,GAClCl5D,IAAAA,CAAKq8D,gBAAAA,GAAmBxtD,OAAOqqD,MAAAA,CAAO,IAAA,GACtCl5D,IAAAA,CAAKu8D,YAAAA,GAAe1tD,OAAOqqD,MAAAA,CAAO,IAAA,CAAK;wBAAA,KAEzCl5D,IAAAA,CAAKw8D,UAAAA,GAAax8D,IAAAA,CAAK6B,QAAAA,CAAS,IAAI,EAAA46D,SAAAA,GACpCz8D,IAAAA,CAAK08D,UAAAA,GAAa18D,IAAAA,CAAK6B,QAAAA,CAAS,IAAI,EAAA86D,SAAAA,GACpC38D,IAAAA,CAAK48D,aAAAA,GAAgB58D,IAAAA,CAAKm8D,eAAAA,EAG1Bn8D,IAAAA,CAAKiyC,kBAAAA,CAAmB;4BAAEQ,OAAO;wBAAA,GAAQ,IAAA,CAAM,EACjD;oBAAA;oBAEUoqB,YAAY/+B,CAAAA,EAAyBg/B,IAAuB;wBAAC;wBAAM;qBAAA,EAAA;wBAC3E,IAAI3e,IAAM;wBACV,IAAIrgB,EAAG6a,MAAAA,EAAQ;4BACb,IAAI7a,EAAG6a,MAAAA,CAAOz3C,MAAAA,GAAS,GACrB,MAAM,IAAIS,MAAM,qCAGlB;4BAAA,IADAw8C,IAAMrgB,EAAG6a,MAAAA,CAAOt0B,UAAAA,CAAW,IACvB85B,KAAO,KAAOA,KAAOA,IAAM,EAAA,EAC7B,MAAM,IAAIx8C,MAAM,wC;wB,CAGpB;wBAAA,IAAIm8B,EAAGga,aAAAA,EAAe;4BACpB,IAAIha,EAAGga,aAAAA,CAAc52C,MAAAA,GAAS,GAC5B,MAAM,IAAIS,MAAM,iDAElB;4BAAA,IAAK,IAAItC,IAAI,GAAGA,IAAIy+B,EAAGga,aAAAA,CAAc52C,MAAAA,EAAAA,EAAU7B,EAAG;gCAChD,MAAM09D,IAAej/B,EAAGga,aAAAA,CAAczzB,UAAAA,CAAWhlB;gCACjD,IAAI,KAAO09D,KAAgBA,IAAe,IACxC,MAAM,IAAIp7D,MAAM,8CAElBw8C;gCAAAA,MAAQ,GACRA,KAAO4e,C;4B;wB,CAGX;wBAAA,IAAwB,MAApBj/B,EAAG2U,KAAAA,CAAMvxC,MAAAA,EACX,MAAM,IAAIS,MAAM,+BAElB;wBAAA,MAAMq7D,IAAYl/B,EAAG2U,KAAAA,CAAMpuB,UAAAA,CAAW;wBACtC,IAAIy4C,CAAAA,CAAW,EAAA,GAAKE,KAAaA,IAAYF,CAAAA,CAAW,EAAA,EACtD,MAAM,IAAIn7D,MAAM,CAAA,uBAAA,EAA0Bm7D,CAAAA,CAAW,EAAA,CAAA,IAAA,EAASA,CAAAA,CAAW,EAAA,CAAA,CAAA,EAK3E;wBAAA,OAHA3e,MAAQ,GACRA,KAAO6e,GAEA7e,CACT;oBAAA;oBAEOhH,cAAcx/B,CAAAA,EAAAA;wBACnB,MAAMwmC,IAAgB,EAAA;wBACtB,MAAOxmC,GACLwmC,EAAI35C,IAAAA,CAAKwgB,OAAOC,YAAAA,CAAqB,MAARtN,KAC7BA,MAAU,CAAA;wBAEZ,OAAOwmC,EAAI8e,OAAAA,GAAUxjC,IAAAA,CAAK;oBAC5B;oBAEOke,gBAAgBruC,CAAAA,EAAAA;wBACrBtJ,IAAAA,CAAKo8D,aAAAA,GAAgB9yD;oBACvB;oBACO4zD,oBAAAA;wBACLl9D,IAAAA,CAAKo8D,aAAAA,GAAgBp8D,IAAAA,CAAK+7D,eAC5B;oBAAA;oBAEO9pB,mBAAmBnU,CAAAA,EAAyBx0B,CAAAA,EAAAA;wBACjD,MAAMqO,IAAQ3X,IAAAA,CAAK68D,WAAAA,CAAY/+B,GAAI;4BAAC;4BAAM;yBAAA;wBAAA,KACTtzB,MAA7BxK,IAAAA,CAAKu8D,YAAAA,CAAa5kD,EAAAA,IACpB3X,CAAAA,IAAAA,CAAKu8D,YAAAA,CAAa5kD,EAAAA,GAAS,EAAA,AAAA;wBAE7B,MAAM+hD,IAAc15D,IAAAA,CAAKu8D,YAAAA,CAAa5kD,EAAAA;wBAEtC,OADA+hD,EAAYl1D,IAAAA,CAAK8E,IACV;4BACLG,SAAS,IAAA;gCACP,MAAMkwD,IAAeD,EAAY5uD,OAAAA,CAAQxB;gCAAAA,OACrCqwD,KACFD,EAAY3uD,MAAAA,CAAO4uD,GAAc;4B;wB,CAIzC;oBAAA;oBACOwD,gBAAgBr/B,CAAAA,EAAAA;wBACjB99B,IAAAA,CAAKu8D,YAAAA,CAAav8D,IAAAA,CAAK68D,WAAAA,CAAY/+B,GAAI;4BAAC;4BAAM;yBAAA,EAAA,IAAA,OAAgB99B,IAAAA,CAAKu8D,YAAAA,CAAav8D,IAAAA,CAAK68D,WAAAA,CAAY/+B,GAAI;4BAAC;4BAAM;yBAAA,EAClH;oBAAA;oBACOuZ,sBAAsB/tC,CAAAA,EAAAA;wBAC3BtJ,IAAAA,CAAKk8D,aAAAA,GAAgB5yD;oBACvB;oBAEOwxC,kBAAkBwC,CAAAA,EAAch0C,CAAAA,EAAAA;wBACrCtJ,IAAAA,CAAKq8D,gBAAAA,CAAiB/e,EAAKj5B,UAAAA,CAAW,GAAA,GAAM/a;oBAC9C;oBACO8zD,oBAAoB9f,CAAAA,EAAAA;wBACrBt9C,IAAAA,CAAKq8D,gBAAAA,CAAiB/e,EAAKj5B,UAAAA,CAAW,GAAA,IAAA,OAAYrkB,IAAAA,CAAKq8D,gBAAAA,CAAiB/e,EAAKj5B,UAAAA,CAAW,GAC9F;oBAAA;oBACOizB,0BAA0BhuC,CAAAA,EAAAA;wBAC/BtJ,IAAAA,CAAKg8D,iBAAAA,GAAoB1yD;oBAC3B;oBAEO6oC,mBAAmBrU,CAAAA,EAAyBx0B,CAAAA,EAAAA;wBACjD,MAAMqO,IAAQ3X,IAAAA,CAAK68D,WAAAA,CAAY/+B;wBAAAA,KACEtzB,MAA7BxK,IAAAA,CAAKs8D,YAAAA,CAAa3kD,EAAAA,IACpB3X,CAAAA,IAAAA,CAAKs8D,YAAAA,CAAa3kD,EAAAA,GAAS,EAAA,AAAA;wBAE7B,MAAM+hD,IAAc15D,IAAAA,CAAKs8D,YAAAA,CAAa3kD,EAAAA;wBAEtC,OADA+hD,EAAYl1D,IAAAA,CAAK8E,IACV;4BACLG,SAAS,IAAA;gCACP,MAAMkwD,IAAeD,EAAY5uD,OAAAA,CAAQxB;gCAAAA,OACrCqwD,KACFD,EAAY3uD,MAAAA,CAAO4uD,GAAc;4B;wB,CAIzC;oBAAA;oBACO0D,gBAAgBv/B,CAAAA,EAAAA;wBACjB99B,IAAAA,CAAKs8D,YAAAA,CAAat8D,IAAAA,CAAK68D,WAAAA,CAAY/+B,GAAAA,IAAAA,OAAa99B,IAAAA,CAAKs8D,YAAAA,CAAat8D,IAAAA,CAAK68D,WAAAA,CAAY/+B,GACzF;oBAAA;oBACOkZ,sBAAsBvmC,CAAAA,EAAAA;wBAC3BzQ,IAAAA,CAAKi8D,aAAAA,GAAgBxrD;oBACvB;oBAEOyhC,mBAAmBpU,CAAAA,EAAyBx0B,CAAAA,EAAAA;wBACjD,OAAOtJ,IAAAA,CAAK08D,UAAAA,CAAWjD,eAAAA,CAAgBz5D,IAAAA,CAAK68D,WAAAA,CAAY/+B,IAAKx0B;oBAC/D;oBACOg0D,gBAAgBx/B,CAAAA,EAAAA;wBACrB99B,IAAAA,CAAK08D,UAAAA,CAAW9C,YAAAA,CAAa55D,IAAAA,CAAK68D,WAAAA,CAAY/+B;oBAChD;oBACO2Z,sBAAsBnuC,CAAAA,EAAAA;wBAC3BtJ,IAAAA,CAAK08D,UAAAA,CAAW7C,kBAAAA,CAAmBvwD;oBACrC;oBAEO8oC,mBAAmBz6B,CAAAA,EAAerO,CAAAA,EAAAA;wBACvC,OAAOtJ,IAAAA,CAAKw8D,UAAAA,CAAW/C,eAAAA,CAAgB9hD,GAAOrO;oBAChD;oBACOi0D,gBAAgB5lD,CAAAA,EAAAA;wBACrB3X,IAAAA,CAAKw8D,UAAAA,CAAW5C,YAAAA,CAAajiD;oBAC/B;oBACO6/B,sBAAsBluC,CAAAA,EAAAA;wBAC3BtJ,IAAAA,CAAKw8D,UAAAA,CAAW3C,kBAAAA,CAAmBvwD;oBACrC;oBAEOo0C,gBAAgBjtC,CAAAA,EAAAA;wBACrBzQ,IAAAA,CAAK48D,aAAAA,GAAgBnsD;oBACvB;oBACO+sD,oBAAAA;wBACLx9D,IAAAA,CAAK48D,aAAAA,GAAgB58D,IAAAA,CAAKm8D,eAC5B;oBAAA;oBAWOrlD,QAAAA;wBACL9W,IAAAA,CAAK67D,YAAAA,GAAe77D,IAAAA,CAAK47D,YAAAA,EACzB57D,IAAAA,CAAKw8D,UAAAA,CAAW1lD,KAAAA,IAChB9W,IAAAA,CAAK08D,UAAAA,CAAW5lD,KAAAA,IAChB9W,IAAAA,CAAKw6D,OAAAA,CAAQ1jD,KAAAA,IACb9W,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS,IACtBt6D,IAAAA,CAAK87D,QAAAA,GAAW,GAChB97D,IAAAA,CAAKkgD,kBAAAA,GAAqB,GAIK,MAA3BlgD,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,IACnBvO,CAAAA,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,GAAQ,GACzBvO,IAAAA,CAAKw2C,WAAAA,CAAYglB,QAAAA,GAAW,EAAA,AAAA,CAEhC;oBAAA;oBAKU1d,eACRvvC,CAAAA,EACAitD,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EAAAA;wBAEA37D,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,GAAQA,GACzBvO,IAAAA,CAAKw2C,WAAAA,CAAYglB,QAAAA,GAAWA,GAC5Bx7D,IAAAA,CAAKw2C,WAAAA,CAAYilB,UAAAA,GAAaA,GAC9Bz7D,IAAAA,CAAKw2C,WAAAA,CAAYklB,UAAAA,GAAaA,GAC9B17D,IAAAA,CAAKw2C,WAAAA,CAAYmlB,QAAAA,GAAWA,CAC9B;oBAAA;oBA2CO3qB,MAAMlvB,CAAAA,EAAmB5gB,CAAAA,EAAgB6vC,CAAAA,EAAAA;wBAC9C,IAGIopB,GAHA5iB,IAAO,GACPmkB,IAAa,GACbz5D,IAAQ;wBAIZ,IAAIjC,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA;4BAGnB,IAA+B,MAA3BvO,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,EACnBvO,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,GAAQ,GACzBtM,IAAQjC,IAAAA,CAAKw2C,WAAAA,CAAYmlB,QAAAA,GAAW,CAAA;iCAC/B;gCACL,IAAA,KAAsBnxD,MAAlBumC,KAA0D,MAA3B/wC,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,EAiBlD,MADAvO,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,GAAQ,GACnB,IAAI5M,MAAM,yEAAA,CAMlB;gCAAA,MAAM65D,IAAWx7D,IAAAA,CAAKw2C,WAAAA,CAAYglB,QAAAA;gCAClC,IAAIC,IAAaz7D,IAAAA,CAAKw2C,WAAAA,CAAYilB,UAAAA,GAAa;gCAC/C,OAAQz7D,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA;oCACvB,KAAK;wCACH,IAAA,CAAsB,MAAlBwiC,KAA2B0qB,IAAAA,IAC7B;4CAAA,MAAOA,KAAc,KACnBtB,CAAAA,IAAiBqB,CAAAA,CAA8BC,EAAAA,CAAYz7D,IAAAA,CAAKw6D,OAAAA,GAAAA,CAC1C,MAAlBL,CAAAA,AAAAA,GAFkBsB,IAIf,IAAItB,aAAyBlc,SAElC,OADAj+C,IAAAA,CAAKw2C,WAAAA,CAAYilB,UAAAA,GAAaA,GACvBtB,CAAAA;wCAAAA,CAIbn6D;wCAAAA,IAAAA,CAAKw2C,WAAAA,CAAYglB,QAAAA,GAAW,EAAA;wCAC5B,KACF;oCAAA,KAAK;wCACH,IAAA,CAAsB,MAAlBzqB,KAA2B0qB,IAAAA,IAC7B;4CAAA,MAAOA,KAAc,KACnBtB,CAAAA,IAAiBqB,CAAAA,CAA8BC,EAAAA,IAAAA,CACzB,MAAlBtB,CAAAA,AAAAA,GAFkBsB,IAIf,IAAItB,aAAyBlc,SAElC,OADAj+C,IAAAA,CAAKw2C,WAAAA,CAAYilB,UAAAA,GAAaA,GACvBtB,CAAAA;wCAAAA,CAIbn6D;wCAAAA,IAAAA,CAAKw2C,WAAAA,CAAYglB,QAAAA,GAAW,EAAA;wCAC5B,KACF;oCAAA,KAAK;wCAGH,IAFAjkB,IAAOz1B,CAAAA,CAAK9hB,IAAAA,CAAKw2C,WAAAA,CAAYmlB,QAAAA,CAAAA,EAC7BxB,IAAgBn6D,IAAAA,CAAK08D,UAAAA,CAAW5C,MAAAA,CAAgB,OAATviB,KAA0B,OAATA,GAAexG,IACnEopB,CAAAA,EACF,OAAOA;wCAEI,OAAT5iB,KAAev3C,CAAAA,IAAAA,CAAKw2C,WAAAA,CAAYklB,UAAAA,IAAc,CAAA,GAClD17D,IAAAA,CAAKw6D,OAAAA,CAAQ1jD,KAAAA,IACb9W,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS,IACtBt6D,IAAAA,CAAK87D,QAAAA,GAAW,CAAA;wCAChB,KACF;oCAAA,KAAK;wCAGH,IAFAvkB,IAAOz1B,CAAAA,CAAK9hB,IAAAA,CAAKw2C,WAAAA,CAAYmlB,QAAAA,CAAAA,EAC7BxB,IAAgBn6D,IAAAA,CAAKw8D,UAAAA,CAAWt6D,GAAAA,CAAa,OAATq1C,KAA0B,OAATA,GAAexG,IAChEopB,CAAAA,EACF,OAAOA;wCAEI,OAAT5iB,KAAev3C,CAAAA,IAAAA,CAAKw2C,WAAAA,CAAYklB,UAAAA,IAAc,CAAA,GAClD17D,IAAAA,CAAKw6D,OAAAA,CAAQ1jD,KAAAA,IACb9W,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS,IACtBt6D,IAAAA,CAAK87D,QAAAA,GAAW,CAAA;gCAAA;gCAIpB97D,IAAAA,CAAKw2C,WAAAA,CAAYjoC,KAAAA,GAAQ,GACzBtM,IAAQjC,IAAAA,CAAKw2C,WAAAA,CAAYmlB,QAAAA,GAAW,GACpC37D,IAAAA,CAAKkgD,kBAAAA,GAAqB,GAC1BlgD,IAAAA,CAAK67D,YAAAA,GAA6C,KAA9B77D,IAAAA,CAAKw2C,WAAAA,CAAYklB,U;4B,CAOzC;yBAAA;wBAAA,IAAK,IAAIr8D,IAAI4C,GAAO5C,IAAI6B,GAAAA,EAAU7B,EAAG;4BAKnC,OAJAk4C,IAAOz1B,CAAAA,CAAKziB,EAAAA,EAGZq8D,IAAa17D,IAAAA,CAAKu7D,YAAAA,CAAanE,KAAAA,CAAMp3D,IAAAA,CAAK67D,YAAAA,IAAgB,IAAiCtkB,CAAAA,IAAO,MAAOA,IAAOwjB,CAAAA,AAAAA,EAAAA,EACxGW,KAAc,CAAA;gCACpB,KAAK;oCAGH,IAAK,IAAI7tD,IAAIxO,IAAI,IAAA,EAAOwO,EAAG;wCACzB,IAAIA,KAAK3M,KAAAA,AAAWq2C,CAAAA,IAAOz1B,CAAAA,CAAKjU,EAAAA,AAAAA,IAAM,MAAS0pC,IAAO,OAAQA,IAAOwjB,GAAsB;4CACzF/6D,IAAAA,CAAKo8D,aAAAA,CAAct6C,GAAMziB,GAAGwO,IAC5BxO,IAAIwO,IAAI,CAAA;4CACR,K;wC,CAEF;wCAAA,IAAA,EAAMA,KAAK3M,KAAAA,AAAWq2C,CAAAA,IAAOz1B,CAAAA,CAAKjU,EAAAA,AAAAA,IAAM,MAAS0pC,IAAO,OAAQA,IAAOwjB,GAAsB;4CAC3F/6D,IAAAA,CAAKo8D,aAAAA,CAAct6C,GAAMziB,GAAGwO,IAC5BxO,IAAIwO,IAAI,CAAA;4CACR,K;wC,CAEF;wCAAA,IAAA,EAAMA,KAAK3M,KAAAA,AAAWq2C,CAAAA,IAAOz1B,CAAAA,CAAKjU,EAAAA,AAAAA,IAAM,MAAS0pC,IAAO,OAAQA,IAAOwjB,GAAsB;4CAC3F/6D,IAAAA,CAAKo8D,aAAAA,CAAct6C,GAAMziB,GAAGwO,IAC5BxO,IAAIwO,IAAI,CAAA;4CACR,K;wC,CAEF;wCAAA,IAAA,EAAMA,KAAK3M,KAAAA,AAAWq2C,CAAAA,IAAOz1B,CAAAA,CAAKjU,EAAAA,AAAAA,IAAM,MAAS0pC,IAAO,OAAQA,IAAOwjB,GAAsB;4CAC3F/6D,IAAAA,CAAKo8D,aAAAA,CAAct6C,GAAMziB,GAAGwO,IAC5BxO,IAAIwO,IAAI,CAAA;4CACR,K;wC,C;oC;oCAGJ,KACF;gCAAA,KAAK;oCACC7N,IAAAA,CAAKq8D,gBAAAA,CAAiB9kB,EAAAA,GAAOv3C,IAAAA,CAAKq8D,gBAAAA,CAAiB9kB,EAAAA,KAClDv3C,IAAAA,CAAKg8D,iBAAAA,CAAkBzkB,EAAAA,EAC5Bv3C,IAAAA,CAAKkgD,kBAAAA,GAAqB,CAAA;oCAC1B,KACF;gCAAA,KAAK;oCACH,KACF;gCAAA,KAAK;oCAUH,IAT8BlgD,IAAAA,CAAK48D,aAAAA,CACjC;wCACEp5D,UAAUnE;wCACVk4C,MAAAA;wCACAskB,cAAc77D,IAAAA,CAAK67D,YAAAA;wCACnB4B,SAASz9D,IAAAA,CAAK87D,QAAAA;wCACd7kB,QAAQj3C,IAAAA,CAAKw6D,OAAAA;wCACbkD,OAAAA,CAAO;oCAAA,GAEAA,KAAAA,EAAO;oCAElB,KACF;gCAAA,KAAK;oCAEH,MAAMlC,IAAWx7D,IAAAA,CAAKs8D,YAAAA,CAAat8D,IAAAA,CAAK87D,QAAAA,IAAY,IAAIvkB,EAAAA;oCACxD,IAAI1pC,IAAI2tD,IAAWA,EAASt6D,MAAAA,GAAS,IAAA,EAAK;oCAC1C,MAAO2M,KAAK,KAGVssD,CAAAA,IAAgBqB,CAAAA,CAAS3tD,EAAAA,CAAG7N,IAAAA,CAAKw6D,OAAAA,GAAAA,CACX,MAAlBL,CAAAA,AAAAA,GAJStsD,IAMN,IAAIssD,aAAyBlc,SAElC,OADAj+C,IAAAA,CAAK89C,cAAAA,CAAe,GAAqB0d,GAAU3tD,GAAG6tD,GAAYr8D,IAC3D86D,CAAAA;oCAGPtsD,IAAI,KACN7N,IAAAA,CAAKi8D,aAAAA,CAAcj8D,IAAAA,CAAK87D,QAAAA,IAAY,IAAIvkB,GAAMv3C,IAAAA,CAAKw6D,OAAAA,GAErDx6D,IAAAA,CAAKkgD,kBAAAA,GAAqB,CAAA;oCAC1B,KACF;gCAAA,KAAK;oCAEH,GACE,OAAQ3I;wCACN,KAAK;4CACHv3C,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS;4CACtB,KACF;wCAAA,KAAK;4CACHt6D,IAAAA,CAAKw6D,OAAAA,CAAQmD,WAAAA,CAAAA;4CACb,KACF;wCAAA;4CACE39D,IAAAA,CAAKw6D,OAAAA,CAAQoD,QAAAA,CAASrmB,IAAO;oCAAA;2CAAA,EAExBl4C,IAAI6B,KAAAA,AAAWq2C,CAAAA,IAAOz1B,CAAAA,CAAKziB,EAAAA,AAAAA,IAAM,MAAQk4C,IAAO,IAC3Dl4C;oCAAAA;oCACA,KACF;gCAAA,KAAK;oCACHW,IAAAA,CAAK87D,QAAAA,KAAa,GAClB97D,IAAAA,CAAK87D,QAAAA,IAAYvkB,CAAAA;oCACjB,KACF;gCAAA,KAAK;oCACH,MAAMsmB,IAAc79D,IAAAA,CAAKu8D,YAAAA,CAAav8D,IAAAA,CAAK87D,QAAAA,IAAY,IAAIvkB,EAAAA;oCAC3D,IAAIumB,IAAKD,IAAcA,EAAY38D,MAAAA,GAAS,IAAA,EAAK;oCACjD,MAAO48D,KAAM,KAGX3D,CAAAA,IAAgB0D,CAAAA,CAAYC,EAAAA,IAAAA,CACN,MAAlB3D,CAAAA,AAAAA,GAJU2D,IAMP,IAAI3D,aAAyBlc,SAElC,OADAj+C,IAAAA,CAAK89C,cAAAA,CAAe,GAAqB+f,GAAaC,GAAIpC,GAAYr8D,IAC/D86D,CAAAA;oCAGP2D,IAAK,KACP99D,IAAAA,CAAKk8D,aAAAA,CAAcl8D,IAAAA,CAAK87D,QAAAA,IAAY,IAAIvkB,IAE1Cv3C,IAAAA,CAAKkgD,kBAAAA,GAAqB,CAAA;oCAC1B,KACF;gCAAA,KAAK;oCACHlgD,IAAAA,CAAKw6D,OAAAA,CAAQ1jD,KAAAA,IACb9W,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS,IACtBt6D,IAAAA,CAAK87D,QAAAA,GAAW,CAAA;oCAChB,KACF;gCAAA,KAAK;oCACH97D,IAAAA,CAAK08D,UAAAA,CAAW3C,IAAAA,CAAK/5D,IAAAA,CAAK87D,QAAAA,IAAY,IAAIvkB,GAAMv3C,IAAAA,CAAKw6D,OAAAA;oCACrD,KACF;gCAAA,KAAK;oCAGH,IAAK,IAAI3sD,IAAIxO,IAAI,IAAA,EAAOwO,EACtB,IAAIA,KAAK3M,KAA+B,OAApBq2C,CAAAA,IAAOz1B,CAAAA,CAAKjU,EAAAA,AAAAA,KAAyB,OAAT0pC,KAA0B,OAATA,KAAkBA,IAAO,OAAQA,IAAOwjB,GAAsB;wCAC7H/6D,IAAAA,CAAK08D,UAAAA,CAAW1C,GAAAA,CAAIl4C,GAAMziB,GAAGwO,IAC7BxO,IAAIwO,IAAI,CAAA;wCACR,K;oC,CAGJ;oCAAA,KACF;gCAAA,KAAK;oCAEH,IADAssD,IAAgBn6D,IAAAA,CAAK08D,UAAAA,CAAW5C,MAAAA,CAAgB,OAATviB,KAA0B,OAATA,IACpD4iB,CAAAA,EAEF,OADAn6D,IAAAA,CAAK89C,cAAAA,CAAe,GAAqB,EAAA,EAAI,GAAG4d,GAAYr8D,IACrD86D,CAAAA;oCAEI,OAAT5iB,KAAemkB,CAAAA,KAAc,CAAA,GACjC17D,IAAAA,CAAKw6D,OAAAA,CAAQ1jD,KAAAA,IACb9W,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS,IACtBt6D,IAAAA,CAAK87D,QAAAA,GAAW,GAChB97D,IAAAA,CAAKkgD,kBAAAA,GAAqB,CAAA;oCAC1B,KACF;gCAAA,KAAK;oCACHlgD,IAAAA,CAAKw8D,UAAAA,CAAWv6D,KAAAA;oCAChB,KACF;gCAAA,KAAK;oCAEH,IAAK,IAAI4L,IAAIxO,IAAI,IAAKwO,IACpB,IAAIA,KAAK3M,KAAAA,AAAWq2C,CAAAA,IAAOz1B,CAAAA,CAAKjU,EAAAA,AAAAA,IAAM,MAAS0pC,IAAO,OAAQA,IAAOwjB,GAAsB;wCACzF/6D,IAAAA,CAAKw8D,UAAAA,CAAWxC,GAAAA,CAAIl4C,GAAMziB,GAAGwO,IAC7BxO,IAAIwO,IAAI,CAAA;wCACR,K;oC,CAGJ;oCAAA,KACF;gCAAA,KAAK;oCAEH,IADAssD,IAAgBn6D,IAAAA,CAAKw8D,UAAAA,CAAWt6D,GAAAA,CAAa,OAATq1C,KAA0B,OAATA,IACjD4iB,CAAAA,EAEF,OADAn6D,IAAAA,CAAK89C,cAAAA,CAAe,GAAqB,EAAA,EAAI,GAAG4d,GAAYr8D,IACrD86D,CAAAA;oCAEI,OAAT5iB,KAAemkB,CAAAA,KAAc,CAAA,GACjC17D,IAAAA,CAAKw6D,OAAAA,CAAQ1jD,KAAAA,IACb9W,IAAAA,CAAKw6D,OAAAA,CAAQF,QAAAA,CAAS,IACtBt6D,IAAAA,CAAK87D,QAAAA,GAAW,GAChB97D,IAAAA,CAAKkgD,kBAAAA,GAAqB,CAAA;4BAAA;4BAG9BlgD,IAAAA,CAAK67D,YAAAA,GAA4B,KAAbH;wB;oBAExB;gBAAA;gBAjjBF,EAAA,oBAAA,GAAA;Y;Y,M,C,G,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,U,G,E,S,G,K,C;gBC/NA,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,MAGM1C,IAAgC,EAAA;gBAEtC,EAAA,SAAA,GAAA;oBAAA,aAAA;wBACU,IAAA,CAAA+E,MAAAA,GAAS,GACT,IAAA,CAAA5E,OAAAA,GAAUH,GACV,IAAA,CAAAxG,GAAAA,GAAAA,IACA,IAAA,CAAAyG,SAAAA,GAA6CpqD,OAAOqqD,MAAAA,CAAO,IAAA,GAC3D,IAAA,CAAAG,UAAAA,GAAqC,IAAA,CAAA,GACrC,IAAA,CAAAC,MAAAA,GAA+B;4BACrC7iB,QAAAA,CAAQ;4BACR8iB,cAAc;4BACdC,aAAAA,CAAa;wBAAA,CAwKjB;oBAAA;oBArKSC,gBAAgB9hD,CAAAA,EAAerO,CAAAA,EAAAA;wBAAAA,KACNkB,MAA1BxK,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA,IACjB3X,CAAAA,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA,GAAS,EAAA,AAAA;wBAE1B,MAAM+hD,IAAc15D,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA;wBAEnC,OADA+hD,EAAYl1D,IAAAA,CAAK8E,IACV;4BACLG,SAAS,IAAA;gCACP,MAAMkwD,IAAeD,EAAY5uD,OAAAA,CAAQxB;gCAAAA,OACrCqwD,KACFD,EAAY3uD,MAAAA,CAAO4uD,GAAc;4B;wB,CAIzC;oBAAA;oBACOC,aAAajiD,CAAAA,EAAAA;wBACd3X,IAAAA,CAAKi5D,SAAAA,CAAUthD,EAAAA,IAAAA,OAAe3X,IAAAA,CAAKi5D,SAAAA,CAAUthD,EACnD;oBAAA;oBACOkiD,mBAAmBvwD,CAAAA,EAAAA;wBACxBtJ,IAAAA,CAAKq5D,UAAAA,GAAa/vD;oBACpB;oBAEOG,UAAAA;wBACLzJ,IAAAA,CAAKi5D,SAAAA,GAAYpqD,OAAOqqD,MAAAA,CAAO,IAAA,GAC/Bl5D,IAAAA,CAAKq5D,UAAAA,GAAa,IAAA,CAAA,GAClBr5D,IAAAA,CAAKm5D,OAAAA,GAAUH,CACjB;oBAAA;oBAEOliD,QAAAA;wBAEL,IAAoB,MAAhB9W,IAAAA,CAAK+9D,MAAAA,EACP,IAAK,IAAIlwD,IAAI7N,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAASz2C,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe,IAAIv5D,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,CAAA,EAAG2M,KAAK,GAAA,EAAKA,EAClG7N,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAG3L,GAAAA,CAAAA,CAAI;wBAGxBlC,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,GACrBz2C,IAAAA,CAAKm5D,OAAAA,GAAUH,GACfh5D,IAAAA,CAAKwyD,GAAAA,GAAAA,IACLxyD,IAAAA,CAAK+9D,MAAAA,GAAS,CAChB;oBAAA;oBAEQ9W,SAAAA;wBAEN,IADAjnD,IAAAA,CAAKm5D,OAAAA,GAAUn5D,IAAAA,CAAKi5D,SAAAA,CAAUj5D,IAAAA,CAAKwyD,GAAAA,CAAAA,IAAQwG,GACtCh5D,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,EAGhB,IAAK,IAAI2M,IAAI7N,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,GAAG2M,KAAK,GAAGA,IAC5C7N,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAG5L,KAAAA;6BAHlBjC,IAAAA,CAAKq5D,UAAAA,CAAWr5D,IAAAA,CAAKwyD,GAAAA,EAAK;oBAM9B;oBAEQwL,KAAKl8C,CAAAA,EAAmB7f,CAAAA,EAAeC,CAAAA,EAAAA;wBAC7C,IAAKlC,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,EAGhB,IAAK,IAAI2M,IAAI7N,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,GAAG2M,KAAK,GAAGA,IAC5C7N,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAGmsD,GAAAA,CAAIl4C,GAAM7f,GAAOC;6BAHnClC,IAAAA,CAAKq5D,UAAAA,CAAWr5D,IAAAA,CAAKwyD,GAAAA,EAAK,OAAA,AAAO,CAAA,GAAA,EAAAyH,aAAAA,AAAAA,EAAcn4C,GAAM7f,GAAOC;oBAMhE;oBAEOD,QAAAA;wBAELjC,IAAAA,CAAK8W,KAAAA,IACL9W,IAAAA,CAAK+9D,MAAAA,GAAS,CAChB;oBAAA;oBASO/D,IAAIl4C,CAAAA,EAAmB7f,CAAAA,EAAeC,CAAAA,EAAAA;wBAC3C,IAAoB,MAAhBlC,IAAAA,CAAK+9D,MAAAA,EAAT;4BAGA,IAAoB,MAAhB/9D,IAAAA,CAAK+9D,MAAAA,EACP,MAAO97D,IAAQC,GAAK;gCAClB,MAAMq1C,IAAOz1B,CAAAA,CAAK7f,IAAAA;gCAClB,IAAa,OAATs1C,GAAe;oCACjBv3C,IAAAA,CAAK+9D,MAAAA,GAAS,GACd/9D,IAAAA,CAAKinD,MAAAA,EAAAA;oCACL,K;gC,CAEF;gCAAA,IAAI1P,IAAO,MAAQ,KAAOA,GAExB,OAAA,KADAv3C,CAAAA,IAAAA,CAAK+9D,MAAAA,GAAS,CAAA;gCAAA,OAGZ/9D,IAAAA,CAAKwyD,GAAAA,IACPxyD,CAAAA,IAAAA,CAAKwyD,GAAAA,GAAM,CAAA,GAEbxyD,IAAAA,CAAKwyD,GAAAA,GAAiB,KAAXxyD,IAAAA,CAAKwyD,GAAAA,GAAWjb,IAAO,E;4B;4BAGlB,MAAhBv3C,IAAAA,CAAK+9D,MAAAA,IAA+B77D,IAAMD,IAAQ,KACpDjC,IAAAA,CAAKg+D,IAAAA,CAAKl8C,GAAM7f,GAAOC;wB,CAE3B;oBAAA;oBAOOA,IAAIg4D,CAAAA,EAAkBnpB,IAAAA,CAAyB,CAAA,EAAA;wBACpD,IAAoB,MAAhB/wC,IAAAA,CAAK+9D,MAAAA,EAAT;4BAIA,IAAoB,MAAhB/9D,IAAAA,CAAK+9D,MAAAA;gCAQP,IAJoB,MAAhB/9D,IAAAA,CAAK+9D,MAAAA,IACP/9D,IAAAA,CAAKinD,MAAAA,IAGFjnD,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,EAEX;oCACL,IAAIi5D,IAAAA,CAA4C,GAC5CtsD,IAAI7N,IAAAA,CAAKm5D,OAAAA,CAAQj4D,MAAAA,GAAS,GAC1Bs4D,IAAAA,CAAc;oCAOlB,IANIx5D,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,IACd5oC,CAAAA,IAAI7N,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe,GAC/BY,IAAgBppB,GAChByoB,IAAcx5D,IAAAA,CAAKs5D,MAAAA,CAAOE,WAAAA,EAC1Bx5D,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,CAAA,AAAA,GAAA,CAElB+iB,KAAAA,CAAiC,MAAlBW,CAAAA,EAAyB;wCAC3C,MAAOtsD,KAAK,KACVssD,CAAAA,IAAgBn6D,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAG3L,GAAAA,CAAIg4D,IAAAA,CACd,MAAlBC,CAAAA,AAAAA,GAFStsD,IAIN,IAAIssD,aAAyBlc,SAIlC,OAHAj+C,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,GACrBz2C,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe1rD,GAC3B7N,IAAAA,CAAKs5D,MAAAA,CAAOE,WAAAA,GAAAA,CAAc,GACnBW,CAAAA;wCAGXtsD;oC,CAKF;oCAAA,MAAOA,KAAK,GAAGA,IAEb,IADAssD,IAAgBn6D,IAAAA,CAAKm5D,OAAAA,CAAQtrD,EAAAA,CAAG3L,GAAAA,CAAAA,CAAI,IAChCi4D,aAAyBlc,OAAAA,EAI3B,OAHAj+C,IAAAA,CAAKs5D,MAAAA,CAAO7iB,MAAAA,GAAAA,CAAS,GACrBz2C,IAAAA,CAAKs5D,MAAAA,CAAOC,YAAAA,GAAe1rD,GAC3B7N,IAAAA,CAAKs5D,MAAAA,CAAOE,WAAAA,GAAAA,CAAc,GACnBW,C;gC,OAlCXn6D,IAAAA,CAAKq5D,UAAAA,CAAWr5D,IAAAA,CAAKwyD,GAAAA,EAAK,OAAO0H;6BAwCrCl6D;4BAAAA,IAAAA,CAAKm5D,OAAAA,GAAUH,GACfh5D,IAAAA,CAAKwyD,GAAAA,GAAAA,IACLxyD,IAAAA,CAAK+9D,MAAAA,GAAS,C;wB,CAChB;oBAAA;gBAAA,GAOF,EAAA,UAAA,GAAA;oBAIEt+D,YAAoB86D,CAAAA,CAAAA;wBAAA,IAAA,CAAAA,QAAAA,GAAAA,GAHZ,IAAA,CAAA5U,KAAAA,GAAQ,IACR,IAAA,CAAA8U,SAAAA,GAAAA,CAAqB,CAEiD;oBAAA;oBAEvEx4D,QAAAA;wBACLjC,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,CACnB;oBAAA;oBAEOT,IAAIl4C,CAAAA,EAAmB7f,CAAAA,EAAeC,CAAAA,EAAAA;wBACvClC,IAAAA,CAAKy6D,SAAAA,IAGTz6D,CAAAA,IAAAA,CAAK2lD,KAAAA,IAAAA,AAAS,CAAA,GAAA,EAAAsU,aAAAA,AAAAA,EAAcn4C,GAAM7f,GAAOC,IACrClC,IAAAA,CAAK2lD,KAAAA,CAAMzkD,MAAAA,GAAS,EAAA63D,aAAAA,IACtB/4D,CAAAA,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,CAAA,AAAA,CAAA,AAAA;oBAErB;oBAEOv4D,IAAIg4D,CAAAA,EAAAA;wBACT,IAAIQ,IAAAA,CAAkC;wBACtC,IAAI16D,IAAAA,CAAKy6D,SAAAA,EACPC,IAAAA,CAAM;6BACD,IAAIR,KACTQ,CAAAA,IAAM16D,IAAAA,CAAKu6D,QAAAA,CAASv6D,IAAAA,CAAK2lD,KAAAA,GACrB+U,aAAezc,OAAAA,AAAAA,GAGjB,OAAOyc,EAAIpC,IAAAA,CAAKna,CAAAA,IACdn+C,CAAAA,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,GACVtc,CAAAA,AAAAA;wBAMb,OAFAn+C,IAAAA,CAAK2lD,KAAAA,GAAQ,IACb3lD,IAAAA,CAAKy6D,SAAAA,GAAAA,CAAY,GACVC,CACT;oBAAA;gBAAA,C;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,M,G,K,C;gBCrOF,MAAMuD,IAAY;gBAuBlB,MAAa5D;oBAyCX56D,YAAmBsrC,IAAoB,EAAA,EAAWmzB,IAA6B,EAAA,CAAA;wBAC7E,IADiB,IAAA,CAAAnzB,SAAAA,GAAAA,GAA+B,IAAA,CAAAmzB,kBAAAA,GAAAA,GAC5CA,IA/Dc,GAAA,EAgEhB,MAAM,IAAIv8D,MAAM,mDAElB3B;wBAAAA,IAAAA,CAAKi3C,MAAAA,GAAS,IAAIknB,WAAWpzB,IAC7B/qC,IAAAA,CAAKkB,MAAAA,GAAS,GACdlB,IAAAA,CAAKo+D,UAAAA,GAAa,IAAID,WAAWD,IACjCl+D,IAAAA,CAAKq+D,gBAAAA,GAAmB,GACxBr+D,IAAAA,CAAKs+D,aAAAA,GAAgB,IAAIC,YAAYxzB,IACrC/qC,IAAAA,CAAKw+D,aAAAA,GAAAA,CAAgB,GACrBx+D,IAAAA,CAAKy+D,gBAAAA,GAAAA,CAAmB,GACxBz+D,IAAAA,CAAK0+D,WAAAA,GAAAA,CAAc,CACrB;oBAAA;oBAnCOt/B,OAAAA,UAAiBqnB,CAAAA,EAAAA;wBACtB,MAAMxP,IAAS,IAAIojB;wBACnB,IAAA,CAAK5T,EAAOvlD,MAAAA,EACV,OAAO+1C;wBAGT,IAAK,IAAI53C,IAAKurC,MAAMoB,OAAAA,CAAQya,CAAAA,CAAO,EAAA,IAAO,IAAI,CAAA,EAAGpnD,IAAIonD,EAAOvlD,MAAAA,EAAAA,EAAU7B,EAAG;4BACvE,MAAM6H,IAAQu/C,CAAAA,CAAOpnD,EAAAA;4BACrB,IAAIurC,MAAMoB,OAAAA,CAAQ9kC,IAChB,IAAK,IAAIy3D,IAAI,GAAGA,IAAIz3D,EAAMhG,MAAAA,EAAAA,EAAUy9D,EAClC1nB,EAAO0mB,WAAAA,CAAYz2D,CAAAA,CAAMy3D,EAAAA;iCAG3B1nB,EAAOqjB,QAAAA,CAASpzD;wB;wBAGpB,OAAO+vC;oBACT;oBAuBOrL,QAAAA;wBACL,MAAMgzB,IAAY,IAAIvE,EAAOr6D,IAAAA,CAAK+qC,SAAAA,EAAW/qC,IAAAA,CAAKk+D,kBAAAA;wBASlD,OARAU,EAAU3nB,MAAAA,CAAOruC,GAAAA,CAAI5I,IAAAA,CAAKi3C,MAAAA,GAC1B2nB,EAAU19D,MAAAA,GAASlB,IAAAA,CAAKkB,MAAAA,EACxB09D,EAAUR,UAAAA,CAAWx1D,GAAAA,CAAI5I,IAAAA,CAAKo+D,UAAAA,GAC9BQ,EAAUP,gBAAAA,GAAmBr+D,IAAAA,CAAKq+D,gBAAAA,EAClCO,EAAUN,aAAAA,CAAc11D,GAAAA,CAAI5I,IAAAA,CAAKs+D,aAAAA,GACjCM,EAAUJ,aAAAA,GAAgBx+D,IAAAA,CAAKw+D,aAAAA,EAC/BI,EAAUH,gBAAAA,GAAmBz+D,IAAAA,CAAKy+D,gBAAAA,EAClCG,EAAUF,WAAAA,GAAc1+D,IAAAA,CAAK0+D,WAAAA,EACtBE,CACT;oBAAA;oBAQOxnB,UAAAA;wBACL,MAAM+G,IAAmB,EAAA;wBACzB,IAAK,IAAI9+C,IAAI,GAAGA,IAAIW,IAAAA,CAAKkB,MAAAA,EAAAA,EAAU7B,EAAG;4BACpC8+C,EAAI35C,IAAAA,CAAKxE,IAAAA,CAAKi3C,MAAAA,CAAO53C,EAAAA;4BACrB,MAAM4C,IAAQjC,IAAAA,CAAKs+D,aAAAA,CAAcj/D,EAAAA,IAAM,GACjC6C,IAA8B,MAAxBlC,IAAAA,CAAKs+D,aAAAA,CAAcj/D,EAAAA;4BAC3B6C,IAAMD,IAAQ,KAChBk8C,EAAI35C,IAAAA,CAAKomC,MAAM8T,SAAAA,CAAUvY,KAAAA,CAAM6M,IAAAA,CAAKhzC,IAAAA,CAAKo+D,UAAAA,EAAYn8D,GAAOC;wB;wBAGhE,OAAOi8C;oBACT;oBAKOrnC,QAAAA;wBACL9W,IAAAA,CAAKkB,MAAAA,GAAS,GACdlB,IAAAA,CAAKq+D,gBAAAA,GAAmB,GACxBr+D,IAAAA,CAAKw+D,aAAAA,GAAAA,CAAgB,GACrBx+D,IAAAA,CAAKy+D,gBAAAA,GAAAA,CAAmB,GACxBz+D,IAAAA,CAAK0+D,WAAAA,GAAAA,CAAc,CACrB;oBAAA;oBASOpE,SAASpzD,CAAAA,EAAAA;wBAEd,IADAlH,IAAAA,CAAK0+D,WAAAA,GAAAA,CAAc,GACf1+D,IAAAA,CAAKkB,MAAAA,IAAUlB,IAAAA,CAAK+qC,SAAAA,EACtB/qC,IAAAA,CAAKw+D,aAAAA,GAAAA,CAAgB;6BADvB;4BAIA,IAAIt3D,IAAAA,IACF,MAAM,IAAIvF,MAAM,yCAElB3B;4BAAAA,IAAAA,CAAKs+D,aAAAA,CAAct+D,IAAAA,CAAKkB,MAAAA,CAAAA,GAAUlB,IAAAA,CAAKq+D,gBAAAA,IAAoB,IAAIr+D,IAAAA,CAAKq+D,gBAAAA,EACpEr+D,IAAAA,CAAKi3C,MAAAA,CAAOj3C,IAAAA,CAAKkB,MAAAA,GAAAA,GAAYgG,IAAQ+2D,IAAYA,IAAY/2D,C;wB,CAC/D;oBAAA;oBASOy2D,YAAYz2D,CAAAA,EAAAA;wBAEjB,IADAlH,IAAAA,CAAK0+D,WAAAA,GAAAA,CAAc,GACd1+D,IAAAA,CAAKkB,MAAAA;4BAGV,IAAIlB,IAAAA,CAAKw+D,aAAAA,IAAiBx+D,IAAAA,CAAKq+D,gBAAAA,IAAoBr+D,IAAAA,CAAKk+D,kBAAAA,EACtDl+D,IAAAA,CAAKy+D,gBAAAA,GAAAA,CAAmB;iCAD1B;gCAIA,IAAIv3D,IAAAA,IACF,MAAM,IAAIvF,MAAM,yCAElB3B;gCAAAA,IAAAA,CAAKo+D,UAAAA,CAAWp+D,IAAAA,CAAKq+D,gBAAAA,GAAAA,GAAsBn3D,IAAQ+2D,IAAYA,IAAY/2D,CAAAA,EAC3ElH,IAAAA,CAAKs+D,aAAAA,CAAct+D,IAAAA,CAAKkB,MAAAA,GAAS,EAAA,E;4B,CACnC;yBAAA;oBAAA;oBAKOkiD,aAAaiB,CAAAA,EAAAA;wBAClB,OAAA,AAAmC,CAAA,MAA1BrkD,IAAAA,CAAKs+D,aAAAA,CAAcja,EAAAA,AAAAA,IAAgBrkD,CAAAA,IAAAA,CAAKs+D,aAAAA,CAAcja,EAAAA,IAAQ,CAAA,IAAK;oBAC9E;oBAOOf,aAAae,CAAAA,EAAAA;wBAClB,MAAMpiD,IAAQjC,IAAAA,CAAKs+D,aAAAA,CAAcja,EAAAA,IAAQ,GACnCniD,IAAgC,MAA1BlC,IAAAA,CAAKs+D,aAAAA,CAAcja,EAAAA;wBAC/B,OAAIniD,IAAMD,IAAQ,IACTjC,IAAAA,CAAKo+D,UAAAA,CAAW9iC,QAAAA,CAASr5B,GAAOC,KAElC,IACT;oBAAA;oBAMO28D,kBAAAA;wBACL,MAAMluD,IAAsC,CAAC;wBAC7C,IAAK,IAAItR,IAAI,GAAGA,IAAIW,IAAAA,CAAKkB,MAAAA,EAAAA,EAAU7B,EAAG;4BACpC,MAAM4C,IAAQjC,IAAAA,CAAKs+D,aAAAA,CAAcj/D,EAAAA,IAAM,GACjC6C,IAA8B,MAAxBlC,IAAAA,CAAKs+D,aAAAA,CAAcj/D,EAAAA;4BAC3B6C,IAAMD,IAAQ,KAChB0O,CAAAA,CAAAA,CAAOtR,EAAAA,GAAKW,IAAAA,CAAKo+D,UAAAA,CAAWj4B,KAAAA,CAAMlkC,GAAOC,EAAAA;wB;wBAG7C,OAAOyO;oBACT;oBAMOitD,SAAS12D,CAAAA,EAAAA;wBACd,IAAIhG;wBACJ,IAAIlB,IAAAA,CAAKw+D,aAAAA,IAAAA,CACFt9D,CAAAA,IAASlB,IAAAA,CAAK0+D,WAAAA,GAAc1+D,IAAAA,CAAKq+D,gBAAAA,GAAmBr+D,IAAAA,CAAKkB,MAAAA,AAAAA,KAC1DlB,IAAAA,CAAK0+D,WAAAA,IAAe1+D,IAAAA,CAAKy+D,gBAAAA,EAE7B;wBAGF,MAAMK,IAAQ9+D,IAAAA,CAAK0+D,WAAAA,GAAc1+D,IAAAA,CAAKo+D,UAAAA,GAAap+D,IAAAA,CAAKi3C,MAAAA,EAClD8nB,IAAMD,CAAAA,CAAM59D,IAAS,EAAA;wBAC3B49D,CAAAA,CAAM59D,IAAS,EAAA,GAAA,CAAM69D,IAAMtrD,KAAKC,GAAAA,CAAU,KAANqrD,IAAW73D,GAAO+2D,KAAa/2D,CACrE;oBAAA;gBAAA;gBArMF,EAAA,MAAA,GAAA;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,Y,G,K,GCjBA,EAAA,YAAA,GAAA;oBAGEzH,aAAAA;wBAFU,IAAA,CAAAu/D,OAAAA,GAA0B,EAGpC;oBAAA;oBAEOv1D,UAAAA;wBACL,IAAK,IAAIpK,IAAIW,IAAAA,CAAKg/D,OAAAA,CAAQ99D,MAAAA,GAAS,GAAG7B,KAAK,GAAGA,IAC5CW,IAAAA,CAAKg/D,OAAAA,CAAQ3/D,EAAAA,CAAG4/D,QAAAA,CAASx1D,OAAAA;oBAE7B;oBAEOy1D,UAAUC,CAAAA,EAAoBF,CAAAA,EAAAA;wBACnC,MAAMG,IAA4B;4BAChCH,UAAAA;4BACAx1D,SAASw1D,EAASx1D,OAAAA;4BAClB8oD,YAAAA,CAAY;wBAAA;wBAEdvyD,IAAAA,CAAKg/D,OAAAA,CAAQx6D,IAAAA,CAAK46D,IAClBH,EAASx1D,OAAAA,GAAU,IAAMzJ,IAAAA,CAAKq/D,oBAAAA,CAAqBD,IACnDH,EAAS/wD,QAAAA,CAASixD,EACpB;oBAAA;oBAEQE,qBAAqBD,CAAAA,EAAAA;wBAC3B,IAAIA,EAAY7M,UAAAA,EAEd;wBAEF,IAAI5kD,IAAAA;wBACJ,IAAK,IAAItO,IAAI,GAAGA,IAAIW,IAAAA,CAAKg/D,OAAAA,CAAQ99D,MAAAA,EAAQ7B,IACvC,IAAIW,IAAAA,CAAKg/D,OAAAA,CAAQ3/D,EAAAA,KAAO+/D,GAAa;4BACnCzxD,IAAQtO;4BACR,K;wB,CAGJ;wBAAA,IAAA,OAAIsO,GACF,MAAM,IAAIhM,MAAM,uDAElBy9D;wBAAAA,EAAY7M,UAAAA,GAAAA,CAAa,GACzB6M,EAAY31D,OAAAA,CAAQyxD,KAAAA,CAAMkE,EAAYH,QAAAA,GACtCj/D,IAAAA,CAAKg/D,OAAAA,CAAQj0D,MAAAA,CAAO4C,GAAO,EAC7B;oBAAA;gBAAA,C;Y;Y,M,C,G,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,a,G,K,C;gBC/CF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA;gBAEA,EAAA,aAAA,GAAA;oBACElO,YACUqvD,CAAAA,EACQzlD,CAAAA,CAAAA;wBADR,IAAA,CAAAylD,OAAAA,GAAAA,GACQ,IAAA,CAAAzlD,IAAAA,GAAAA,CACd;oBAAA;oBAEGi2D,KAAKz7D,CAAAA,EAAAA;wBAEV,OADA7D,IAAAA,CAAK8uD,OAAAA,GAAUjrD,GACR7D,IACT;oBAAA;oBAEW0Z,IAAAA,UAAAA;wBAAoB,OAAO1Z,IAAAA,CAAK8uD,OAAAA,CAAQhjD,CAAG;oBAAA;oBAC3C+N,IAAAA,UAAAA;wBAAoB,OAAO7Z,IAAAA,CAAK8uD,OAAAA,CAAQjjD,CAAG;oBAAA;oBAC3C0zD,IAAAA,YAAAA;wBAAsB,OAAOv/D,IAAAA,CAAK8uD,OAAAA,CAAQjpD,KAAO;oBAAA;oBACjD25D,IAAAA,QAAAA;wBAAkB,OAAOx/D,IAAAA,CAAK8uD,OAAAA,CAAQn1C,KAAO;oBAAA;oBAC7CzY,IAAAA,SAAAA;wBAAmB,OAAOlB,IAAAA,CAAK8uD,OAAAA,CAAQhrD,KAAAA,CAAM5C,MAAQ;oBAAA;oBACzDu+D,QAAQ3zD,CAAAA,EAAAA;wBACb,MAAM4E,IAAO1Q,IAAAA,CAAK8uD,OAAAA,CAAQhrD,KAAAA,CAAMgF,GAAAA,CAAIgD;wBACpC,IAAK4E,GAGL,OAAO,IAAI,EAAAgvD,iBAAAA,CAAkBhvD;oBAC/B;oBACOqvC,cAAAA;wBAAgC,OAAO,IAAI,EAAAjvC,QAAY;oBAAA;gBAAA;Y;Y,M,C,G,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,iB,G,K,C;gBC5BhE,MAAA,IAAA,EAAA;gBAIA,EAAA,iBAAA,GAAA;oBACErR,YAAoBkgE,CAAAA,CAAAA;wBAAA,IAAA,CAAAA,KAAAA,GAAAA;oBAAsB;oBAE/B3tC,IAAAA,YAAAA;wBAAuB,OAAOhyB,IAAAA,CAAK2/D,KAAAA,CAAM3tC,SAAW;oBAAA;oBACpD9wB,IAAAA,SAAAA;wBAAmB,OAAOlB,IAAAA,CAAK2/D,KAAAA,CAAMz+D,MAAQ;oBAAA;oBACjD0+D,QAAQ/zD,CAAAA,EAAW1F,CAAAA,EAAAA;wBACxB,IAAA,CAAI0F,CAAAA,IAAI,KAAKA,KAAK7L,IAAAA,CAAK2/D,KAAAA,CAAMz+D,MAAAA,AAAAA,GAI7B,OAAIiF,IACFnG,CAAAA,IAAAA,CAAK2/D,KAAAA,CAAMtuD,QAAAA,CAASxF,GAAG1F,IAChBA,CAAAA,AAAAA,IAEFnG,IAAAA,CAAK2/D,KAAAA,CAAMtuD,QAAAA,CAASxF,GAAG,IAAI,EAAAiF,QAAAA,CACpC;oBAAA;oBACO2nB,kBAAkB01B,CAAAA,EAAqB0R,CAAAA,EAAsBC,CAAAA,EAAAA;wBAClE,OAAO9/D,IAAAA,CAAK2/D,KAAAA,CAAMlnC,iBAAAA,CAAkB01B,GAAW0R,GAAaC;oBAC9D;gBAAA;Y;Y,M,C,G,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,kB,G,K,C;gBCrBF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA;gBAGA,EAAA,kBAAA,GAAA;oBAOErgE,YAAoBsgE,CAAAA,CAAAA;wBAAA,IAAA,CAAAA,KAAAA,GAAAA,GAHH,IAAA,CAAAC,eAAAA,GAAkB,IAAI,EAAA/1D,YAAAA,EACvB,IAAA,CAAAg2D,cAAAA,GAAiBjgE,IAAAA,CAAKggE,eAAAA,CAAgB71D,KAAAA,EAGpDnK,IAAAA,CAAK8xD,OAAAA,GAAU,IAAI,EAAAoO,aAAAA,CAAclgE,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQuV,MAAAA,EAAQ,WAC5DluB,IAAAA,CAAKmgE,UAAAA,GAAa,IAAI,EAAAD,aAAAA,CAAclgE,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQ+H,GAAAA,EAAK,cAC5D1gB,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQoP,gBAAAA,CAAiB,IAAM/nB,IAAAA,CAAKggE,eAAAA,CAAgBxwD,IAAAA,CAAKxP,IAAAA,CAAK4Y,MAAAA,EAC3E;oBAAA;oBACWA,IAAAA,SAAAA;wBACT,IAAI5Y,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQC,MAAAA,KAAW5Y,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQuV,MAAAA,EAAU,OAAOluB,IAAAA,CAAKkuB,MAAAA;wBAC3E,IAAIluB,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQC,MAAAA,KAAW5Y,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQ+H,GAAAA,EAAO,OAAO1gB,IAAAA,CAAKogE,SAAAA;wBACxE,MAAM,IAAIz+D,MAAM,iDAClB;oBAAA;oBACWusB,IAAAA,SAAAA;wBACT,OAAOluB,IAAAA,CAAK8xD,OAAAA,CAAQwN,IAAAA,CAAKt/D,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQuV,MAAAA;oBAC9C;oBACWkyC,IAAAA,YAAAA;wBACT,OAAOpgE,IAAAA,CAAKmgE,UAAAA,CAAWb,IAAAA,CAAKt/D,IAAAA,CAAK+/D,KAAAA,CAAMpnD,OAAAA,CAAQ+H,GAAAA;oBACjD;gBAAA;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,S,G,K,GCvBF,EAAA,SAAA,GAAA;oBACEjhB,YAAoBsgE,CAAAA,CAAAA;wBAAA,IAAA,CAAAA,KAAAA,GAAAA;oBAAwB;oBAErC5tB,mBAAmBrU,CAAAA,EAAyBrtB,CAAAA,EAAAA;wBACjD,OAAOzQ,IAAAA,CAAK+/D,KAAAA,CAAM5tB,kBAAAA,CAAmBrU,GAAKmZ,CAAAA,IAAoBxmC,EAASwmC,EAAOG,OAAAA;oBAChF;oBACOipB,cAAcviC,CAAAA,EAAyBrtB,CAAAA,EAAAA;wBAC5C,OAAOzQ,IAAAA,CAAKmyC,kBAAAA,CAAmBrU,GAAIrtB;oBACrC;oBACOyhC,mBAAmBpU,CAAAA,EAAyBrtB,CAAAA,EAAAA;wBACjD,OAAOzQ,IAAAA,CAAK+/D,KAAAA,CAAM7tB,kBAAAA,CAAmBpU,GAAI,CAAChc,GAAcm1B,IAAoBxmC,EAASqR,GAAMm1B,EAAOG,OAAAA;oBACpG;oBACOkpB,cAAcxiC,CAAAA,EAAyBrtB,CAAAA,EAAAA;wBAC5C,OAAOzQ,IAAAA,CAAKkyC,kBAAAA,CAAmBpU,GAAIrtB;oBACrC;oBACOwhC,mBAAmBnU,CAAAA,EAAyBx0B,CAAAA,EAAAA;wBACjD,OAAOtJ,IAAAA,CAAK+/D,KAAAA,CAAM9tB,kBAAAA,CAAmBnU,GAAIx0B;oBAC3C;oBACOi3D,cAAcziC,CAAAA,EAAyBx0B,CAAAA,EAAAA;wBAC5C,OAAOtJ,IAAAA,CAAKiyC,kBAAAA,CAAmBnU,GAAIx0B;oBACrC;oBACO8oC,mBAAmBz6B,CAAAA,EAAelH,CAAAA,EAAAA;wBACvC,OAAOzQ,IAAAA,CAAK+/D,KAAAA,CAAM3tB,kBAAAA,CAAmBz6B,GAAOlH;oBAC9C;oBACO+vD,cAAc7oD,CAAAA,EAAelH,CAAAA,EAAAA;wBAClC,OAAOzQ,IAAAA,CAAKoyC,kBAAAA,CAAmBz6B,GAAOlH;oBACxC;gBAAA,C;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,U,G,K,GC3BF,EAAA,UAAA,GAAA;oBACEhR,YAAoBsgE,CAAAA,CAAAA;wBAAA,IAAA,CAAAA,KAAAA,GAAAA;oBAAwB;oBAErCl+D,SAAS4+D,CAAAA,EAAAA;wBACdzgE,IAAAA,CAAK+/D,KAAAA,CAAM/vB,cAAAA,CAAenuC,QAAAA,CAAS4+D;oBACrC;oBAEWC,IAAAA,WAAAA;wBACT,OAAO1gE,IAAAA,CAAK+/D,KAAAA,CAAM/vB,cAAAA,CAAe0wB,QACnC;oBAAA;oBAEWC,IAAAA,gBAAAA;wBACT,OAAO3gE,IAAAA,CAAK+/D,KAAAA,CAAM/vB,cAAAA,CAAe2wB,aACnC;oBAAA;oBAEWA,IAAAA,cAActJ,CAAAA,EAAAA;wBACvBr3D,IAAAA,CAAK+/D,KAAAA,CAAM/vB,cAAAA,CAAe2wB,aAAAA,GAAgBtJ;oBAC5C;gBAAA,C;Y;Y,K,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,a,G,E,Y,G,E,Y,G,K,C;gBCpBF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,OACA,IAAA,EAAA;gBAGa,EAAA5lB,YAAAA,GAAe,GACf,EAAAC,YAAAA,GAAe,CAAA;gBAE5B,IAAahC,IAAb,cAAmC,EAAAlwC,UAAAA;oBAmBjCC,YAA6B2f,CAAAA,CAAAA;wBAC3Bxf,KAAAA,IAbK,IAAA,CAAAghE,eAAAA,GAAAA,CAA2B,GAEjB,IAAA,CAAAvxB,SAAAA,GAAYrvC,IAAAA,CAAK6B,QAAAA,CAAS,IAAI,EAAAoI,YAAAA,GAC/B,IAAA,CAAAnI,QAAAA,GAAW9B,IAAAA,CAAKqvC,SAAAA,CAAUllC,KAAAA,EACzB,IAAA,CAAAyU,SAAAA,GAAY5e,IAAAA,CAAK6B,QAAAA,CAAS,IAAI,EAAAoI,YAAAA,GAC/B,IAAA,CAAA9H,QAAAA,GAAWnC,IAAAA,CAAK4e,SAAAA,CAAUzU,KAAAA,EASxCnK,IAAAA,CAAKyN,IAAAA,GAAOgG,KAAKG,GAAAA,CAAIwL,EAAevO,UAAAA,CAAWpD,IAAAA,IAAQ,GAAG,EAAAgkC,YAAAA,GAC1DzxC,IAAAA,CAAKU,IAAAA,GAAO+S,KAAKG,GAAAA,CAAIwL,EAAevO,UAAAA,CAAWnQ,IAAAA,IAAQ,GAAG,EAAAgxC,YAAAA,GAC1D1xC,IAAAA,CAAK2Y,OAAAA,GAAU3Y,IAAAA,CAAK6B,QAAAA,CAAS,IAAI,EAAA+vD,SAAAA,CAAUxyC,GAAgBpf,IAAAA,EAC7D;oBAAA;oBAVW6D,IAAAA,SAAAA;wBAAoB,OAAO7D,IAAAA,CAAK2Y,OAAAA,CAAQC,MAAQ;oBAAA;oBAYpDuE,OAAO1P,CAAAA,EAAc/M,CAAAA,EAAAA;wBAC1BV,IAAAA,CAAKyN,IAAAA,GAAOA,GACZzN,IAAAA,CAAKU,IAAAA,GAAOA,GACZV,IAAAA,CAAK2Y,OAAAA,CAAQwE,MAAAA,CAAO1P,GAAM/M,IAE1BV,IAAAA,CAAKqvC,SAAAA,CAAU7/B,IAAAA,CAAK;4BAAE/B,MAAAA;4BAAM/M,MAAAA;wBAAAA,EAC9B;oBAAA;oBAEOoW,QAAAA;wBACL9W,IAAAA,CAAK2Y,OAAAA,CAAQ7B,KAAAA,IACb9W,IAAAA,CAAK4gE,eAAAA,GAAAA,CAAkB,CACzB;oBAAA;oBAOOjvB,OAAOC,CAAAA,EAA2B5f,IAAAA,CAAqB,CAAA,EAAA;wBAC5D,MAAMnuB,IAAS7D,IAAAA,CAAK6D,MAAAA;wBAEpB,IAAIgpD;wBACJA,IAAU7sD,IAAAA,CAAK6gE,gBAAAA,EACVhU,KAAWA,EAAQ3rD,MAAAA,KAAWlB,IAAAA,CAAKyN,IAAAA,IAAQo/C,EAAQxuB,KAAAA,CAAM,OAAOuT,EAAUjpC,EAAAA,IAAMkkD,EAAQtuB,KAAAA,CAAM,OAAOqT,EAAUlpC,EAAAA,IAClHmkD,CAAAA,IAAUhpD,EAAOyhB,YAAAA,CAAassB,GAAW5f,IACzChyB,IAAAA,CAAK6gE,gBAAAA,GAAmBhU,CAAAA,AAAAA,GAE1BA,EAAQ76B,SAAAA,GAAYA,CAAAA;wBAEpB,MAAM8uC,IAASj9D,EAAO8V,KAAAA,GAAQ9V,EAAOglB,SAAAA,EAC/Bk4C,IAAYl9D,EAAO8V,KAAAA,GAAQ9V,EAAOgtC,YAAAA;wBAExC,IAAyB,MAArBhtC,EAAOglB,SAAAA,EAAiB;4BAE1B,MAAMm4C,IAAsBn9D,EAAOC,KAAAA,CAAMunC,MAAAA;4BAGrC01B,MAAcl9D,EAAOC,KAAAA,CAAM5C,MAAAA,GAAS,IAClC8/D,IACFn9D,EAAOC,KAAAA,CAAMsnC,OAAAA,GAAU8kB,QAAAA,CAASrD,KAEhChpD,EAAOC,KAAAA,CAAMU,IAAAA,CAAKqoD,EAAQjhB,KAAAA,GAAAA,GAG5B/nC,EAAOC,KAAAA,CAAMiH,MAAAA,CAAOg2D,IAAY,GAAG,GAAGlU,EAAQjhB,KAAAA,GAAAA,EAI3Co1B,IASChhE,IAAAA,CAAK4gE,eAAAA,IACP/8D,CAAAA,EAAOgC,KAAAA,GAAQ4N,KAAKG,GAAAA,CAAI/P,EAAOgC,KAAAA,GAAQ,GAAG,EAAA,IAT5ChC,CAAAA,EAAO8V,KAAAA,IAEF3Z,IAAAA,CAAK4gE,eAAAA,IACR/8D,EAAOgC,KAAAA,EAAAA,AAAAA,C;wB,OASN;4BAGL,MAAMq/C,IAAqB6b,IAAYD,IAAS;4BAChDj9D,EAAOC,KAAAA,CAAM4nC,aAAAA,CAAco1B,IAAS,GAAG5b,IAAqB,GAAA,KAC5DrhD,EAAOC,KAAAA,CAAM8E,GAAAA,CAAIm4D,GAAWlU,EAAQjhB,KAAAA,G;wB,CAKjC5rC;wBAAAA,IAAAA,CAAK4gE,eAAAA,IACR/8D,CAAAA,EAAOgC,KAAAA,GAAQhC,EAAO8V,KAAAA,AAAAA,GAGxB3Z,IAAAA,CAAK4e,SAAAA,CAAUpP,IAAAA,CAAK3L,EAAOgC,KAAAA,CAC7B;oBAAA;oBASOpB,YAAY6d,CAAAA,EAAc/D,CAAAA,EAA+BgE,CAAAA,EAAAA;wBAC9D,MAAM1e,IAAS7D,IAAAA,CAAK6D,MAAAA;wBACpB,IAAIye,IAAO,GAAG;4BACZ,IAAqB,MAAjBze,EAAOgC,KAAAA,EACT;4BAEF7F,IAAAA,CAAK4gE,eAAAA,GAAAA,CAAkB;wB,OACdt+C,IAAOze,EAAOgC,KAAAA,IAAShC,EAAO8V,KAAAA,IACvC3Z,CAAAA,IAAAA,CAAK4gE,eAAAA,GAAAA,CAAkB,CAAA;wBAGzB,MAAMK,IAAWp9D,EAAOgC,KAAAA;wBACxBhC,EAAOgC,KAAAA,GAAQ4N,KAAKG,GAAAA,CAAIH,KAAKC,GAAAA,CAAI7P,EAAOgC,KAAAA,GAAQyc,GAAMze,EAAO8V,KAAAA,GAAQ,IAGjEsnD,MAAap9D,EAAOgC,KAAAA,IAInB0Y,CAAAA,KACHve,IAAAA,CAAK4e,SAAAA,CAAUpP,IAAAA,CAAK3L,EAAOgC,KAAAA,CAAAA,CAE/B;oBAAA;oBAMOgsC,YAAYC,CAAAA,EAAAA;wBACjB9xC,IAAAA,CAAKyE,WAAAA,CAAYqtC,IAAa9xC,CAAAA,IAAAA,CAAKU,IAAAA,GAAO,CAAA;oBAC5C;oBAKOqxC,cAAAA;wBACL/xC,IAAAA,CAAKyE,WAAAA,CAAAA,CAAazE,IAAAA,CAAK6D,MAAAA,CAAOgC,KAAAA;oBAChC;oBAKOme,iBAAAA;wBACLhkB,IAAAA,CAAKyE,WAAAA,CAAYzE,IAAAA,CAAK6D,MAAAA,CAAO8V,KAAAA,GAAQ3Z,IAAAA,CAAK6D,MAAAA,CAAOgC,KAAAA;oBACnD;oBAEOmsC,aAAathC,CAAAA,EAAAA;wBAClB,MAAMwwD,IAAexwD,IAAO1Q,IAAAA,CAAK6D,MAAAA,CAAOgC,KAAAA;wBACnB,MAAjBq7D,KACFlhE,IAAAA,CAAKyE,WAAAA,CAAYy8D;oBAErB;gBAAA;gBAlKWxxB,IAAa,EAAA;oBAmBX,EAAA,GAAA,EAAAh9B,eAAAA;iBAAAA,EAnBFg9B,IAAA,EAAAA,aAAAA,GAAAA,C;Y;Y,M,C,G,I;gB,O,c,C,G,c;oB,O,C;gB,I,E,c,G,K,GCPb,EAAA,cAAA,GAAA;oBAAA,aAAA;wBAIS,IAAA,CAAAyxB,MAAAA,GAAiB,GAEhB,IAAA,CAAAC,SAAAA,GAAsC,EAmBhD;oBAAA;oBAjBStqD,QAAAA;wBACL9W,IAAAA,CAAKg/C,OAAAA,GAAAA,KAAUx0C,GACfxK,IAAAA,CAAKohE,SAAAA,GAAY,EAAA,EACjBphE,IAAAA,CAAKmhE,MAAAA,GAAS,CAChB;oBAAA;oBAEO/jB,UAAU3V,CAAAA,EAAAA;wBACfznC,IAAAA,CAAKmhE,MAAAA,GAAS15B,GACdznC,IAAAA,CAAKg/C,OAAAA,GAAUh/C,IAAAA,CAAKohE,SAAAA,CAAU35B,EAChC;oBAAA;oBAEOoa,YAAYpa,CAAAA,EAAWuX,CAAAA,EAAAA;wBAC5Bh/C,IAAAA,CAAKohE,SAAAA,CAAU35B,EAAAA,GAAKuX,GAChBh/C,IAAAA,CAAKmhE,MAAAA,KAAW15B,KAClBznC,CAAAA,IAAAA,CAAKg/C,OAAAA,GAAUA,CAAAA,CAEnB;oBAAA;gBAAA,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,gB,G,K,C;gBC5BF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,MAKMqiB,IAA2D;oBAM/DC,MAAM;wBACJjgD,QAAQ;wBACRkgD,UAAU,IAAA,CAAM;oBAAA;oBAOlBC,KAAK;wBACHngD,QAAQ;wBACRkgD,UAAWzgE,CAAAA,IAEQ,MAAbA,EAAE8Z,MAAAA,IAAiD,MAAb9Z,EAAEkf,MAAAA,IAI5Clf,CAAAA,EAAE0f,IAAAA,GAA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AAuBF,GAAMG,IAAAA,CAAK,CAAC/lE,GAAGsoC,IAAMtoC,EAAEuO,KAAAA,GAAQ+5B,EAAE/5B,KAAAA,GAE9Ey3D,IAAqB,EAAA;wBAC3B,KAAK,MAAMC,KAAcJ,EAAqB;4BAC5C,MAAMJ,IAAU7kE,IAAAA,CAAK8kE,SAAAA,CAAUh8D,GAAAA,CAAIu8D,EAAWvnC,EAAAA;4BAC9C,IAAA,CAAK+mC,GACH,MAAM,IAAIljE,MAAM,CAAA,iBAAA,EAAoBqjE,EAAKvC,IAAAA,CAAAA,4BAAAA,EAAmC4C,EAAWvnC,EAAAA,CAAAA,CAAAA,CAAAA,EAEzFsnC;4BAAAA,EAAY5gE,IAAAA,CAAKqgE;wB;wBAGnB,MAAMS,IAAqBL,EAAoB/jE,MAAAA,GAAS,IAAI+jE,CAAAA,CAAoB,EAAA,CAAGt3D,KAAAA,GAAQ62C,EAAKtjD,MAAAA;wBAGhG,IAAIsjD,EAAKtjD,MAAAA,KAAWokE,GAClB,MAAM,IAAI3jE,MAAM,CAAA,6CAAA,EAAgDqjE,EAAKvC,IAAAA,CAAAA,aAAAA,EAAoB6C,IAAqB,EAAA,gBAAA,EAAoB9gB,EAAKtjD,MAAAA,CAAAA,iBAAAA,CAAAA,EAIzI;wBAAA,OAAO,IAAI8jE,KAAQ;+BAAIxgB;+BAAS4gB;yBAAAA;oBAClC;gBAAA,C;Y;Y,M,S,C,E,C,E,C,E;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C,E;oB,I,G,I,U,M,E,I,I,I,I,I,K,I,I,O,wB,C,G,K,C;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,A,K,C;oB,O,I,K,K,O,c,C,G,G,I,C;gB,G,I,I,I,I,C,O,I,S,C,E,C,E;oB,O,S,C,E,C,E;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,U,G,K,C;gBC9EF,MAAA,IAAA,EAAA,MACA,IAAA,EAAA,OAgBMG,IAAwD;oBAC5D5pD,OAAO,EAAA21B,YAAAA,CAAamN,KAAAA;oBACpB+mB,MAAM,EAAAl0B,YAAAA,CAAam0B,IAAAA;oBACnBhz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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-6a8360c5465e3f8f.js","src/index.js","src/term.js","node_modules/xterm/lib/xterm.js","node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts","node_modules/xterm-addon-fit/lib/xterm-addon-fit.js","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = true;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"890e741a975ef6c8\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { initTerm } from \"./term.js\"\n\nconst $ = (params) => document.querySelector(params)\nconst $$ = (params) => document.querySelectorAll(params)\n\nclass ChatPage {\n    constructor() {\n        this.username = \"You\"\n        this.chatLog = $(\".chat-container\")\n    }\n\n    copyText(text) {\n        const copyText = document.createElement(\"textarea\")\n        copyText.setAttribute(\"style\", \"width:1px;border:0;opacity:0;\")\n        document.body.appendChild(copyText)\n        // copyText.innerHTML = text.trim()\n        copyText.value = text.trim()\n        copyText.select()\n        copyText.setSelectionRange(0, 99999)\n        // navigator.clipboard.writeText(copyText.value)\n        document.execCommand(\"copy\")\n        document.body.removeChild(copyText)\n    }\n\n    clear() {\n        this.chatLog.innerHTML = \"\"\n    }\n\n    notification(message, parent) {\n        const notification = document.createElement(\"div\")\n        notification.setAttribute(\"class\", \"notification\")\n        notification.innerText = message\n        parent.appendChild(notification)\n        setTimeout(() => {\n            notification.style.animation = \"fadeout 1s\"\n            setTimeout(() => parent.removeChild(notification), 1000)\n        }, 1500)\n    }\n\n    addMessage(username, text, time, id) {\n        const chatMessageClasses = username === this.username ? [\"chat-message-self\"] : []\n        const chatNameClasses = username === this.username ? [\"chat-message-username-self\"] : []\n        const msg = marked.parse(text.replaceAll(\"|TICK|\", \"`\").replaceAll('$|{', '${'))\n        const newMsgEl = `<div class=\"chat-message-msg\" x-msg-id=\"${id}\" x-msg-time=\"${time}\" x-msg-user=\"${username}\">${msg}</div>`\n        if (username === this.lastMessage?.username) {\n            this.lastMessage.lastMessageEl.innerHTML += newMsgEl\n            this.lastMessage.timeEl.innerHTML = time\n        } else {\n            this.chatLog.innerHTML += `<div class=\"chat-message ${chatMessageClasses}\">\n                <span class=\"chat-message-username ${chatNameClasses}\">${username}</span>\n                ${newMsgEl}\n                <span class=\"chat-message-time chat-message-time-self\">${time}</span>\n            </div>`\n        }\n        this.applyMarkdownButtons()\n        this.applyMessageButtons()\n        this.chatLog.scrollTo(0, this.chatLog.scrollHeight);\n    }\n\n    updateMessage(id, text, blockIndex=null, time = (Date.now()/1000)) {\n        const msg = $(`.chat-message-msg[x-msg-id=\"${id}\"]`)\n        if (!msg)\n            return\n        if (blockIndex !== null) {\n            const block = msg.querySelectorAll(\"pre code\")[parseInt(blockIndex, 10)]\n            block.textContent = text\n        } else {\n            msg.innerHTML = marked.parse(text)\n        }\n        msg.setAttribute(\"x-msg-updated\", time)\n    }\n\n    get lastMessage() {\n        const lastMessageEl = this.chatLog.querySelector(\".chat-message:last-child\")\n        if (!lastMessageEl)\n            return lastMessageEl\n        const usernameEl = lastMessageEl.querySelector(\".chat-message-username\")\n        const msgEl = lastMessageEl.querySelector(\".chat-message-msg:last-child\")\n        const timeEl = lastMessageEl.querySelector(\".chat-message-time\")\n        return {\n            username: usernameEl.textContent,\n            msg: msgEl?.textContent,\n            time: timeEl.textContent,\n            lastMessageEl, msgEl, timeEl\n        }\n    }\n\n    applyMessageButtons() {\n        [...$$(\".chat-message\")].forEach(el => {\n            const buttons = el.querySelector(\".message-buttons\")\n            if (buttons)\n                buttons.parentNode.removeChild(buttons)\n            const newButtons = document.createElement(\"div\")\n            newButtons.setAttribute(\"class\", \"message-buttons\")\n            newButtons.innerHTML = `<input type=\"button\" class=\"message-button\" value=\"⚙️\"/>`\n            el.prepend(newButtons)\n        })\n    }\n\n    applyMarkdownButtons() {\n        [...$$(\".chat-message-msg\")].forEach(chatMessageEl => {\n            [...chatMessageEl.querySelectorAll(\"pre code\")].forEach((el, i) => {\n                const codeButtons = el.querySelector(\".code-buttons\")\n                const msg = el.parentElement.parentElement\n                const msgId = msg.getAttribute(\"x-msg-id\")\n                el.setAttribute(\"x-block-index\", i)\n                if (codeButtons)\n                    codeButtons.parentNode.removeChild(codeButtons)\n                const lang = [...el.classList].find(c => c.includes(\"language\"))?.replace(\"language-\", \"\")\n                const newButtons = document.createElement(\"div\")\n                newButtons.setAttribute(\"class\", \"code-buttons\")\n                if ([\"python\", \"shell\", \"sh\", \"bash\"].includes(lang)) {\n                    newButtons.innerHTML = `<input type=\"button\" class=\"code-button play-button\" value=\"▶️\"/>`\n                    newButtons.innerHTML += `<input type=\"button\" class=\"code-button edit-button\" value=\"✏️\"/>`\n                }\n                newButtons.innerHTML += `<input type=\"button\" class=\"code-button save-button\" value=\"💾\"/>`\n                newButtons.innerHTML += `<input type=\"button\" class=\"code-button copy-button\" value=\"📋\"/>`\n                el.prepend(newButtons)\n                const playButton = el.querySelector(\".play-button\")\n                const editButton = el.querySelector(\".edit-button\")\n                const saveButton = el.querySelector(\".save-button\")\n                const copyButton = el.querySelector(\".copy-button\")\n                copyButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    this.copyText(el.textContent)\n                    this.notification(\"Copied!\", copyButton.parentElement)\n                })\n                playButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    window.bridge.setData([\"run_code\", msgId, i, lang, el.textContent])\n                })\n                saveButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    window.bridge.setData([\"save\", msgId, i, lang, el.textContent])\n                    //TODO add open in editor icon after saving\n                })\n                editButton?.addEventListener(\"click\", (e) => {\n                    e.preventDefault()\n                    // window.bridge.setData([\"save\", msgId, i, lang, el.textContent])\n                    //TODO edit internally or open in editor on alternate click\n                })\n            })\n        });\n    }\n}\n\nwindow.onload = function (e) {\n    marked.setOptions({\n        renderer: new marked.Renderer(),\n        highlight: function (code, lang) {\n            console.log(\"Highlighting\", lang)\n            const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n            return hljs.highlight(code, { language }).value;\n        },\n        langPrefix: 'hljs language-', // highlight.js css expects a top-level 'hljs' class.\n        pedantic: false,\n        gfm: true,\n        breaks: false,\n        sanitize: false,\n        smartypants: false,\n        xhtml: true\n    });\n    window.chatPage = new ChatPage()\n    window.chatPage.applyMessageButtons()\n    window.chatPage.applyMarkdownButtons()\n    console.log(\"ChatPage inititialised\")\n\n    // Messages to python\n    if (typeof QWebChannel !== \"undefined\") {\n        // window.chatPage.clear()\n        new QWebChannel(qt.webChannelTransport, function (channel) {\n            var bridge = channel.objects.bridge;\n            window.bridge = bridge\n        });\n    }\n\n\n    // Messages from python\n    window.handlePyMessage = function (message) {\n        if (message?.cmd === \"lastMessage\") {\n            return window.chatPage.lastMessage\n        } else {\n            console.log(\"Recieved unknown message\", message)\n            window.bridge.setData(\"Javascript didn't understand your message: \" + message);\n        }\n        return null\n    }\n\n    // initTerm()\n}","import { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\n\nconst $ = (params) => document.querySelector(params)\nconst $$ = (params) => document.querySelectorAll(params)\n\nexport function initTerm() {\n    const term = new Terminal();\n    const fitAddon = new FitAddon();\n    const termEl = $(\"#terminal\")\n    window.term = term\n    term.loadAddon(fitAddon);\n    term.open(termEl);\n    term.write('Hello from \\x1B[1;3;31mxterm.js\\x1B[0m $ ')\n\n    term.onResize(function (evt) {\n        const terminal_size = {\n            Width: evt.cols,\n            Height: evt.rows,\n        };\n        console.log(terminal_size)\n        // websocket.send(\"\\x04\" + JSON.stringify(terminal_size));\n    });\n\n    const xterm_resize_ob = new ResizeObserver(function (entries) {\n        try {\n            fitAddon && fitAddon.fit();\n        } catch (err) {\n            console.log(err);\n        }\n    });\n\n    // start observing for resize\n    xterm_resize_ob.observe(termEl);\n\n    fitAddon.fit();\n}\n",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityTreeRoot.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const oldEvent = this._currentLink ? this._lastMouseEvent : undefined;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n          if (oldEvent && this._element) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(oldEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { DebouncedIdleTask, IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_handleResize","onRender","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","css","cell","height","style","width","canvas","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","elements","parentElement","node","type","handler","options","disposed","dispose","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","oldEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_cellToRowElements","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onDispose","_removeMarker","iterator","startOverscan","endOverscan","BufferStringIterator","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity","fit","dims","proposeDimensions","core","scrollbarWidth","parentElementStyle","parentElementHeight","parentElementWidth","availableHeight","availableWidth"],"version":3,"file":"chatpage.975ef6c8.js.map","sourceRoot":"/__parcel_source_root/"}